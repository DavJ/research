
 Start         Length     Name                   Class
 0001:00401000 000018F6CH _TEXT                  CODE
 0002:0041A000 0000046A0H _DATA                  DATA
 0003:0041E6A0 000003BA8H _BSS                   BSS
 0004:00000000 0000000ACH _TLS                   TLS


Detailed map of segments
 0001:00000000 00000108 C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\C0X32.OBJ ACBP=A9
 0001:00000108 00001853 C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\PROJECTS\I FFT2\FFT2.OBJ ACBP=A9
 0001:0000195C 00000071 C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\VCL.LIB|vclinit ACBP=A9
 0001:000019D0 00000035 C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\VCL.LIB|classcre ACBP=A9
 0001:00001A08 000012C6 C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\VCL.LIB|dstring ACBP=A9
 0001:00002CBC 000032CD C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\VCL.LIB|system ACBP=A9
 0001:00005F40 000029A0 C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\VCL.LIB|sysutils ACBP=A9
 0001:000088E0 00000022 C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\VCL.LIB|windows ACBP=A9
 0001:000088F0 0000001E C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|memchr ACBP=A9
 0001:00008910 00000024 C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|memcpy ACBP=A9
 0001:00008934 0000004A C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|memmove ACBP=A9
 0001:00008980 0000008A C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|memset ACBP=A9
 0001:00008A0C 00000018 C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|wmemset ACBP=A9
 0001:00008A24 0000003C C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|strcat ACBP=A9
 0001:00008A60 0000004B C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|strcmp ACBP=A9
 0001:00008AAC 0000005A C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|strlen ACBP=A9
 0001:00008B08 0000006E C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|strncat ACBP=A9
 0001:00008B78 0000006C C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|memcmp ACBP=A9
 0001:00008BE4 0000004F C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|strncpy ACBP=A9
 0001:00008C34 00000037 C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|_stpcpy ACBP=A9
 0001:00008C6C 00000018 C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|wcslen ACBP=A9
 0001:00008C84 0000003F C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|wcscpy ACBP=A9
 0001:00008CC4 000001E0 C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|xalloc ACBP=A9
 0001:00008EA4 0000023C C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|xmsg ACBP=A9
 0001:000090E0 000001AA C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|xxv ACBP=A9
 0001:0000928C 0000000A C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|defhandl ACBP=A9
 0001:00009298 00000165 C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|except ACBP=A9
 0001:00009400 00000022 C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|ta ACBP=A9
 0001:00009424 00003CC8 C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|xx ACBP=A9
 0001:0000D0EC 0000003B C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|xxa ACBP=A9
 0001:0000D128 00000A40 C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|xxtype ACBP=A9
 0001:0000DB20 00000046 C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|setexc ACBP=A9
 0001:0000DB68 00000008 C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|access ACBP=A9
 0001:0000DB70 0000007D C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|allocbuf ACBP=A9
 0001:0000DBF0 00000008 C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|close ACBP=A9
 0001:0000DBF8 0000009F C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|fclose ACBP=A9
 0001:0000DC98 0000008F C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|fflush ACBP=A9
 0001:0000DD27 00000001 C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|files ACBP=A9
 0001:0000DD27 00000001 C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|files2 ACBP=A9
 0001:0000DD28 00000064 C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|flushout ACBP=A9
 0001:0000DD8C 00000001 C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|fmode ACBP=A9
 0001:0000DD8C 0000000D C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|fmodeptr ACBP=A9
 0001:0000DD9C 000001E3 C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|fopen ACBP=A9
 0001:0000DF80 00000034 C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|fprintf ACBP=A9
 0001:0000DFB4 000000D9 C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|fputn ACBP=A9
 0001:0000E090 00000039 C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|fscanf ACBP=A9
 0001:0000E0CC 0000015C C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|fseek ACBP=A9
 0001:0000E228 00000008 C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|isatty ACBP=A9
 0001:0000E230 0000019E C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|lgetc ACBP=A9
 0001:0000E3D0 00000110 C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|lputc ACBP=A9
 0001:0000E4E0 00000008 C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|lseek ACBP=A9
 0001:0000E4E8 00000099 C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|mkname ACBP=A9
 0001:0000E581 00000083 C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|perror ACBP=A9
 0001:0000E584 0000003B C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|printf ACBP=A9
 0001:0000E5C0 00000008 C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|read ACBP=A9
 0001:0000E5C8 00000040 C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|scanf ACBP=A9
 0001:0000E608 000007D9 C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|scanner ACBP=A9
 0001:0000EDE4 00000228 C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|scn2i64 ACBP=A9
 0001:0000F00C 0000005F C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|setvbuf ACBP=A9
 0001:0000F06C 00000070 C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|sprintf ACBP=A9
 0001:0000F0DC 00000238 C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|streams ACBP=A9
 0001:0000F314 00000062 C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|ungetc ACBP=A9
 0001:0000F378 000009B3 C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|vprinter ACBP=A9
 0001:0000FD2C 00000008 C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|write ACBP=A9
 0001:0000FD34 00000038 C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|xfclose ACBP=A9
 0001:0000FD6C 00000031 C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|xfflush ACBP=A9
 0001:0000FDA0 00000098 C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|__eof ACBP=A9
 0001:0000FE38 000001B2 C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|__read ACBP=A9
 0001:0000FFEC 000001B0 C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|__write ACBP=A9
 0001:0001019C 00000011 C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|_cfinfo ACBP=A9
 0001:000101B0 00000042 C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|_flshall ACBP=A9
 0001:000101F4 0000001D C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|_fputc ACBP=A9
 0001:00010211 00000017 C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|_umask ACBP=A9
 0001:00010214 00000025 C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|fgetc ACBP=A9
 0001:0001023C 0000002B C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|fputc ACBP=A9
 0001:00010268 000003B3 C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|handles ACBP=A9
 0001:0001061C 0000008A C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|ioerror ACBP=A9
 0001:000106A8 00000061 C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|_read ACBP=A9
 0001:0001070C 00000061 C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|_write ACBP=A9
 0001:00010770 0000003D C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|__access ACBP=A9
 0001:000107B0 00000060 C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|__close ACBP=A9
 0001:00010810 00000047 C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|__isatty ACBP=A9
 0001:00010858 00000084 C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|__lseek ACBP=A9
 0001:000108DC 00000200 C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|__open ACBP=A9
 0001:00010ADC 0000001A C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|unlink ACBP=A9
 0001:00010AF8 00000674 C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|ioststd ACBP=A9
 0001:0001116C 00000070 C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|fsbclose ACBP=A9
 0001:000111DC 000000F2 C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|fsbctr2 ACBP=A9
 0001:00011288 000000C6 C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|fsbdtr ACBP=A9
 0001:00011308 000000E7 C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|fsboflow ACBP=A9
 0001:000113F0 00000075 C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|fsbsbuf ACBP=A9
 0001:00011468 000000FE C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|fsbskoff ACBP=A9
 0001:00011568 0000010C C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|fsbsync ACBP=A9
 0001:00011674 0000014C C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|fsbuflow ACBP=A9
 0001:000117C0 0000001B C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|istasn2 ACBP=A9
 0001:000117DC 000000D6 C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|istctr1 ACBP=A9
 0001:00011874 000000BA C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|istctr4 ACBP=A9
 0001:000118F0 0000004D C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|istdget ACBP=A9
 0001:00011940 00000090 C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|istdipfx ACBP=A9
 0001:000119D0 000000B2 C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|istdtr1 ACBP=A9
 0001:00011A44 000000C5 C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|istdtr2 ACBP=A9
 0001:00011ACC 00000064 C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|isteatwh ACBP=A9
 0001:00011B30 000004BC C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|istedbl ACBP=A9
 0001:00011FEC 00000070 C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|istepchr ACBP=A9
 0001:0001205C 00000087 C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|istgpchr ACBP=A9
 0001:000120E4 000000AF C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|istgstr ACBP=A9
 0001:00012194 00000069 C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|istpback ACBP=A9
 0001:00012200 00000022 C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|ostasn2 ACBP=A9
 0001:00012224 000000C6 C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|ostctr1 ACBP=A9
 0001:000122AC 000000BA C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|ostctr3 ACBP=A9
 0001:00012328 000000CE C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|ostdtr1 ACBP=A9
 0001:000123B8 000000C5 C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|ostdtr2 ACBP=A9
 0001:00012440 00000073 C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|ostfloat ACBP=A9
 0001:000124B4 00000028 C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|ostflush ACBP=A9
 0001:000124DC 00000027 C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|ostopfx ACBP=A9
 0001:00012504 0000003D C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|ostosfx ACBP=A9
 0001:00012544 000001F0 C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|ostoutst ACBP=A9
 0001:00012734 00000035 C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|stbalc ACBP=A9
 0001:0001276C 00000091 C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|stbctr1 ACBP=A9
 0001:00012800 00000020 C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|stbdnext ACBP=A9
 0001:00012820 00000075 C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|stbdsgtn ACBP=A9
 0001:00012898 0000006E C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|stbdsptn ACBP=A9
 0001:00012908 00000037 C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|stbdtr ACBP=A9
 0001:0001293C 00000008 C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|stboflow ACBP=A9
 0001:00012944 00000008 C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|stbpbfl ACBP=A9
 0001:0001294C 00000021 C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|stbsbuf ACBP=A9
 0001:00012970 00000067 C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|stbsetb ACBP=A9
 0001:000129D8 00000034 C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|stbsetg ACBP=A9
 0001:00012A0C 00000025 C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|stbsetp ACBP=A9
 0001:00012A34 00000008 C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|stbskoff ACBP=A9
 0001:00012A3C 0000001B C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|stbskpos ACBP=A9
 0001:00012A58 00000041 C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|stbsputn ACBP=A9
 0001:00012A9C 00000037 C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|stbsync ACBP=A9
 0001:00012AD4 0000001E C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|stbuflow ACBP=A9
 0001:00012AF4 0000003C C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|stclear ACBP=A9
 0001:00012B30 00000092 C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|stctr1 ACBP=A9
 0001:00012B84 000000B8 C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|stdtr ACBP=A9
 0001:00012BFC 00000048 C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|stinit ACBP=A9
 0001:00012C44 00000058 C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|stsetf1 ACBP=A9
 0001:00012C9C 0000002A C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|stsetst ACBP=A9
 0001:00012CC8 00000046 C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|sttie ACBP=A9
 0001:00012D10 00000026 C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|fsblkmt ACBP=A9
 0001:00012D36 00000001 C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|bigctype ACBP=A9
 0001:00012D38 00000588 C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|getinfo ACBP=A9
 0001:000132C0 00000103 C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|wis ACBP=A9
 0001:000133C4 00000055 C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|iswctype ACBP=A9
 0001:00013419 00000001 C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|clocale ACBP=A9
 0001:0001341C 000004C8 C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|mbyte1 ACBP=A9
 0001:000138E4 00000200 C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|_ll ACBP=A9
 0001:00013AE4 0000011C C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|acosasin ACBP=A9
 0001:00013C00 000000B3 C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|atan2 ACBP=A9
 0001:00013CB4 00000013 C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|clear87 ACBP=A9
 0001:00013CC8 00000042 C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|cos ACBP=A9
 0001:00013D0C 000000E4 C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|cplx1 ACBP=A9
 0001:00013DF0 00000F31 C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|cplx2 ACBP=A9
 0001:00014D24 00000028 C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|ctrl87 ACBP=A9
 0001:00014D4C 00000018 C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|cvtentry ACBP=A9
 0001:00014D64 0000006C C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|exp ACBP=A9
 0001:00014DD0 0000005F C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|f87atan ACBP=A9
 0001:00014E30 000000CD C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|f87exp ACBP=A9
 0001:00014F00 00000048 C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|f87log ACBP=A9
 0001:00014F48 000000E2 C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|f87sine ACBP=A9
 0001:0001502C 0000000D C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|fabs ACBP=A9
 0001:0001503C 00000017 C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|fpreset ACBP=A9
 0001:00015054 0000002D C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|fuildq ACBP=A9
 0001:00015084 00000021 C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|fuistq ACBP=A9
 0001:000150A8 00000011 C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|fxam ACBP=A9
 0001:000150BC 000000B1 C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|int64toa ACBP=A9
 0001:00015170 0000006D C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|log ACBP=A9
 0001:000151E0 000001DA C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|pow ACBP=A9
 0001:000153BC 00000025 C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|qdiv10 ACBP=A9
 0001:000153E4 0000002E C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|qmul10 ACBP=A9
 0001:00015414 00000042 C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|sin ACBP=A9
 0001:00015458 0000003A C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|sqrt ACBP=A9
 0001:00015494 00000018 C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|cvtfak ACBP=A9
 0001:000154AC 00000018 C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|cvtfakw ACBP=A9
 0001:000154C4 00000001 C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|deflt87 ACBP=A9
 0001:000154C4 00000001 C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|hugeval ACBP=A9
 0001:000154C4 00000001 C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|initcvt ACBP=A9
 0001:000154C4 000000FD C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|ldtrunc ACBP=A9
 0001:000155C4 0000008F C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|longtoa ACBP=A9
 0001:00015654 00000075 C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|ltoa1 ACBP=A9
 0001:000156CC 0000002A C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|matherr ACBP=A9
 0001:000156F8 0000002E C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|matherrl ACBP=A9
 0001:00015728 00000016 C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|mathptr ACBP=A9
 0001:0001573E 00000001 C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|mathwhy ACBP=A9
 0001:00015740 000002F9 C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|realcvt ACBP=A9
 0001:00015A3C 00000331 C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|realcvtw ACBP=A9
 0001:00015D70 000004E1 C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|scantod ACBP=A9
 0001:00016254 000004E1 C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|scanwtod ACBP=A9
 0001:00016738 000002D0 C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|xcvt ACBP=A9
 0001:00016A08 000002EF C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|xcvtw ACBP=A9
 0001:00016CF8 000000B0 C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|_matherr ACBP=A9
 0001:00016DA8 00000178 C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|_pow10 ACBP=A9
 0001:00016F20 000000FD C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|mbctype ACBP=A9
 0001:00017020 00000020 C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|mbisspc ACBP=A9
 0001:00017040 00000056 C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|mbsrchr ACBP=A9
 0001:00017098 0000002B C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|calloc ACBP=A9
 0001:000170C4 0000000F C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|del ACBP=A9
 0001:000170D4 0000000F C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|delarray ACBP=A9
 0001:000170E4 00000048 C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|new ACBP=A9
 0001:0001712C 0000000F C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|newarray ACBP=A9
 0001:0001713C 0000014C C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|setnew ACBP=A9
 0001:00017244 00000049 C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|pheap ACBP=A9
 0001:00017290 000000A6 C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|assert ACBP=A9
 0001:00017338 00000009 C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|errno ACBP=A9
 0001:00017344 00000163 C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|errormsg ACBP=A9
 0001:000174A8 000000BB C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|ermsghlp ACBP=A9
 0001:00017564 00000022 C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|abort ACBP=A9
 0001:00017588 000000C7 C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|exit ACBP=A9
 0001:00017650 00000001 C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|nowild ACBP=A9
 0001:00017654 000002E7 C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|setargv ACBP=A9
 0001:0001793C 00000045 C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|setargv0 ACBP=A9
 0001:00017984 000001D2 C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|setenvp ACBP=A9
 0001:00017B58 0000031C C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|signal ACBP=A9
 0001:00017E74 00000001 C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|globals ACBP=A9
 0001:00017E74 0000016F C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|initexit ACBP=A9
 0001:00017FE4 00000166 C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|startup ACBP=A9
 0001:0001814C 00000078 C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|ctor2 ACBP=A9
 0001:00018180 000001C0 C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|ctor3 ACBP=A9
 0001:00018340 0000072A C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|strings ACBP=A9
 0001:00018A38 00000080 C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|tls ACBP=A9
 0001:00018AB8 000001BD C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|thrddata ACBP=A9
 0001:00018C78 000000D5 C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|_lock ACBP=A9
 0001:00018D50 00000064 C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|getdate ACBP=A9
 0001:00018DB4 0000003B C=CODE    S=_TEXT    G=(none)   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|thrdbuf ACBP=A9
 0002:000000EC 00000073 C=DATA    S=_DATA    G=DGROUP   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\C0X32.OBJ ACBP=A9
 0002:00000160 0000013C C=DATA    S=_DATA    G=DGROUP   M=C:\PROGRAM FILES\BORLAND\CBUILDER\PROJECTS\I FFT2\FFT2.OBJ ACBP=A9
 0002:0000029C 00000048 C=DATA    S=_DATA    G=DGROUP   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\VCL.LIB|vclinit ACBP=A9
 0002:000002E4 0000097C C=DATA    S=_DATA    G=DGROUP   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\VCL.LIB|dstring ACBP=A9
 0002:00000C18 0000007E C=DATA    S=_DATA    G=DGROUP   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\VCL.LIB|system ACBP=A9
 0002:00000C92 000000FE C=DATA    S=_DATA    G=DGROUP   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\VCL.LIB|sysutils ACBP=A9
 0002:00000D90 00000060 C=DATA    S=_DATA    G=DGROUP   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|xalloc ACBP=A9
 0002:00000DF0 000000FC C=DATA    S=_DATA    G=DGROUP   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|xmsg ACBP=A9
 0002:00000EEC 000000EC C=DATA    S=_DATA    G=DGROUP   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|xxv ACBP=A9
 0002:00000FD8 00000014 C=DATA    S=_DATA    G=DGROUP   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|except ACBP=A9
 0002:00000FEC 00001440 C=DATA    S=_DATA    G=DGROUP   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|xx ACBP=A9
 0002:000023E4 0000031C C=DATA    S=_DATA    G=DGROUP   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|xxtype ACBP=A9
 0002:000026F0 000004B0 C=DATA    S=_DATA    G=DGROUP   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|files ACBP=A9
 0002:00002BA0 000000CC C=DATA    S=_DATA    G=DGROUP   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|files2 ACBP=A9
 0002:00002C6C 00000004 C=DATA    S=_DATA    G=DGROUP   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|fmode ACBP=A9
 0002:00002C70 00000004 C=DATA    S=_DATA    G=DGROUP   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|fmodeptr ACBP=A9
 0002:00002C74 0000000C C=DATA    S=_DATA    G=DGROUP   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|mkname ACBP=A9
 0002:00002C80 0000047C C=DATA    S=_DATA    G=DGROUP   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|perror ACBP=A9
 0002:000030FC 00000080 C=DATA    S=_DATA    G=DGROUP   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|scanner ACBP=A9
 0002:0000317C 00000054 C=DATA    S=_DATA    G=DGROUP   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|streams ACBP=A9
 0002:000031D0 00000076 C=DATA    S=_DATA    G=DGROUP   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|vprinter ACBP=A9
 0002:00003248 00000004 C=DATA    S=_DATA    G=DGROUP   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|_cfinfo ACBP=A9
 0002:0000324C 00000004 C=DATA    S=_DATA    G=DGROUP   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|_umask ACBP=A9
 0002:00003250 00000054 C=DATA    S=_DATA    G=DGROUP   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|handles ACBP=A9
 0002:000032A4 0000012B C=DATA    S=_DATA    G=DGROUP   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|ioerror ACBP=A9
 0002:000033D0 000001F0 C=DATA    S=_DATA    G=DGROUP   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|ioststd ACBP=A9
 0002:000035C0 00000064 C=DATA    S=_DATA    G=DGROUP   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|fsbctr2 ACBP=A9
 0002:00003624 00000068 C=DATA    S=_DATA    G=DGROUP   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|fsbdtr ACBP=A9
 0002:0000364C 00000040 C=DATA    S=_DATA    G=DGROUP   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|istctr1 ACBP=A9
 0002:0000368C 00000040 C=DATA    S=_DATA    G=DGROUP   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|istctr4 ACBP=A9
 0002:000036CC 00000040 C=DATA    S=_DATA    G=DGROUP   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|istdtr1 ACBP=A9
 0002:000036F0 00000040 C=DATA    S=_DATA    G=DGROUP   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|istdtr2 ACBP=A9
 0002:00003714 00000040 C=DATA    S=_DATA    G=DGROUP   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|ostctr1 ACBP=A9
 0002:00003754 00000040 C=DATA    S=_DATA    G=DGROUP   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|ostctr3 ACBP=A9
 0002:00003794 00000040 C=DATA    S=_DATA    G=DGROUP   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|ostdtr1 ACBP=A9
 0002:000037B8 00000040 C=DATA    S=_DATA    G=DGROUP   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|ostdtr2 ACBP=A9
 0002:000037DC 00000004 C=DATA    S=_DATA    G=DGROUP   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|ostfloat ACBP=A9
 0002:000037E0 00000064 C=DATA    S=_DATA    G=DGROUP   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|stbctr1 ACBP=A9
 0002:00003844 00000040 C=DATA    S=_DATA    G=DGROUP   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|stbdtr ACBP=A9
 0002:00003844 00000034 C=DATA    S=_DATA    G=DGROUP   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|stctr1 ACBP=A9
 0002:00003878 00000054 C=DATA    S=_DATA    G=DGROUP   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|stdtr ACBP=A9
 0002:000038BC 00000202 C=DATA    S=_DATA    G=DGROUP   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|bigctype ACBP=A9
 0002:00003AC0 00000008 C=DATA    S=_DATA    G=DGROUP   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|getinfo ACBP=A9
 0002:00003AC8 0000025C C=DATA    S=_DATA    G=DGROUP   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|clocale ACBP=A9
 0002:00003D24 0000001C C=DATA    S=_DATA    G=DGROUP   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|acosasin ACBP=A9
 0002:00003D40 00000018 C=DATA    S=_DATA    G=DGROUP   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|atan2 ACBP=A9
 0002:00003D58 0000000C C=DATA    S=_DATA    G=DGROUP   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|cos ACBP=A9
 0002:00003D64 00000018 C=DATA    S=_DATA    G=DGROUP   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|cplx2 ACBP=A9
 0002:00003D7C 0000000C C=DATA    S=_DATA    G=DGROUP   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|exp ACBP=A9
 0002:00003D88 00000014 C=DATA    S=_DATA    G=DGROUP   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|f87atan ACBP=A9
 0002:00003D9C 00000012 C=DATA    S=_DATA    G=DGROUP   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|f87exp ACBP=A9
 0002:00003DB0 00000016 C=DATA    S=_DATA    G=DGROUP   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|f87log ACBP=A9
 0002:00003DC8 0000001C C=DATA    S=_DATA    G=DGROUP   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|f87sine ACBP=A9
 0002:00003DE4 0000000C C=DATA    S=_DATA    G=DGROUP   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|log ACBP=A9
 0002:00003DF0 0000001C C=DATA    S=_DATA    G=DGROUP   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|pow ACBP=A9
 0002:00003E0C 0000000C C=DATA    S=_DATA    G=DGROUP   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|sin ACBP=A9
 0002:00003E18 00000010 C=DATA    S=_DATA    G=DGROUP   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|sqrt ACBP=A9
 0002:00003E28 00000068 C=DATA    S=_DATA    G=DGROUP   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|cvtfak ACBP=A9
 0002:00003E90 00000068 C=DATA    S=_DATA    G=DGROUP   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|cvtfakw ACBP=A9
 0002:00003EF8 00000004 C=DATA    S=_DATA    G=DGROUP   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|deflt87 ACBP=A9
 0002:00003EFC 0000003A C=DATA    S=_DATA    G=DGROUP   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|hugeval ACBP=A9
 0002:00003F38 00000008 C=DATA    S=_DATA    G=DGROUP   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|initcvt ACBP=A9
 0002:00003F40 00000008 C=DATA    S=_DATA    G=DGROUP   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|mathptr ACBP=A9
 0002:00003F48 00000044 C=DATA    S=_DATA    G=DGROUP   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|mathwhy ACBP=A9
 0002:00003F8C 00000014 C=DATA    S=_DATA    G=DGROUP   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|realcvt ACBP=A9
 0002:00003FA0 00000028 C=DATA    S=_DATA    G=DGROUP   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|realcvtw ACBP=A9
 0002:00003FC8 00000028 C=DATA    S=_DATA    G=DGROUP   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|scantod ACBP=A9
 0002:00003FF0 00000028 C=DATA    S=_DATA    G=DGROUP   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|scanwtod ACBP=A9
 0002:00004018 00000010 C=DATA    S=_DATA    G=DGROUP   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|_matherr ACBP=A9
 0002:00004028 000000C0 C=DATA    S=_DATA    G=DGROUP   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|_pow10 ACBP=A9
 0002:000040E8 00000048 C=DATA    S=_DATA    G=DGROUP   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|mbctype ACBP=A9
 0002:00004130 00000084 C=DATA    S=_DATA    G=DGROUP   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|setnew ACBP=A9
 0002:000041B4 00000024 C=DATA    S=_DATA    G=DGROUP   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|assert ACBP=A9
 0002:000041D8 0000000C C=DATA    S=_DATA    G=DGROUP   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|errormsg ACBP=A9
 0002:000041E4 00000024 C=DATA    S=_DATA    G=DGROUP   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|ermsghlp ACBP=A9
 0002:00004208 00000020 C=DATA    S=_DATA    G=DGROUP   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|abort ACBP=A9
 0002:00004228 00000010 C=DATA    S=_DATA    G=DGROUP   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|exit ACBP=A9
 0002:00004238 00000078 C=DATA    S=_DATA    G=DGROUP   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|setargv ACBP=A9
 0002:000042B0 00000020 C=DATA    S=_DATA    G=DGROUP   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|setargv0 ACBP=A9
 0002:000042D0 0000006C C=DATA    S=_DATA    G=DGROUP   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|setenvp ACBP=A9
 0002:0000433C 0000005E C=DATA    S=_DATA    G=DGROUP   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|signal ACBP=A9
 0002:0000439C 00000018 C=DATA    S=_DATA    G=DGROUP   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|initexit ACBP=A9
 0002:000043B4 00000034 C=DATA    S=_DATA    G=DGROUP   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|ctor2 ACBP=A9
 0002:000043E8 00000068 C=DATA    S=_DATA    G=DGROUP   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|ctor3 ACBP=A9
 0002:00004450 00000220 C=DATA    S=_DATA    G=DGROUP   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|strings ACBP=A9
 0002:00004670 0000001C C=DATA    S=_DATA    G=DGROUP   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|thrddata ACBP=A9
 0002:0000468C 00000014 C=DATA    S=_DATA    G=DGROUP   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|_lock ACBP=A9
 0003:00000000 00000018 C=BSS     S=_BSS     G=DGROUP   M=C:\PROGRAM FILES\BORLAND\CBUILDER\PROJECTS\I FFT2\FFT2.OBJ ACBP=A9
 0003:00000018 000004A4 C=BSS     S=_BSS     G=DGROUP   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\VCL.LIB|system ACBP=A9
 0003:000004BC 000000D4 C=BSS     S=_BSS     G=DGROUP   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\VCL.LIB|sysutils ACBP=A9
 0003:00000590 00000004 C=BSS     S=_BSS     G=DGROUP   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\VCL.LIB|windows ACBP=A9
 0003:00000594 00000008 C=BSS     S=_BSS     G=DGROUP   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|xxv ACBP=A9
 0003:0000059C 00000008 C=BSS     S=_BSS     G=DGROUP   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|except ACBP=A9
 0003:000005A4 00000010 C=BSS     S=_BSS     G=DGROUP   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|xx ACBP=A9
 0003:000005B4 00000002 C=BSS     S=_BSS     G=DGROUP   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|xxtype ACBP=A9
 0003:000005B8 00000190 C=BSS     S=_BSS     G=DGROUP   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|files2 ACBP=A9
 0003:00000748 00000001 C=BSS     S=_BSS     G=DGROUP   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|lgetc ACBP=A9
 0003:00000749 00000002 C=BSS     S=_BSS     G=DGROUP   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|mkname ACBP=A9
 0003:0000074C 00000008 C=BSS     S=_BSS     G=DGROUP   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|streams ACBP=A9
 0003:00000754 00000008 C=BSS     S=_BSS     G=DGROUP   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|handles ACBP=A9
 0003:0000075C 00000130 C=BSS     S=_BSS     G=DGROUP   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|ioststd ACBP=A9
 0003:0000088C 00000004 C=BSS     S=_BSS     G=DGROUP   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|stdtr ACBP=A9
 0003:0000088C 00000108 C=BSS     S=_BSS     G=DGROUP   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|mbctype ACBP=A9
 0003:00000994 00000004 C=BSS     S=_BSS     G=DGROUP   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|setnew ACBP=A9
 0003:00000998 00000100 C=BSS     S=_BSS     G=DGROUP   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|assert ACBP=A9
 0003:00000A98 00000018 C=BSS     S=_BSS     G=DGROUP   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|ermsghlp ACBP=A9
 0003:00000AB0 00000080 C=BSS     S=_BSS     G=DGROUP   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|exit ACBP=A9
 0003:00000B30 0000000C C=BSS     S=_BSS     G=DGROUP   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|setargv ACBP=A9
 0003:00000B3C 00000010 C=BSS     S=_BSS     G=DGROUP   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|setenvp ACBP=A9
 0003:00000B4C 00000048 C=BSS     S=_BSS     G=DGROUP   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|globals ACBP=A9
 0003:00000B94 00000008 C=BSS     S=_BSS     G=DGROUP   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|tls ACBP=A9
 0003:00000B9C 00000008 C=BSS     S=_BSS     G=DGROUP   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|thrddata ACBP=A9
 0003:00000BA4 00003004 C=BSS     S=_BSS     G=DGROUP   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|_lock ACBP=A9
 0004:00000000 00000008 C=TLS     S=_TLS     G=DGROUP   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\VCL.LIB|system ACBP=A9
 0004:00000008 000000A4 C=TLS     S=_TLS     G=DGROUP   M=C:\PROGRAM FILES\BORLAND\CBUILDER\LIB\CP32MT.LIB|xxv ACBP=A9

  Address         Publics by Name

 0001:00003BB8      @$xp$13System@String
 0001:00001998      @$xp$14System@TObject
 0003:00000000      @B1492_2
 0003:00000018      @B1558_2
 0003:000004BC      @B1559_2
 0003:00000590      @B1565_1
 0003:00000594      @B1844_2
 0003:0000059C      @B1848_2
 0003:000005A4      @B1850_2
 0003:000005B4      @B1852_2
 0003:000005B8      @B1877_2
 0003:00000748      @B1909_1
 0003:0000074C      @B1946_2
 0003:00000754      @B2039_2
 0003:0000075C      @B2084_2
 0003:0000088C      @B2486_2
 0003:00000994      @B2565_2
 0003:00000998      @B2578_2
 0003:00000A98      @B2589_2
 0003:00000AB0      @B2613_2
 0003:00000B30      @B2621_2
 0003:00000B3C      @B2655_2
 0003:00000B4C      @B2663_1
 0003:00000B94      @B2740_1
 0003:00000B9C      @B2742_2
 0003:00000BA4      @B2745_2
 0001:00000000      @C1491_0
 0001:00000108      @C1492_0
 0001:0000195C      @C1498_0
 0001:000019D0      @C1503_0
 0001:00001A08      @C1527_0
 0001:00002CBC      @C1558_0
 0001:00003AF8      @C1558_4
 0001:00005F40      @C1559_0
 0001:000067EC      @C1559_3
 0001:000088E0      @C1565_0
 0001:000088E0      @C1565_2
 0001:000088F0      @C1778_0
 0001:00008910      @C1780_0
 0001:00008934      @C1782_0
 0001:00008980      @C1783_0
 0001:00008A0C      @C1784_0
 0001:00008A24      @C1791_0
 0001:00008A60      @C1793_0
 0001:00008AAC      @C1795_0
 0001:00008B08      @C1796_0
 0001:00008B78      @C1804_0
 0001:00008BE4      @C1810_0
 0001:00008C34      @C1820_0
 0001:00008C6C      @C1821_0
 0001:00008C84      @C1822_0
 0001:00008CC4      @C1842_0
 0001:00008EA4      @C1843_0
 0001:000090E0      @C1844_0
 0001:000090E0      @C1844_4
 0001:0000928C      @C1847_0
 0001:00009298      @C1848_0
 0001:000093C0      @C1848_3
 0001:000093D8      @C1848_4
 0001:00009400      @C1849_0
 0001:00009424      @C1850_0
 0001:00009424      @C1850_3
 0001:0000B8FF      @C1850_4
 0001:0000D0EC      @C1851_0
 0001:0000D128      @C1852_0
 0001:0000DB20      @C1854_0
 0001:0000DB68      @C1855_0
 0001:0000DB70      @C1856_0
 0001:0000DBF0      @C1860_0
 0001:0000DBF8      @C1868_0
 0001:0000DC98      @C1870_0
 0001:0000DD28      @C1880_0
 0001:0000DD8C      @C1882_0
 0001:0000DD9C      @C1885_0
 0001:0000DF80      @C1886_0
 0001:0000DFB4      @C1889_0
 0001:0000E090      @C1896_0
 0001:0000E0CC      @C1898_0
 0001:0000E228      @C1908_0
 0001:0000E230      @C1909_0
 0001:0000E3D0      @C1911_0
 0001:0000E4E0      @C1913_0
 0001:0000E4E8      @C1915_0
 0001:0000E584      @C1919_0
 0001:0000E5C0      @C1924_0
 0001:0000E5C8      @C1928_0
 0001:0000E608      @C1930_0
 0001:0000EDE4      @C1934_0
 0001:0000F00C      @C1939_0
 0001:0000F06C      @C1942_0
 0001:0000F0DC      @C1946_0
 0001:0000F1A0      @C1946_3
 0001:0000F314      @C1952_0
 0001:0000F378      @C1958_0
 0001:0000FD2C      @C1974_0
 0001:0000FD34      @C1980_0
 0001:0000FD6C      @C1981_0
 0001:0000FDA0      @C1984_0
 0001:0000FE38      @C1985_0
 0001:0000FFEC      @C1987_0
 0001:0001019C      @C1988_0
 0001:000101B0      @C1993_0
 0001:000101F4      @C1994_0
 0001:00010214      @C2010_0
 0001:0001023C      @C2012_0
 0001:00010268      @C2039_0
 0001:0001061C      @C2040_0
 0001:000106A8      @C2065_0
 0001:0001070C      @C2067_0
 0001:00010770      @C2070_0
 0001:000107B0      @C2071_0
 0001:00010810      @C2075_0
 0001:00010858      @C2076_0
 0001:000108DC      @C2077_0
 0001:00010ADC      @C2082_0
 0001:00010AF8      @C2084_0
 0001:00010AF8      @C2084_3
 0001:00010DD0      @C2084_4
 0001:00010D38      @C2084_5
 0001:00010E40      @C2084_6
 0001:0001116C      @C2094_0
 0001:000111DC      @C2096_0
 0001:00011288      @C2098_0
 0001:00011308      @C2099_0
 0001:000113F0      @C2101_0
 0001:00011468      @C2102_0
 0001:00011568      @C2103_0
 0001:00011674      @C2104_0
 0001:000117C0      @C2137_0
 0001:000117DC      @C2138_0
 0001:00011874      @C2141_0
 0001:000118F0      @C2142_0
 0001:00011940      @C2143_0
 0001:000119D0      @C2144_0
 0001:00011A44      @C2145_0
 0001:00011ACC      @C2146_0
 0001:00011B30      @C2150_0
 0001:00011FEC      @C2155_0
 0001:0001205C      @C2165_0
 0001:000120E4      @C2167_0
 0001:00012194      @C2171_0
 0001:00012200      @C2192_0
 0001:00012224      @C2193_0
 0001:000122AC      @C2195_0
 0001:00012328      @C2196_0
 0001:000123B8      @C2197_0
 0001:00012440      @C2198_0
 0001:000124B4      @C2199_0
 0001:000124DC      @C2206_0
 0001:00012504      @C2207_0
 0001:00012544      @C2208_0
 0001:00012734      @C2243_0
 0001:0001276C      @C2244_0
 0001:00012800      @C2247_0
 0001:00012820      @C2248_0
 0001:00012898      @C2249_0
 0001:00012908      @C2250_0
 0001:0001293C      @C2251_0
 0001:00012944      @C2252_0
 0001:0001294C      @C2253_0
 0001:00012970      @C2254_0
 0001:000129D8      @C2255_0
 0001:00012A0C      @C2256_0
 0001:00012A34      @C2258_0
 0001:00012A3C      @C2259_0
 0001:00012A58      @C2260_0
 0001:00012A9C      @C2262_0
 0001:00012AD4      @C2264_0
 0001:00012AF4      @C2265_0
 0001:00012B30      @C2266_0
 0001:00012B84      @C2268_0
 0001:00012BFC      @C2270_0
 0001:00012C44      @C2273_0
 0001:00012C9C      @C2275_0
 0001:00012CC8      @C2278_0
 0001:00012D10      @C2285_0
 0001:00012D38      @C2292_0
 0001:000132C0      @C2294_0
 0001:000133C4      @C2296_0
 0001:0001341C      @C2319_0
 0001:000138E4      @C2345_0
 0001:00013AE4      @C2346_0
 0001:00013C00      @C2349_0
 0001:00013CB4      @C2354_0
 0001:00013CC8      @C2355_0
 0001:00013D0C      @C2359_0
 0001:00013DF0      @C2360_0
 0001:00014D04      @C2360_2
 0001:00014D24      @C2363_0
 0001:00014D4C      @C2364_0
 0001:00014D64      @C2367_0
 0001:00014DD0      @C2370_0
 0001:00014E30      @C2371_0
 0001:00014F00      @C2372_0
 0001:00014F48      @C2373_0
 0001:0001502C      @C2374_0
 0001:0001503C      @C2383_0
 0001:00015054      @C2387_0
 0001:00015084      @C2388_0
 0001:000150A8      @C2389_0
 0001:000150BC      @C2394_0
 0001:00015170      @C2398_0
 0001:000151E0      @C2408_0
 0001:000153BC      @C2410_0
 0001:000153E4      @C2411_0
 0001:00015414      @C2415_0
 0001:00015458      @C2419_0
 0001:00015494      @C2437_0
 0001:000154AC      @C2438_0
 0001:000154C4      @C2445_0
 0001:000155C4      @C2446_0
 0001:00015654      @C2448_0
 0001:000156CC      @C2450_0
 0001:000156F8      @C2451_0
 0001:00015728      @C2452_0
 0001:00015740      @C2457_0
 0001:00015A3C      @C2458_0
 0001:00015D70      @C2459_0
 0001:00016254      @C2460_0
 0001:00016738      @C2467_0
 0001:00016A08      @C2468_0
 0001:00016CF8      @C2473_0
 0001:00016DA8      @C2474_0
 0001:00016F20      @C2486_0
 0001:00017010      @C2486_3
 0001:00017020      @C2497_0
 0001:00017040      @C2528_0
 0001:00017098      @C2558_0
 0001:000170C4      @C2559_0
 0001:000170D4      @C2560_0
 0001:000170E4      @C2561_0
 0001:0001712C      @C2562_0
 0001:0001713C      @C2565_0
 0001:000171A0      @C2565_3
 0001:000171AC      @C2565_4
 0001:0001720C      @C2565_5
 0001:00017244      @C2572_0
 0001:00017290      @C2578_0
 0001:00017338      @C2583_0
 0001:00017344      @C2588_0
 0001:000174A8      @C2589_0
 0001:00017564      @C2595_0
 0001:00017588      @C2613_0
 0001:00017650      @C2617_0
 0001:00017654      @C2621_0
 0001:00017654      @C2621_3
 0001:000177E8      @C2621_4
 0001:0001793C      @C2648_0
 0001:0001793C      @C2648_2
 0001:00017974      @C2648_3
 0001:00017984      @C2655_0
 0001:00017B24      @C2655_3
 0001:000179A4      @C2655_4
 0001:00017B58      @C2657_0
 0001:00017E74      @C2664_0
 0001:00017FD0      @C2664_2
 0001:00017FE4      @C2665_0
 0001:0001814C      @C2690_0
 0001:00018180      @C2691_0
 0001:00018340      @C2734_0
 0001:00018A38      @C2740_0
 0001:00018A38      @C2740_2
 0001:00018AA0      @C2740_3
 0001:00018AB8      @C2742_0
 0001:00018BB0      @C2742_3
 0001:00018BC4      @C2742_4
 0001:00018C78      @C2745_0
 0001:00018D38      @C2745_3
 0001:00018D50      @C2763_0
 0001:00018DB4      @C2770_0
 0002:000000EC      @D1491_1
 0002:00000160      @D1492_1
 0002:000002E4      @D1527_1
 0002:00000C18      @D1558_1
 0002:00000D90      @D1842_1
 0002:00000DF0      @D1843_1
 0002:00000EEC      @D1844_1
 0002:00000FD8      @D1848_1
 0002:00000FEC      @D1850_1
 0002:000023E4      @D1852_1
 0002:000026F0      @D1876_1
 0002:00002BA0      @D1877_1
 0002:00002C6C      @D1881_1
 0002:00002C70      @D1882_1
 0002:00002C74      @D1915_1
 0002:00002C80      @D1918_1
 0002:000030FC      @D1930_1
 0002:0000317C      @D1946_1
 0002:000031D0      @D1958_1
 0002:00003248      @D1988_1
 0002:0000324C      @D2000_1
 0002:00003250      @D2039_1
 0002:000032A4      @D2040_1
 0002:000033D0      @D2084_1
 0002:000035C0      @D2096_1
 0002:00003624      @D2098_1
 0002:0000364C      @D2138_1
 0002:0000368C      @D2141_1
 0002:000036CC      @D2144_1
 0002:000036F0      @D2145_1
 0002:00003714      @D2193_1
 0002:00003754      @D2195_1
 0002:00003794      @D2196_1
 0002:000037B8      @D2197_1
 0002:000037DC      @D2198_1
 0002:000037E0      @D2244_1
 0002:00003844      @D2266_1
 0002:00003878      @D2268_1
 0002:000038BC      @D2286_1
 0002:00003AC0      @D2292_1
 0002:00003AC8      @D2298_1
 0002:00003D24      @D2346_1
 0002:00003D40      @D2349_1
 0002:00003D58      @D2355_1
 0002:00003D64      @D2360_1
 0002:00003D7C      @D2367_1
 0002:00003D88      @D2370_1
 0002:00003D9C      @D2371_1
 0002:00003DB0      @D2372_1
 0002:00003DC8      @D2373_1
 0002:00003DE4      @D2398_1
 0002:00003DF0      @D2408_1
 0002:00003E0C      @D2415_1
 0002:00003E18      @D2419_1
 0002:00003E28      @D2437_1
 0002:00003E90      @D2438_1
 0002:00003EF8      @D2439_1
 0002:00003EFC      @D2442_1
 0002:00003F38      @D2443_1
 0002:00003F40      @D2452_1
 0002:00003F48      @D2453_1
 0002:00003F8C      @D2457_1
 0002:00003FA0      @D2458_1
 0002:00003FC8      @D2459_1
 0002:00003FF0      @D2460_1
 0002:00004018      @D2473_1
 0002:00004028      @D2474_1
 0002:000040E8      @D2486_1
 0002:00004130      @D2565_1
 0002:000041B4      @D2578_1
 0002:000041D8      @D2588_1
 0002:000041E4      @D2589_1
 0002:00004208      @D2595_1
 0002:00004228      @D2613_1
 0002:00004238      @D2621_1
 0002:000042B0      @D2648_1
 0002:000042D0      @D2655_1
 0002:0000433C      @D2657_1
 0002:0000439C      @D2664_1
 0002:000043B4      @D2690_1
 0002:000043E8      @D2691_1
 0002:00004450      @D2734_1
 0002:00004670      @D2742_1
 0002:0000468C      @D2745_1
 0004:00000000      @T1558_3
 0004:00000008      @T1844_3
 0001:0000D0EC      @__InitExceptBlockLDTC
 0001:00000108      Alloc_2D(unsigned long,unsigned long)
 0001:00000190      CplxAlloc_2D(unsigned long,unsigned long)
 0001:000001FF      CplxDealloc_2D(complex**)
 0001:00000177      Dealloc_2D(double**)
 0001:00017244      InitProntoMemoryManager() __fastcall
 0001:00010D38      Iostream_delete()
 0001:00006EC0      SysUtils::_16442
 0001:00006ED8      SysUtils::_16443
 0001:00007384      SysUtils::_16545
 0001:000073DC      SysUtils::_16546
 0001:000073F0      SysUtils::_16547
 0001:00007988      SysUtils::_16613
 0001:00007ACC      SysUtils::_16614
 0001:00008024      SysUtils::_16618
 0002:00000CB8      SysUtils::_16633
 0001:0000830C      SysUtils::_16634
 0002:00000CF0      SysUtils::_16635
 0001:00008394      SysUtils::_16636
 0001:000083D0      SysUtils::_16637
 0001:00008450      SysUtils::_16638
 0001:00008464      SysUtils::_16639
 0001:00008558      SysUtils::_16640
 0001:00008568      SysUtils::_16641
 0001:000085B4      SysUtils::_16642
 0001:000085DC      SysUtils::_16644
 0001:00008830      SysUtils::_16661
 0001:0000520C      System::::AfterConstruction() __fastcall
 0001:000032E5      System::::Append() __fastcall
 0001:00002EB9      System::::Assign(void*&,System::SmallString<255>&) __fastcall
 0001:00005214      System::::BeforeDestruction() __fastcall
 0001:000051C4      System::::ClassCreate() __fastcall
 0001:00005204      System::::ClassDestroy() __fastcall
 0001:00005E90      System::::Close() __fastcall
 0001:00002FD6      System::::FSafeDivide() __fastcall
 0001:00002FD4      System::::FSafeDivideR() __fastcall
 0001:00005A24      System::::Finalize() __fastcall
 0001:0000599C      System::::FinalizeArray() __fastcall
 0001:00005974      System::::FinalizeRecord() __fastcall
 0001:00002F34      System::::Flush(void*&) __fastcall
 0001:00004EE4      System::::FreeMem() __fastcall
 0001:00004ECC      System::::GetMem() __fastcall
 0001:000000F9      System::::GetTls() __fastcall
 0001:000031E8      System::::Halt() __fastcall
 0001:000031E4      System::::Halt0() __fastcall
 0001:000052D0      System::::HandleAnyException() __fastcall
 0001:000053A0      System::::HandleFinally() __fastcall
 0001:0000514C      System::::IsClass() __fastcall
 0001:000054A8      System::::LStrArrayClr() __fastcall
 0001:000054D8      System::::LStrAsg() __fastcall
 0001:000055F8      System::::LStrCat() __fastcall
 0001:0000563C      System::::LStrCat3() __fastcall
 0001:000056B0      System::::LStrCatN() __fastcall
 0001:00005488      System::::LStrClr() __fastcall
 0001:00005700      System::::LStrCmp() __fastcall
 0001:000057E4      System::::LStrCopy() __fastcall
 0001:00005824      System::::LStrDelete() __fastcall
 0001:000055D8      System::::LStrFromArray() __fastcall
 0001:00005598      System::::LStrFromChar() __fastcall
 0001:00005568      System::::LStrFromLenStr() __fastcall
 0001:000055A8      System::::LStrFromPChar() __fastcall
 0001:0000586C      System::::LStrInsert() __fastcall
 0001:0000551C      System::::LStrLAsg() __fastcall
 0001:000055F0      System::::LStrLen() __fastcall
 0001:000058C8      System::::LStrPos() __fastcall
 0001:00005910      System::::LStrSetLength() __fastcall
 0001:000057A4      System::::LStrToPChar() __fastcall
 0001:00005544      System::::NewAnsiString() __fastcall
 0001:00003824      System::::Pow10() __fastcall
 0001:000053F4      System::::RaiseAgain() __fastcall
 0001:000053D8      System::::RaiseExcept() __fastcall
 0001:0000320F      System::::ReadCString() __fastcall
 0001:00005ECC      System::::ReadChar() __fastcall
 0001:00003204      System::::ReadString() __fastcall
 0001:00004EFC      System::::ReallocMem() __fastcall
 0001:000033ED      System::::ResetFile() __fastcall
 0001:000032D7      System::::ResetText(void*&) __fastcall
 0001:00003404      System::::RewritFile() __fastcall
 0001:000032DE      System::::RewritText(void*&) __fastcall
 0001:000031F5      System::::Run0Error() __fastcall
 0001:000031F9      System::::RunError() __fastcall
 0001:000035BC      System::::Str0Ext() __fastcall
 0001:000035C8      System::::Str1Ext() __fastcall
 0001:000035CF      System::::Str2Ext() __fastcall
 0001:00005448      System::::TryFinallyExit() __fastcall
 0001:00005008      System::::ValLong() __fastcall
 0001:00005E00      System::::VarClr() __fastcall
 0001:00005DC4      System::::VarToLStr(System::AnsiString&,const System::Variant) __fastcall
 0001:0000356C      System::::Write0CString() __fastcall
 0001:00003503      System::::Write0Char() __fastcall
 0001:000034C8      System::::Write0String() __fastcall
 0001:00003570      System::::WriteCString() __fastcall
 0001:00003555      System::::WriteChar() __fastcall
 0001:000034EF      System::::WriteLn() __fastcall
 0001:000034D2      System::::WriteString() __fastcall
 0001:00002F0F      System::::_Flush(void*&) __fastcall
 0001:00004F8C      System::::_IOTest() __fastcall
 0003:00000420      System::AllocMemCount
 0003:00000424      System::AllocMemSize
 0001:00001DE0      System::AnsiString::AnsiCompare(const System::AnsiString&) const __fastcall
 0001:00001E51      System::AnsiString::AnsiCompareIC(const System::AnsiString&) const __fastcall
 0001:00002A9C      System::AnsiString::AnsiLastChar() const __fastcall
 0001:000028D8      System::AnsiString::AnsiPos(const System::AnsiString&) const __fastcall
 0001:00001B4C      System::AnsiString::AnsiString(char) __fastcall
 0001:00001A3F      System::AnsiString::AnsiString(const System::AnsiString&) __fastcall
 0001:00001A08      System::AnsiString::AnsiString(const char*) __fastcall
 0001:00001A78      System::AnsiString::AnsiString(const char*,unsigned char) __fastcall
 0001:00001AB5      System::AnsiString::AnsiString(const wchar_t*) __fastcall
 0001:00001BFC      System::AnsiString::AnsiString(double) __fastcall
 0001:00001B95      System::AnsiString::AnsiString(int) __fastcall
 0001:00002A0D      System::AnsiString::ByteType(int) const __fastcall
 0001:0000227B      System::AnsiString::CurrToStr(System::Currency) __fastcall
 0001:000022E8      System::AnsiString::CurrToStrF(System::Currency,System) __fastcall
 0001:000023DA      System::AnsiString::Delete(int,int) __fastcall
 0001:00002188      System::AnsiString::FloatToStrF(long double,System::AnsiString::TStringFloatFormat) __fastcall
 0001:00001FE7      System::AnsiString::FmtLoadStr(int,const System::TVarRec*) __fastcall
 0001:0000205E      System::AnsiString::Format(const System::AnsiString&,const System::TVarRec) __fastcall
 0001:000020F2      System::AnsiString::FormatFloat(const System::AnsiString&,const long double) __fastcall
 0001:000023B5      System::AnsiString::Insert(const System::AnsiString&) __fastcall
 0001:0000220A      System::AnsiString::IntToHex(int,int) __fastcall
 0001:00002861      System::AnsiString::IsDelimiter(const System::AnsiString&) const __fastcall
 0001:00001ED0      System::AnsiString::IsEmpty() const __fastcall
 0001:00002A60      System::AnsiString::IsLeadByte(int) const __fastcall
 0001:00002949      System::AnsiString::IsPathDelimiter(int) const __fastcall
 0001:00002A7D      System::AnsiString::IsTrailByte(int) const __fastcall
 0001:0000299C      System::AnsiString::LastDelimiter(const System::AnsiString&) const __fastcall
 0001:00001EC2      System::AnsiString::Length() const __fastcall
 0001:00001F7C      System::AnsiString::LoadStr(int) __fastcall
 0001:0000243B      System::AnsiString::LowerCase() const __fastcall
 0001:0000241A      System::AnsiString::Pos(const System::AnsiString&) const __fastcall
 0001:000023FD      System::AnsiString::SetLength(int) __fastcall
 0001:00001EDF      System::AnsiString::StringOfChar(char,int) __fastcall
 0001:000026E3      System::AnsiString::SubString(int,int) const __fastcall
 0001:00002810      System::AnsiString::ToDouble() const __fastcall
 0001:00002770      System::AnsiString::ToInt() const __fastcall
 0001:000027BD      System::AnsiString::ToIntDef(int) const __fastcall
 0001:0000254B      System::AnsiString::Trim() const __fastcall
 0001:000025D3      System::AnsiString::TrimLeft() const __fastcall
 0001:0000265B      System::AnsiString::TrimRight() const __fastcall
 0001:000023AB      System::AnsiString::Unique() __fastcall
 0001:000024C3      System::AnsiString::UpperCase() const __fastcall
 0001:00002384      System::AnsiString::WideChar(wchar_t*,int) const __fastcall
 0001:00002361      System::AnsiString::WideCharBufSize() const __fastcall
 0001:00001D5E      System::AnsiString::operator !=(const System::AnsiString&) const __fastcall
 0001:00001CBF      System::AnsiString::operator +(const System::AnsiString&) const __fastcall
 0001:00001CAB      System::AnsiString::operator +=(const System::AnsiString&) __fastcall
 0001:00001D74      System::AnsiString::operator <(const System::AnsiString&) const __fastcall
 0001:00001DA0      System::AnsiString::operator <=(const System::AnsiString&) const __fastcall
 0001:00001C97      System::AnsiString::operator =(const System::AnsiString&) __fastcall
 0001:00001D48      System::AnsiString::operator ==(const System::AnsiString&) const __fastcall
 0001:00001D8A      System::AnsiString::operator >(const System::AnsiString&) const __fastcall
 0001:00001DC0      System::AnsiString::operator >=(const System::AnsiString&) const __fastcall
 0001:00001C68      System::AnsiString::~AnsiString() __fastcall
 0003:00000038      System::CmdLine
 0003:00000034      System::CmdShow
 0002:00000C80      System::DebugHook
 0003:0000004C      System::DllProc
 0003:00000048      System::ErrorAddr
 0003:0000001C      System::ErrorProc
 0003:00000020      System::ExceptClsProc
 0003:00000024      System::ExceptObjProc
 0003:00000018      System::ExceptProc
 0003:00000028      System::ExceptionClass
 0003:00000040      System::ExitCode
 0003:00000044      System::ExitProc
 0001:00003824      System::FPower10() __fastcall
 0003:00000057      System::FileMode
 0001:00005E68      System::FreeMemory(void*)
 0001:00005E58      System::GetMemory(int)
 0003:00000030      System::HInstance
 0003:0000002C      System::HPrevInst
 0004:00000004      System::InOutRes
 0003:0000003C      System::InitProc
 0003:0000005C      System::Input
 0003:00000055      System::IsConsole
 0003:00000054      System::IsLibrary
 0003:00000056      System::IsMultiThread
 0001:00004FC8      System::Move(const void*,void*,int) __fastcall
 0003:00000410      System::Null
 0001:00005ABC      System::OleStrToStrVar(wchar_t*,System::AnsiString&) __fastcall
 0003:00000228      System::Output
 0004:00000000      System::RaiseList
 0003:00000050      System::RandSeed
 0001:00005E80      System::ReallocMemory(void*,int)
 0001:00005AD8      System::StringToOleStr(const System::AnsiString) __fastcall
 0001:00004A94      System::SysFreeMem(void*) __fastcall
 0001:0000490C      System::SysGetMem(int) __fastcall
 0001:00004E08      System::SysReallocMem(void*,int) __fastcall
 0002:0000029C      System::TObject::
 0001:00005194      System::TObject::AfterConstruction() __fastcall
 0001:00005198      System::TObject::BeforeDestruction() __fastcall
 0001:000050E0      System::TObject::ClassName(System::TMetaClass*) __fastcall
 0001:00005190      System::TObject::DefaultHandler(void*) __fastcall
 0001:0000519C      System::TObject::Dispatch(void*) __fastcall
 0001:00005140      System::TObject::Free() __fastcall
 0001:0000511C      System::TObject::FreeInstance() __fastcall
 0001:000050F4      System::TObject::NewInstance(System::TMetaClass*) __fastcall
 0001:000019B8      System::TObject::~TObject() __fastcall
 0003:00000058      System::Test8086
 0003:00000059      System::Test8087
 0003:0000005A      System::TestFDIV
 0001:00003BC0      System::TextStart() __fastcall
 0003:000003F4      System::TlsIndex
 0003:000003F8      System::TlsIndex4
 0003:000003FC      System::TlsLast
 0003:00000400      System::Unassigned
 0001:000057B0      System::UniqueString(System::AnsiString&) __fastcall
 0001:00005CD4      System::VarCast(System::Variant&,const System::Variant) __fastcall
 0001:00005B6C      System::VarClear(System::Variant&) __fastcall
 0001:00005BA0      System::VarCopy(System::Variant&,const System::Variant) __fastcall
 0001:00005E3C      System::VclExit()
 0001:00005E08      System::VclInit(bool,long,bool)
 0001:00005A30      System::WideCharLenToStrVar(wchar_t*,int,System::AnsiString&) __fastcall
 0001:00003BC4      System::_16414
 0001:00003C14      System::_16415
 0001:00003C1C      System::_16416
 0001:00003C4C      System::_16417
 0001:00003C64      System::_16418
 0001:00003CD8      System::_16419
 0001:00003D68      System::_16420
 0001:00003DCC      System::_16421
 0001:00003E44      System::_16422
 0001:00003EFC      System::_16423
 0001:00003F90      System::_16424
 0001:00004010      System::_16425
 0001:000040A0      System::_16426
 0001:000041C4      System::_16427
 0001:00004250      System::_16428
 0001:00004314      System::_16429
 0001:000043F8      System::_16430
 0001:0000444C      System::_16431
 0001:0000447C      System::_16432
 0001:000044AC      System::_16433
 0001:000044D0      System::_16434
 0001:000044F8      System::_16435
 0001:00004568      System::_16436
 0001:000045A0      System::_16437
 0001:00004638      System::_16438
 0001:000046B8      System::_16439
 0001:00004704      System::_16440
 0001:00004790      System::_16441
 0001:000047BC      System::_16442
 0001:000047F0      System::_16443
 0001:00004818      System::_16444
 0001:00004C38      System::_16447
 0002:00000C84      System::_16451
 0001:00004F4C      System::_16457
 0001:00004FAC      System::_16459
 0001:00004FBC      System::_16460
 0002:00000C90      System::_16524
 0001:000050D4      System::_16525
 0001:00005164      System::_16542
 0001:00005224      System::_16560
 0001:00005240      System::_16561
 0001:00005260      System::_16562
 0001:00005274      System::_16564
 0001:00005288      System::_16565
 0001:000052A8      System::_16566
 0001:00005460      System::_16581
 0001:00005B5C      System::_16646
 0001:00005B64      System::_16647
 0001:00005C14      System::_16651
 0001:00005C84      System::_16652
 0001:00005CB4      System::_16653
 0001:00003AF8      System::initialization() __fastcall
 0001:00002AE9      System::operator +(const char*,const System::AnsiString&) __fastcall
 0001:00002B71      System::operator >>(istream&,System::AnsiString&)
 0001:00006F5C      Sysutils::AnsiCompareStr(const System::AnsiString,const System::AnsiString) __fastcall
 0001:00006F94      Sysutils::AnsiCompareText(const System::AnsiString,const System::AnsiString) __fastcall
 0001:000071D8      Sysutils::AnsiLastChar(const System::AnsiString) __fastcall
 0001:00006F2C      Sysutils::AnsiLowerCase(const System::AnsiString) __fastcall
 0001:000086F0      Sysutils::AnsiPos(const System::AnsiString,const System::AnsiString) __fastcall
 0001:00008728      Sysutils::AnsiStrPos(char*,char*) __fastcall
 0001:000087C8      Sysutils::AnsiStrRScan(char*,char) __fastcall
 0001:000087F0      Sysutils::AnsiStrScan(char*,char) __fastcall
 0001:00006EFC      Sysutils::AnsiUpperCase(const System::AnsiString) __fastcall
 0001:0000863C      Sysutils::ByteType(const System::AnsiString) __fastcall
 0001:000077E0      Sysutils::CurrToStr(System::Currency) __fastcall
 0001:00007848      Sysutils::CurrToStrF(System::Currency,S,...
 0003:000004C4      Sysutils::CurrencyDecimals
 0003:000004C0      Sysutils::CurrencyFormat
 0003:000004BC      Sysutils::CurrencyString
 0003:000004C5      Sysutils::DateSeparator
 0003:000004C3      Sysutils::DecimalSeparator
 0001:00006CE0      Sysutils::EAccessViolation::
 0001:0000BE70      Sysutils::EAccessViolation::EAccessViolation(const System::AnsiString) __fastcall
 0001:0000CF9C      Sysutils::EAccessViolation::~EAccessViolation() __fastcall
 0001:00006DD0      Sysutils::EControlC::
 0001:0000BFE0      Sysutils::EControlC::EControlC(const System::AnsiString) __fastcall
 0001:0000D044      Sysutils::EControlC::~EControlC() __fastcall
 0001:00006C90      Sysutils::EConvertError::
 0001:0000698C      Sysutils::EDivByZero::
 0001:0000B968      Sysutils::EDivByZero::EDivByZero(const System::AnsiString) __fastcall
 0001:0000CD50      Sysutils::EDivByZero::~EDivByZero() __fastcall
 0001:00006E6C      Sysutils::EExternalException::
 0001:000068F4      Sysutils::EInOutError::
 0001:00006940      Sysutils::EIntError::
 0001:0000C150      Sysutils::EIntError::EIntError(const System::AnsiString) __fastcall
 0001:0000C848      Sysutils::EIntError::~EIntError() __fastcall
 0001:00006A24      Sysutils::EIntOverflow::
 0001:0000BAD8      Sysutils::EIntOverflow::EIntOverflow(const System::AnsiString) __fastcall
 0001:0000CDF8      Sysutils::EIntOverflow::~EIntOverflow() __fastcall
 0001:00006C40      Sysutils::EInvalidCast::
 0001:00006AC0      Sysutils::EInvalidOp::
 0001:0000BB90      Sysutils::EInvalidOp::EInvalidOp(const System::AnsiString) __fastcall
 0001:0000CE4C      Sysutils::EInvalidOp::~EInvalidOp() __fastcall
 0001:00006BF0      Sysutils::EInvalidPointer::
 0001:00006A74      Sysutils::EMathError::
 0001:0000C208      Sysutils::EMathError::EMathError(const System::AnsiString) __fastcall
 0001:0000C7F4      Sysutils::EMathError::~EMathError() __fastcall
 0001:000068A4      Sysutils::EOutOfMemory::
 0001:00008308      Sysutils::EOutOfMemory::FreeInstance() __fastcall
 0001:000082F8      Sysutils::EOutOfMemory::~EOutOfMemory() __fastcall
 0001:00006B58      Sysutils::EOverflow::
 0001:0000BD00      Sysutils::EOverflow::EOverflow(const System::AnsiString) __fastcall
 0001:0000CEF4      Sysutils::EOverflow::~EOverflow() __fastcall
 0001:00006D34      Sysutils::EPrivilege::
 0001:0000BF28      Sysutils::EPrivilege::EPrivilege(const System::AnsiString) __fastcall
 0001:0000CFF0      Sysutils::EPrivilege::~EPrivilege() __fastcall
 0001:000069D8      Sysutils::ERangeError::
 0001:0000BA20      Sysutils::ERangeError::ERangeError(const System::AnsiString) __fastcall
 0001:0000CDA4      Sysutils::ERangeError::~ERangeError() __fastcall
 0001:00006D80      Sysutils::EStackOverflow::
 0001:0000C098      Sysutils::EStackOverflow::EStackOverflow(const System::AnsiString) __fastcall
 0001:0000D098      Sysutils::EStackOverflow::~EStackOverflow() __fastcall
 0001:00006BA4      Sysutils::EUnderflow::
 0001:0000BDB8      Sysutils::EUnderflow::EUnderflow(const System::AnsiString) __fastcall
 0001:0000CF48      Sysutils::EUnderflow::~EUnderflow() __fastcall
 0001:00006E1C      Sysutils::EVariantError::
 0001:00006B0C      Sysutils::EZeroDivide::
 0001:0000BC48      Sysutils::EZeroDivide::EZeroDivide(const System::AnsiString) __fastcall
 0001:0000CEA0      Sysutils::EZeroDivide::~EZeroDivide() __fastcall
 0001:00006848      Sysutils::Exception::
 0001:000081B4      Sysutils::Exception::Exception(const System::AnsiString) __fastcall
 0001:000081EC      Sysutils::Exception::Exception(int) __fastcall
 0001:00008264      Sysutils::Exception::Exception(int,const System::TVarRec*,int) __fastcall
 0001:0000C78C      Sysutils::Exception::~Exception() __fastcall
 0001:000064FE      Sysutils::FloatToDecimal(Sysutils::TFloatRec&,const void,Sysutils::TFloatValue,int) __fastcall
 0001:000077B0      Sysutils::FloatToStr(long double) __fastcall
 0001:00007810      Sysutils::FloatToStrF(long double,Sysutils::TFloatFormat,int) __fastcall
 0001:00005F62      Sysutils::FloatToText(char*,const void*,Sysutils::TFloatValue,S,...
 0001:0000622B      Sysutils::FloatToTextFmt(char*,const void*,Sysutils::TFloatValue,...
 0001:0000717C      Sysutils::FmtLoadStr(int,const System::TVarRec*,int) __fastcall
 0001:0000774C      Sysutils::FmtStr(System::AnsiString&,System::AnsiString,const System::TVarRec,int) __fastcall
 0001:00007738      Sysutils::Format(const System::AnsiString,const System::TVarRec,int) __fastcall
 0001:000073FC      Sysutils::FormatBuf(void*,unsigned int,const void*,unsigned int,const System::TVarRec*,int) __fastcall
 0001:00007880      Sysutils::FormatFloat(const System::AnsiString) __fastcall
 0001:00007CD8      Sysutils::GetFormatSettings() __fastcall
 0001:00007960      Sysutils::GetLocaleChar(int,int,char) __fastcall
 0001:00007914      Sysutils::GetLocaleStr(int,int,const System::AnsiString) __fastcall
 0001:000070B4      Sysutils::IntToHex(int,int) __fastcall
 0001:00007084      Sysutils::IntToStr(int) __fastcall
 0001:000086AC      Sysutils::IsDelimiter(const System::AnsiString,const System::AnsiString,int) __fastcall
 0001:00008678      Sysutils::IsPathDelimiter(const System::AnsiString) __fastcall
 0001:00007200      Sysutils::LastDelimiter(const System::AnsiString,const System::AnsiString) __fastcall
 0002:00000C98      Sysutils::LeadBytes
 0001:00007144      Sysutils::LoadStr(int) __fastcall
 0003:000004CC      Sysutils::LongDateFormat
 0003:00000560      Sysutils::LongDayNames
 0003:00000514      Sysutils::LongMonthNames
 0003:000004E0      Sysutils::LongTimeFormat
 0003:000004C1      Sysutils::NegCurrFormat
 0003:000004C8      Sysutils::ShortDateFormat
 0003:00000544      Sysutils::ShortDayNames
 0003:000004E4      Sysutils::ShortMonthNames
 0003:000004DC      Sysutils::ShortTimeFormat
 0001:00008030      Sysutils::ShowException(System::TObject*,void) __fastcall
 0001:00008660      Sysutils::StrByteType(char*,unsigned int) __fastcall
 0001:00007704      Sysutils::StrFmt(char*,char*,const System::TVarRec*,int) __fastcall
 0001:0000729C      Sysutils::StrLCopy(char*,char*,unsigned int) __fastcall
 0001:000072D0      Sysutils::StrLIComp(char*,char*,unsigned int) __fastcall
 0001:00007248      Sysutils::StrLen(char*) __fastcall
 0001:00007260      Sysutils::StrMove(char*,char*,unsigned int) __fastcall
 0001:00007338      Sysutils::StrPos(char*,char*) __fastcall
 0001:00007318      Sysutils::StrScan(char*,char) __fastcall
 0001:000078D8      Sysutils::StrToFloat(const System::AnsiString) __fastcall
 0001:000070F0      Sysutils::StrToInt(const System::AnsiString) __fastcall
 0001:0000712C      Sysutils::StrToIntDef(const System::AnsiString) __fastcall
 0003:0000057C      Sysutils::SysLocale
 0001:000066EB      Sysutils::TextToFloat(char*,void*,Sysutils::TFloatValue) __fastcall
 0003:000004C2      Sysutils::ThousandSeparator
 0003:000004D4      Sysutils::TimeAMString
 0003:000004D8      Sysutils::TimePMString
 0003:000004D0      Sysutils::TimeSeparator
 0001:00006FCC      Sysutils::Trim(const System::AnsiString) __fastcall
 0001:0000701C      Sysutils::TrimLeft(const System::AnsiString) __fastcall
 0001:00007050      Sysutils::TrimRight(const System::AnsiString) __fastcall
 0002:00000C94      Sysutils::Win32Platform
 0001:000067EC      Sysutils::initialization() __fastcall
 0001:00018574      TStringRef::TStringRef(const char*,unsigned int,const char*,unsigned int,unsigned int)
 0001:000186C8      TStringRef::check_freeboard()
 0001:0001871C      TStringRef::grow_to(unsigned int)
 0001:00018670      TStringRef::reserve(unsigned int)
 0001:0001876C      TStringRef::round_capacity(unsigned int)
 0001:000187A8      TStringRef::splice(unsigned int,unsigned int,const char*,unsigned int)
 0001:0001862C      TStringRef::~TStringRef()
 0001:000184D4      TSubString::assert_element(unsigned int) const
 0001:000088E0      Windows::initialization() __fastcall
 0002:00003BD4      _CLOCALE
 0002:00003AC8      _CMonetary
 0002:00003AFC      _CNumeric
 0002:00003B12      _CTimeDate
 0001:0000A235      _CatchCleanup()
 0002:00000C80      _DebugHook
 0003:00000028      _ExceptionClass
 0001:00009FA8      _ReThrowException(unsigned int,unsigned char*)
 0001:00009F73      _ThrowExceptionLDTC(void*,void*,void*,void*,unsigned int,unsigned int,unsigned int,unsigned char*,void*)
 0001:000019DD      __AfterConstruction
 0001:000019E5      __BeforeDestruction
 0003:00000B70      __C0argc
 0003:00000B74      __C0argv
 0003:00000B78      __C0environ
 0001:000019D0      __ClassCreate
 0001:000019D8      __ClassDestroy
 0001:0000B8AB      __CurrExcContext
 0003:00000594      __DestructorCountPtr
 0001:0000D884      __DynamicCast(void*,void*,void*,void*,int)
 0001:0000D99E      __DynamicCastVCLptr(void*,void*) __fastcall
 0001:0000D96C      __DynamicCastVCLref(void*,void*) __fastcall
 0001:00017490      __ErrorExit
 0001:000173A0      __ErrorMessage
 0001:00017508      __ErrorMessageHelper
 0003:00000B54      __ExcRegPtr
 0001:00009240      __ExceptInit
 0002:00000FC4      __ExceptVarsSize
 0001:0000AE96      __ExceptionHandler
 0001:0000198B      __ExitVCL
 0001:00000046      __GetExceptDLLinfo
 0001:00009263      __GetExceptDLLinfoInternal
 0001:00009221      __GetPolymorphicDTC(void*,unsigned int)
 0001:0000D5C0      __GetTypeInfo(void*,void*,void*,void*)
 0001:0000A0E5      __Global_unwind
 0003:0000059C      __HandlerPtr
 0001:000093EC      __InitDefaultHander
 0001:0000195C      __InitVCL
 0001:0000A8A6      __Local_unwind
 0001:0000A8B9      __Return_unwind
 0001:0000DB20      __SetExceptionHandler
 0001:000093A0      __SetUserHandler
 0002:00004A94      __TLS_index
 0002:00000153      __TLS_index4
 0001:0000D4B8      __ThrowExceptionName()
 0001:0000D4A0      __ThrowFileName()
 0001:0000D4AC      __ThrowLineNumber()
 0001:0000DB35      __UnsetExceptionHandler
 0001:0000DB61      __UnwindException
 0003:000005A0      __UserHandlerPtr
 0002:0000015B      ___CPPdebugHook
 0002:00000EEC      ___CPPexceptionList
 0001:00010674      ___DOSerror
 0001:0000928C      ___DefHandler
 0001:00017480      ___ErrorMessage
 0002:00000F10      ___ExceptStaticXbuff
 0001:00010628      ___IOerror
 0001:0000944F      ___JumpToCatch__
 0001:00010694      ___NTerror
 0001:000000F9      ___System__GetTls
 0001:0000A9F4      ____ExceptionHandler
 0001:00010770      ___access
 0001:00009139      ___call_terminate
 0001:000091E2      ___call_unexpected
 0001:000107B0      ___close
 0002:00000FEC      ___debuggerDisableTerminateCallback
 0001:00009406      ___doGlobalUnwind
 0001:0001061C      ___doserrno
 0001:0000FDA0      ___eof
 0001:00017338      ___errno
 0002:00000EF0      ___exceptFlags
 0002:00000F0C      ___exceptMemAllocVars
 0002:00000F08      ___exceptStaticBuffP
 0003:00000B68      ___exit_lock
 0001:0000DFB4      ___fputn
 0001:0000DF20      ___getfp
 0001:000150BC      ___int64toa
 0002:00000144      ___isDLL
 0002:0000014E      ___isGUI
 0001:00010810      ___isatty
 0001:00010840      ___isatty_osfhandle
 0001:000133C4      ___iswctype
 0001:000154C4      ___ldtrunc
 0002:00003C00      ___locale
 0001:000155C4      ___longtoa
 0001:00010858      ___lseek
 0001:00016CF8      ___matherr
 0001:0000E4E8      ___mkname
 0001:00014D52      ___nextreal
 0001:000108DC      ___open
 0001:0000DE78      ___openfp
 0001:0000E2D0      ___org__fgetc
 0001:000101F4      ___org__fputc
 0001:000156CC      ___org__matherr
 0001:000156F8      ___org__matherrl
 0001:000106F0      ___org__read
 0001:000106A8      ___org__rtl_read
 0001:0001070C      ___org__rtl_write
 0001:00010754      ___org__write
 0001:0000DB68      ___org_access
 0001:00013BCD      ___org_acos
 0001:00013BE8      ___org_asin
 0001:00013C00      ___org_atan2
 0001:00017098      ___org_calloc
 0001:0000DBF0      ___org_close
 0001:00013CC8      ___org_cos
 0001:000170C4      ___org_delete
 0001:000170D4      ___org_deletea
 0001:00014D64      ___org_exp
 0001:0000DBF8      ___org_fclose
 0001:0000DC98      ___org_fflush
 0001:00010214      ___org_fgetc
 0001:0000DF4C      ___org_fopen
 0001:0000DF80      ___org_fprintf
 0001:0001023C      ___org_fputc
 0001:00017258      ___org_free
 0001:0000E090      ___org_fscanf
 0001:0000E128      ___org_fseek
 0001:0000E19C      ___org_ftell
 0001:00018D50      ___org_getdate
 0001:00018D7C      ___org_gettime
 0001:0000E228      ___org_isatty
 0001:00015654      ___org_itoa
 0001:00015170      ___org_log
 0001:0000E4E0      ___org_lseek
 0001:00017248      ___org_malloc
 0001:0001341C      ___org_mblen
 0001:000135D8      ___org_mbstowcs
 0001:00013498      ___org_mbtowc
 0001:000088F0      ___org_memchr
 0001:00008B78      ___org_memcmp
 0001:00008910      ___org_memcpy
 0001:00008934      ___org_memmove
 0001:00008980      ___org_memset
 0001:000170F8      ___org_new
 0001:0001712C      ___org_newa
 0001:000151E0      ___org_pow
 0001:0000E584      ___org_printf
 0001:00017DD8      ___org_raise
 0001:0000E5C0      ___org_read
 0001:00017268      ___org_realloc
 0001:0000E5C8      ___org_scanf
 0001:0000F00C      ___org_setvbuf
 0001:00015414      ___org_sin
 0001:0000F094      ___org_sprintf
 0001:00015458      ___org_sqrt
 0001:00008A24      ___org_strcat
 0001:00008A60      ___org_strcmp
 0001:00008AAC      ___org_strlen
 0001:00008B08      ___org_strncat
 0001:00008BE4      ___org_strncpy
 0001:00015684      ___org_ultoa
 0001:0000F314      ___org_ungetc
 0001:0000F0B8      ___org_vsprintf
 0001:00013740      ___org_wcstombs
 0001:00013564      ___org_wctomb
 0001:0000FD2C      ___org_write
 0003:000005A8      ___pCPPdebugHook
 0001:00009B87      ___raiseDebuggerException
 0001:0000FEA4      ___read
 0001:00014D4C      ___realcvt
 0001:0000EDE4      ___scantoint64
 0003:00000888      ___stderr_streambuf
 0003:00000880      ___stdin_streambuf
 0003:00000884      ___stdout_streambuf
 0002:00000EF4      ___terminatePTR
 0002:00000F04      ___throwExceptionName
 0002:00000EFC      ___throwFileName
 0002:00000F00      ___throwLineNumber
 0001:0000E540      ___tmpnam
 0002:00000EF8      ___unexpectdPTR
 0002:0000014D      ___useDynamicTLS
 0001:00015638      ___utoa
 0001:0000F404      ___vprinter
 0001:000100A4      ___write
 0002:00004130      ___xalloc
 0001:00016738      ___xcvt
 0001:00016A08      ___xcvtw
 0004:00000008      ___xxInfo
 0001:00017564      __abort
 0001:00000000      __acrtused
 0001:00017878      __addarg
 0001:0000DA54      __adjustClassAdr(void*,tpid*,tpid*)
 0001:0000DB70      __allocbuf
 0003:00000B6C      __argc
 0003:00000B30      __argv
 0002:000042B0      __argv0
 0001:000172D8      __assert
 0002:00004228      __atexitcnt
 0003:00000AB0      __atexittbl
 0001:00017640      __c_exit
 0001:00017630      __cexit
 0002:00003248      __cfinfo_get
 0002:000038BC      __chartype
 0001:00017F38      __cleanup
 0001:00010278      __cleanup_handle_locks
 0001:0000F2BC      __cleanup_stream_locks
 0001:00013CB4      __clear87
 0001:00014D24      __control87
 0001:00018C78      __create_lock
 0001:00017E84      __create_shmem
 0001:00015A24      __cvt_init
 0001:00015D58      __cvt_initw
 0002:00003EF8      __default87
 0003:00000B4C      __dll_table
 0002:000032A4      __dosErrorToSV
 0001:000103A8      __dup_handle
 0003:00000B48      __env_lock
 0003:00000B3C      __environ
 0003:00000B44      __envsize
 0003:00000B84      __exe_table
 0001:00017618      __exit
 0001:000093D8      __exit_except
 0001:0000F1A0      __exit_streams
 0001:00018AA0      __exit_tls
 0001:000177E8      __exitargv
 0002:0000422C      __exitbuf
 0002:00004230      __exitfopen
 0002:00004234      __exitopen
 0001:000179D8      __expandblock
 0002:0000423C      __expandptr
 0001:00014DD0      __f87_ArcTan
 0001:00014F4C      __f87_Cosine
 0001:00014E3D      __f87_Exp
 0001:00014E35      __f87_Exp10
 0001:00014E30      __f87_Exp2
 0001:00014F08      __f87_Log
 0001:00014F04      __f87_Log10
 0001:00014F00      __f87_Log2
 0001:00014F48      __f87_Sine
 0001:00014F50      __f87_Tangent
 0001:0000E2D0      __fgetc
 0002:00003F3C      __floatconvert
 0001:000101B0      __flushall
 0001:0000DD28      __flushout
 0002:00002C6C      __fmode
 0002:00002C70      __fmodeptr
 0001:0001503C      __fpreset
 0001:000101F4      __fputc
 0001:00010410      __free_handle
 0001:0001728C      __free_heaps
 0001:00015054      __fuildq
 0001:00015084      __fuistq
 0001:000150A8      __fxam
 0001:00000053      __getHInstance
 0001:00013220      __getLocaleEra
 0001:0001306C      __getLocaleMonetaryInfo
 0001:000131C0      __getLocaleMonetaryNegFmt
 0001:000131CC      __getLocaleNumericInfo
 0001:00012D38      __getLocaleTimeInfo
 0001:00010368      __get_handle
 0002:00000157      __hInstance
 0003:00000680      __handles
 0002:00003F00      __huge_dble
 0002:00003EFC      __huge_flt
 0002:00003F08      __huge_ldble
 0002:00003F28      __indefinite
 0001:00017010      __initMBCSTable
 0001:000093C0      __init_except
 0001:00017E8C      __init_exit_proc
 0001:000104C8      __init_handles
 0001:0000F0DC      __init_streams
 0001:00018A38      __init_tls
 0001:0000DD8C      __initfmode
 0001:00015728      __initmatherr
 0001:00017650      __initwild
 0001:0000D391      __isCompatTypeID(tpid*,tpid*,int,tpid**)
 0001:0000004B      __isDLL
 0001:0000D15F      __isSameTypeID(tpid*,tpid*)
 0003:00000B90      __isWindows
 0001:00017020      __ismbcspace
 0002:000040E8      __kalpha
 0002:000040EA      __kpunct
 0001:0000E2E8      __lgetc
 0001:00013907      __lldiv
 0001:000139C8      __llmod
 0001:000138E4      __llmul
 0001:00013A90      __llshl
 0001:00013AAC      __llshr
 0001:0001397F      __lludiv
 0001:00013A42      __llumod
 0001:00013AC8      __llushr
 0001:00010268      __lock_all_handles
 0001:0000F1F8      __lock_all_streams
 0001:00017984      __lock_env
 0001:00018CFC      __lock_error
 0001:00017FB0      __lock_exit
 0001:000102AC      __lock_handle
 0001:00018CDC      __lock_nt
 0001:0000F218      __lock_stream
 0001:0000E3D0      __lputc
 0001:000156A4      __ltoa
 0001:000156CC      __matherr
 0001:000156F8      __matherrl
 0002:00003F48      __mathwhy
 0002:00003F16      __max_dble
 0002:00003F12      __max_flt
 0002:00003F1E      __max_ldble
 0003:00000990      __mbcsCodePage
 0003:0000088C      __mbctype
 0001:00017040      __mbsrchr
 0002:000041D8      __messagefile
 0003:00000994      __new_handler
 0002:00003E2C      __nextrealptr
 0002:00003E94      __nextrealwptr
 0002:00002BA0      __nfile
 0002:0000324C      __notUmask
 0002:00002BA4      __openfd
 0003:00000B60      __oscmd
 0003:00000B58      __osenv
 0003:000005B8      __pidtab
 0002:00003F40      __pmatherr
 0002:00003F44      __pmatherrl
 0001:00016DA8      __pow10
 0001:000153BC      __qdiv10
 0001:000153E4      __qmul10
 0001:000106F0      __read
 0002:00003E28      __realcvtptr
 0002:00003E90      __realcvtwptr
 0001:000019F8      __roundToInt64
 0001:000106A8      __rtl_read
 0001:0001070C      __rtl_write
 0001:0001623C      __scan_init
 0001:00016720      __scan_initw
 0001:0000E608      __scanner
 0001:00014D5E      __scanrslt
 0002:00003E34      __scanrsltptr
 0001:00014D58      __scantod
 0002:00003E30      __scantodptr
 0002:00003E9C      __scanwrsltptr
 0002:00003E98      __scanwtodptr
 0001:00017654      __setargv
 0002:00004238      __setargv__
 0002:000042D0      __setenvp__
 0001:00009374      __setexc
 0001:00016F20      __setmbcp
 0001:00017FE4      __startup
 0003:00000B8C      __stkbase
 0002:00000FD8      __stkchk
 0003:00000B94      __stkindex
 0001:00008C34      __stpcpy
 0002:000026F0      __streams
 0002:00002C80      __sys_errlist
 0002:00002D44      __sys_nerr
 0001:00017E74      __terminate
 0001:00018DB4      __thread_buf
 0001:00018AB8      __thread_data
 0001:00018B7C      __thread_data_del
 0001:00018AE4      __thread_data_new
 0002:00003F2C      __tiny_ldble
 0003:00000B98      __tlsindex
 0001:0000DB04      __tpdsc__[Bad_cast]
 0001:0000DAE8      __tpdsc__[Bad_typeid]
 0001:00002C98      __tpdsc__[System::AnsiString*]
 0001:00002C48      __tpdsc__[System::AnsiString]
 0001:0000CBE4      __tpdsc__[System::TObject]
 0001:0000C660      __tpdsc__[Sysutils::EAccessViolation&]
 0001:0000C3E4      __tpdsc__[Sysutils::EAccessViolation*]
 0001:0000CB80      __tpdsc__[Sysutils::EAccessViolation]
 0001:0000C618      __tpdsc__[Sysutils::EControlC&]
 0001:0000C330      __tpdsc__[Sysutils::EControlC*]
 0001:0000CC90      __tpdsc__[Sysutils::EControlC]
 0001:0000C768      __tpdsc__[Sysutils::EDivByZero&]
 0001:0000C5A8      __tpdsc__[Sysutils::EDivByZero*]
 0001:0000C8E4      __tpdsc__[Sysutils::EDivByZero]
 0001:0000C2E4      __tpdsc__[Sysutils::EIntError*]
 0001:0000C54C      __tpdsc__[Sysutils::EIntError]
 0001:0000C71C      __tpdsc__[Sysutils::EIntOverflow&]
 0001:0000C500      __tpdsc__[Sysutils::EIntOverflow*]
 0001:0000C9A4      __tpdsc__[Sysutils::EIntOverflow]
 0001:0000C6F8      __tpdsc__[Sysutils::EInvalidOp&]
 0001:0000C4DC      __tpdsc__[Sysutils::EInvalidOp*]
 0001:0000CA04      __tpdsc__[Sysutils::EInvalidOp]
 0001:0000C2C0      __tpdsc__[Sysutils::EMathError*]
 0001:0000C47C      __tpdsc__[Sysutils::EMathError]
 0001:0000C6B0      __tpdsc__[Sysutils::EOverflow&]
 0001:0000C434      __tpdsc__[Sysutils::EOverflow*]
 0001:0000CAC4      __tpdsc__[Sysutils::EOverflow]
 0001:0000C63C      __tpdsc__[Sysutils::EPrivilege&]
 0001:0000C354      __tpdsc__[Sysutils::EPrivilege*]
 0001:0000CC30      __tpdsc__[Sysutils::EPrivilege]
 0001:0000C744      __tpdsc__[Sysutils::ERangeError&]
 0001:0000C528      __tpdsc__[Sysutils::ERangeError*]
 0001:0000C944      __tpdsc__[Sysutils::ERangeError]
 0001:0000C5F0      __tpdsc__[Sysutils::EStackOverflow&]
 0001:0000C308      __tpdsc__[Sysutils::EStackOverflow*]
 0001:0000CCEC      __tpdsc__[Sysutils::EStackOverflow]
 0001:0000C68C      __tpdsc__[Sysutils::EUnderflow&]
 0001:0000C410      __tpdsc__[Sysutils::EUnderflow*]
 0001:0000CB20      __tpdsc__[Sysutils::EUnderflow]
 0001:0000C6D4      __tpdsc__[Sysutils::EZeroDivide&]
 0001:0000C458      __tpdsc__[Sysutils::EZeroDivide*]
 0001:0000CA64      __tpdsc__[Sysutils::EZeroDivide]
 0001:0000C5CC      __tpdsc__[Sysutils::Exception*]
 0001:0000C378      __tpdsc__[Sysutils::Exception]
 0001:0001830C      __tpdsc__[TReference]
 0001:00018254      __tpdsc__[TStringRef*]
 0001:00018270      __tpdsc__[TStringRef]
 0001:00010EAC      __tpdsc__[filebuf*]
 0001:0001111C      __tpdsc__[filebuf]
 0001:00012B70      __tpdsc__[ios*]
 0001:00011044      __tpdsc__[ios]
 0001:00011850      __tpdsc__[istream*]
 0001:00011084      __tpdsc__[istream]
 0001:00010EC4      __tpdsc__[istream_withassign*]
 0001:00010F24      __tpdsc__[istream_withassign]
 0001:00012288      __tpdsc__[ostream*]
 0001:00010FF4      __tpdsc__[ostream]
 0001:00010EE8      __tpdsc__[ostream_withassign*]
 0001:00010F8C      __tpdsc__[ostream_withassign]
 0001:00010F0C      __tpdsc__[streambuf*]
 0001:000110D4      __tpdsc__[streambuf]
 0001:00009084      __tpdsc__[string*]
 0001:000181F8      __tpdsc__[string::lengtherror]
 0001:00018958      __tpdsc__[string::outofrange]
 0001:0000909C      __tpdsc__[string]
 0001:0000DAD0      __tpdsc__[typeinfo*]
 0001:0000C89C      __tpdsc__[typeinfo]
 0001:00008D6C      __tpdsc__[xalloc*]
 0001:00008D84      __tpdsc__[xalloc] const
 0001:00009070      __tpdsc__[xmsg*]
 0001:00008E60      __tpdsc__[xmsg] const
 0002:00003F38      __turboFloat
 0001:0000D128      __typeIDname(tpid*)
 0001:00010ADC      __unlink
 0001:0001029C      __unlock_all_handles
 0001:0000F208      __unlock_all_streams
 0001:00017994      __unlock_env
 0001:00017FC0      __unlock_exit
 0001:00010340      __unlock_handle
 0001:00018CEC      __unlock_nt
 0001:0000F2E0      __unlock_stream
 0001:00009390      __unsetexc
 0001:000093B4      __unsetuserhandler
 0003:00000B7C      __wC0argv
 0003:00000B80      __wC0environ
 0001:00008A0C      __wmemset
 0003:00000B64      __woscmd
 0003:00000B5C      __wosenv
 0001:00010754      __write
 0001:0000FD34      __xfclose
 0001:0000FD6C      __xfflush
 0001:00017578      _abort
 0001:0000DB68      _access
 0001:00013BCD      _acos
 0001:00013BE8      _asin
 0001:00013C00      _atan2
 0001:00017098      _calloc
 0003:000007F0      _cerr
 0003:0000075C      _cin
 0003:00000838      _clog
 0001:0000DBF0      _close
 0001:00013CC8      _cos
 0003:000007A8      _cout
 0001:00017600      _exit
 0001:00014D64      _exp
 0003:00000010      _f
 0001:0001502C      _fabs
 0001:0000DBF8      _fclose
 0001:0000DC98      _fflush
 0001:00010214      _fgetc
 0001:0000DF4C      _fopen
 0001:0000DF80      _fprintf
 0001:0001023C      _fputc
 0001:00017258      _free
 0001:0000E090      _fscanf
 0001:0000E128      _fseek
 0003:00000014      _ft
 0001:0000E19C      _ftell
 0001:00018D50      _getdate
 0001:00018D7C      _gettime
 0001:0000E228      _isatty
 0001:000132C0      _iswalnum
 0001:000132EC      _iswalpha
 0001:000132D8      _iswascii
 0001:00013304      _iswcntrl
 0001:00013318      _iswdigit
 0001:0001332C      _iswgraph
 0001:00013344      _iswlower
 0001:00013358      _iswprint
 0001:00013370      _iswpunct
 0001:00013384      _iswspace
 0001:00013398      _iswupper
 0001:000133AC      _iswxdigit
 0001:00015654      _itoa
 0001:00015170      _log
 0001:0000E4E0      _lseek
 0003:00000000      _m1
 0003:00000004      _m2
 0001:0000179D      _main
 0001:00017248      _malloc
 0001:0001341C      _mblen
 0001:000135D8      _mbstowcs
 0001:00013498      _mbtowc
 0001:000088F0      _memchr
 0001:00008B78      _memcmp
 0001:00008910      _memcpy
 0001:00008934      _memmove
 0001:00008980      _memset
 0001:000151E0      _pow
 0001:0000E584      _printf
 0001:00017DD8      _raise
 0001:0000E5C0      _read
 0001:00017268      _realloc
 0003:0000000C      _s
 0001:0000E5C8      _scanf
 0001:0000F00C      _setvbuf
 0001:00017D24      _signal
 0001:00015414      _sin
 0001:0000F094      _sprintf
 0001:00015458      _sqrt
 0001:00008A24      _strcat
 0001:00008A60      _strcmp
 0001:00008AAC      _strlen
 0001:00008B08      _strncat
 0001:00008BE4      _strncpy
 0003:00000008      _tisk
 0001:00015684      _ultoa
 0001:0000F314      _ungetc
 0001:0000F0B8      _vsprintf
 0001:00008C84      _wcscpy
 0001:00008C6C      _wcslen
 0001:00013740      _wcstombs
 0001:00013564      _wctomb
 0001:0000FD2C      _write
 0001:00013D0C      abs(const complex&)
 0001:00013FA0      acos(const complex&)
 0001:000140CC      arg(const complex&)
 0001:00014124      asin(const complex&)
 0001:00014254      atan(const complex&)
 0001:000017AC      complex::complex()
 0001:000017D0      complex::complex(double,double)
 0001:00013D44      complex::operator *=(const complex&)
 0001:00001910      complex::operator +()
 0001:00001810      complex::operator -()
 0001:00013DF0      complex::operator /=(const complex&)
 0001:00014328      cos(const complex&)
 0001:000143BC      cosh(const complex&)
 0001:000013B1      ctifft(const char*,complex**)
 0001:00014450      exp(const complex&)
 0001:00000218      fft2(double**,complex**,unsigned int,unsigned int)
 0002:000035E4      filebuf::
 0001:0001116C      filebuf::close()
 0001:000111DC      filebuf::filebuf(int)
 0001:00012D10      filebuf::lock()
 0002:00003648      filebuf::openprot
 0001:00011308      filebuf::overflow(int)
 0001:00011468      filebuf::seekoff(long,ios::seek_dir)
 0001:000113F0      filebuf::setbuf(char*,int)
 0001:00011568      filebuf::sync()
 0001:00011674      filebuf::underflow()
 0001:00012D24      filebuf::unlock()
 0001:00011288      filebuf::~filebuf()
 0001:0000157C      fmain()
 0001:000009EE      ifft2(complex**,complex**,unsigned int,unsigned int)
 0001:00001950      imag(const complex&)
 0001:0000941B      invokeHnd()
 0002:00003868      ios::
 0002:000038AC      ios::adjustfield
 0002:000038A8      ios::basefield
 0001:00012AF4      ios::clear(int)
 0002:000038B0      ios::floatfield
 0001:00012BFC      ios::init(streambuf*)
 0001:00012B30      ios::ios()
 0002:000038B4      ios::nextbit
 0001:00012C44      ios::setf(long)
 0001:00012C9C      ios::setstate(int)
 0001:00012CC8      ios::tie(ostream*)
 0002:000038B8      ios::usercount
 0001:00012B84      ios::~ios()
 0002:00003670      istream::
 0001:00011868      istream::
 0001:000118F0      istream::do_get()
 0001:00011ACC      istream::eatwhite()
 0001:0001205C      istream::get(char&)
 0001:000120E4      istream::get(char*,int,char)
 0001:00011940      istream::ipfx(int)
 0001:000117DC      istream::istream()
 0001:00011FEC      istream::operator >>(char&)
 0001:00011B30      istream::operator >>(double&)
 0001:00012194      istream::putback(char)
 0001:000119D0      istream::~istream()
 0002:000036B0      istream_withassign::
 0001:000118E4      istream_withassign::
 0001:00011874      istream_withassign::istream_withassign()
 0001:000117C0      istream_withassign::operator =(streambuf*)
 0001:00011A44      istream_withassign::~istream_withassign()
 0001:00009400      jump()
 0001:0000155F      konec(int)
 0001:000144C8      log(const complex&)
 0001:00014518      log10(const complex&)
 0001:00013D30      norm(const complex&)
 0001:00013D8C      operator *(const complex&,const complex&)
 0001:00001840      operator *(const complex&,double)
 0001:000018D8      operator +(const complex&,const complex&)
 0001:000018A0      operator -(const complex&,const complex&)
 0001:00013E5C      operator /(const complex&,const complex&)
 0001:00001870      operator /(const complex&,double)
 0001:00013EEC      operator /(double,const complex&)
 0001:00014B94      operator <<(ostream&,const complex&)
 0001:00014BFC      operator >>(istream&,complex&)
 0001:000170C4      operator delete(void*)
 0001:000170D4      operator delete[](void*)
 0001:000170F8      operator new(unsigned int)
 0001:0001712C      operator new[](unsigned int)
 0001:000122A0      ostream::
 0002:00003738      ostream::
 0001:000124DC      ostream::do_opfx()
 0001:00012504      ostream::do_osfx()
 0001:000124B4      ostream::flush()
 0001:00012440      ostream::operator <<(double)
 0001:00012224      ostream::ostream()
 0001:00012544      ostream::outstr(const char*,const char*)
 0001:00012328      ostream::~ostream()
 0001:0001231C      ostream_withassign::
 0002:00003778      ostream_withassign::
 0001:00012200      ostream_withassign::operator =(streambuf*)
 0001:000122AC      ostream_withassign::ostream_withassign()
 0001:000123B8      ostream_withassign::~ostream_withassign()
 0001:000011E5      pisfft(const char*,complex**)
 0001:00014778      pow(const complex&,const complex&)
 0001:00014574      pow(const complex&,double)
 0001:0001465C      pow(double,const complex&)
 0001:00001944      real(const complex&)
 0001:000170E4      set_new_handler(void(*)())
 0001:00009111      set_terminate(void(*)())
 0001:000091BA      set_unexpected(void(*)())
 0001:00014820      sin(const complex&)
 0001:000148B8      sinh(const complex&)
 0001:0001494C      sqrt(const complex&)
 0002:00003804      streambuf::
 0001:00012820      streambuf::do_sgetn(char*,int)
 0001:00012800      streambuf::do_snextc()
 0001:00012898      streambuf::do_sputn(const char*,int)
 0001:00012734      streambuf::doallocate()
 0001:000127F0      streambuf::lock()
 0001:0001293C      streambuf::overflow(int)
 0001:00012944      streambuf::pbackfail(int)
 0001:00012A34      streambuf::seekoff(long,ios::seek_dir)
 0001:00012A3C      streambuf::seekpos(long,int)
 0001:00012970      streambuf::setb(char*,char*,int)
 0001:0001294C      streambuf::setbuf(char*,int)
 0001:000129D8      streambuf::setg(char*,char*,char*)
 0001:00012A0C      streambuf::setp(char*,char*)
 0001:00012A58      streambuf::sputn(const char*,int)
 0001:0001276C      streambuf::streambuf()
 0001:00012A9C      streambuf::sync()
 0001:00012AD4      streambuf::underflow()
 0001:000127F8      streambuf::unlock()
 0001:00012908      streambuf::~streambuf()
 0001:00018394      string::assert_element(unsigned int) const
 0001:00018434      string::assert_index(unsigned int) const
 0002:000045DC      string::case_sensitive
 0002:000045F0      string::freeboard
 0002:000045E8      string::initial_capac
 0001:0001890C      string::initial_capacity(unsigned int)
 0001:000182C4      string::lengtherror::~lengtherror()
 0001:00018944      string::max_waste(unsigned int)
 0001:000189B4      string::outofrange::outofrange(const string::outofrange&)
 0001:000189F0      string::outofrange::~outofrange()
 0002:000045E0      string::paranoid_check
 0002:000045EC      string::resize_inc
 0001:00018920      string::resize_increment(unsigned int)
 0001:000188D0      string::set_case_sensitive(int)
 0001:000188E4      string::set_paranoid_check(int)
 0002:000045E4      string::skip_white
 0001:000188F8      string::skip_whitespace(int)
 0001:00018180      string::string(const char*)
 0001:0001814C      string::string(const string&)
 0001:00018340      string::~string()
 0001:000014CD      sumerr()
 0001:000149D4      tan(const complex&)
 0001:00014AC8      tanh(const complex&)
 0001:0000910B      terminate()
 0002:000023D4      typeinfo::
 0001:0000D566      typeinfo::before(const typeinfo&) const
 0001:0000D5AF      typeinfo::name() const
 0001:0000D546      typeinfo::operator !=(const typeinfo&) const
 0001:0000D4FC      typeinfo::operator =(const typeinfo&)
 0001:0000D523      typeinfo::operator ==(const typeinfo&) const
 0001:0000D4C4      typeinfo::typeinfo(const typeinfo&)
 0001:0000D504      typeinfo::~typeinfo()
 0001:000091B4      unexpected()
 0001:00008D08      xalloc::raise()
 0001:00008CC4      xalloc::xalloc(const string&,unsigned int)
 0001:00008DD4      xalloc::xalloc(const xalloc&)
 0001:00008E18      xalloc::~xalloc()
 0001:00009000      xmsg::operator =(const xmsg&)
 0001:00008FAC      xmsg::raise()
 0001:00008EA4      xmsg::xmsg(const string&)
 0001:00008F04      xmsg::xmsg(const xmsg&)
 0001:00008F68      xmsg::~xmsg()

  Address         Publics by Value

 0001:00000000      @C1491_0
 0001:00000000      __acrtused
 0001:00000046      __GetExceptDLLinfo
 0001:0000004B      __isDLL
 0001:00000053      __getHInstance
 0001:000000F9      ___System__GetTls
 0001:000000F9      System::::GetTls() __fastcall
 0001:00000108      Alloc_2D(unsigned long,unsigned long)
 0001:00000108      @C1492_0
 0001:00000177      Dealloc_2D(double**)
 0001:00000190      CplxAlloc_2D(unsigned long,unsigned long)
 0001:000001FF      CplxDealloc_2D(complex**)
 0001:00000218      fft2(double**,complex**,unsigned int,unsigned int)
 0001:000009EE      ifft2(complex**,complex**,unsigned int,unsigned int)
 0001:000011E5      pisfft(const char*,complex**)
 0001:000013B1      ctifft(const char*,complex**)
 0001:000014CD      sumerr()
 0001:0000155F      konec(int)
 0001:0000157C      fmain()
 0001:0000179D      _main
 0001:000017AC      complex::complex()
 0001:000017D0      complex::complex(double,double)
 0001:00001810      complex::operator -()
 0001:00001840      operator *(const complex&,double)
 0001:00001870      operator /(const complex&,double)
 0001:000018A0      operator -(const complex&,const complex&)
 0001:000018D8      operator +(const complex&,const complex&)
 0001:00001910      complex::operator +()
 0001:00001944      real(const complex&)
 0001:00001950      imag(const complex&)
 0001:0000195C      @C1498_0
 0001:0000195C      __InitVCL
 0001:0000198B      __ExitVCL
 0001:00001998      @$xp$14System@TObject
 0001:000019B8      System::TObject::~TObject() __fastcall
 0001:000019D0      __ClassCreate
 0001:000019D0      @C1503_0
 0001:000019D8      __ClassDestroy
 0001:000019DD      __AfterConstruction
 0001:000019E5      __BeforeDestruction
 0001:000019F8      __roundToInt64
 0001:00001A08      @C1527_0
 0001:00001A08      System::AnsiString::AnsiString(const char*) __fastcall
 0001:00001A3F      System::AnsiString::AnsiString(const System::AnsiString&) __fastcall
 0001:00001A78      System::AnsiString::AnsiString(const char*,unsigned char) __fastcall
 0001:00001AB5      System::AnsiString::AnsiString(const wchar_t*) __fastcall
 0001:00001B4C      System::AnsiString::AnsiString(char) __fastcall
 0001:00001B95      System::AnsiString::AnsiString(int) __fastcall
 0001:00001BFC      System::AnsiString::AnsiString(double) __fastcall
 0001:00001C68      System::AnsiString::~AnsiString() __fastcall
 0001:00001C97      System::AnsiString::operator =(const System::AnsiString&) __fastcall
 0001:00001CAB      System::AnsiString::operator +=(const System::AnsiString&) __fastcall
 0001:00001CBF      System::AnsiString::operator +(const System::AnsiString&) const __fastcall
 0001:00001D48      System::AnsiString::operator ==(const System::AnsiString&) const __fastcall
 0001:00001D5E      System::AnsiString::operator !=(const System::AnsiString&) const __fastcall
 0001:00001D74      System::AnsiString::operator <(const System::AnsiString&) const __fastcall
 0001:00001D8A      System::AnsiString::operator >(const System::AnsiString&) const __fastcall
 0001:00001DA0      System::AnsiString::operator <=(const System::AnsiString&) const __fastcall
 0001:00001DC0      System::AnsiString::operator >=(const System::AnsiString&) const __fastcall
 0001:00001DE0      System::AnsiString::AnsiCompare(const System::AnsiString&) const __fastcall
 0001:00001E51      System::AnsiString::AnsiCompareIC(const System::AnsiString&) const __fastcall
 0001:00001EC2      System::AnsiString::Length() const __fastcall
 0001:00001ED0      System::AnsiString::IsEmpty() const __fastcall
 0001:00001EDF      System::AnsiString::StringOfChar(char,int) __fastcall
 0001:00001F7C      System::AnsiString::LoadStr(int) __fastcall
 0001:00001FE7      System::AnsiString::FmtLoadStr(int,const System::TVarRec*) __fastcall
 0001:0000205E      System::AnsiString::Format(const System::AnsiString&,const System::TVarRec) __fastcall
 0001:000020F2      System::AnsiString::FormatFloat(const System::AnsiString&,const long double) __fastcall
 0001:00002188      System::AnsiString::FloatToStrF(long double,System::AnsiString::TStringFloatFormat) __fastcall
 0001:0000220A      System::AnsiString::IntToHex(int,int) __fastcall
 0001:0000227B      System::AnsiString::CurrToStr(System::Currency) __fastcall
 0001:000022E8      System::AnsiString::CurrToStrF(System::Currency,System) __fastcall
 0001:00002361      System::AnsiString::WideCharBufSize() const __fastcall
 0001:00002384      System::AnsiString::WideChar(wchar_t*,int) const __fastcall
 0001:000023AB      System::AnsiString::Unique() __fastcall
 0001:000023B5      System::AnsiString::Insert(const System::AnsiString&) __fastcall
 0001:000023DA      System::AnsiString::Delete(int,int) __fastcall
 0001:000023FD      System::AnsiString::SetLength(int) __fastcall
 0001:0000241A      System::AnsiString::Pos(const System::AnsiString&) const __fastcall
 0001:0000243B      System::AnsiString::LowerCase() const __fastcall
 0001:000024C3      System::AnsiString::UpperCase() const __fastcall
 0001:0000254B      System::AnsiString::Trim() const __fastcall
 0001:000025D3      System::AnsiString::TrimLeft() const __fastcall
 0001:0000265B      System::AnsiString::TrimRight() const __fastcall
 0001:000026E3      System::AnsiString::SubString(int,int) const __fastcall
 0001:00002770      System::AnsiString::ToInt() const __fastcall
 0001:000027BD      System::AnsiString::ToIntDef(int) const __fastcall
 0001:00002810      System::AnsiString::ToDouble() const __fastcall
 0001:00002861      System::AnsiString::IsDelimiter(const System::AnsiString&) const __fastcall
 0001:000028D8      System::AnsiString::AnsiPos(const System::AnsiString&) const __fastcall
 0001:00002949      System::AnsiString::IsPathDelimiter(int) const __fastcall
 0001:0000299C      System::AnsiString::LastDelimiter(const System::AnsiString&) const __fastcall
 0001:00002A0D      System::AnsiString::ByteType(int) const __fastcall
 0001:00002A60      System::AnsiString::IsLeadByte(int) const __fastcall
 0001:00002A7D      System::AnsiString::IsTrailByte(int) const __fastcall
 0001:00002A9C      System::AnsiString::AnsiLastChar() const __fastcall
 0001:00002AE9      System::operator +(const char*,const System::AnsiString&) __fastcall
 0001:00002B71      System::operator >>(istream&,System::AnsiString&)
 0001:00002C48      __tpdsc__[System::AnsiString]
 0001:00002C98      __tpdsc__[System::AnsiString*]
 0001:00002CBC      @C1558_0
 0001:00002EB9      System::::Assign(void*&,System::SmallString<255>&) __fastcall
 0001:00002F0F      System::::_Flush(void*&) __fastcall
 0001:00002F34      System::::Flush(void*&) __fastcall
 0001:00002FD4      System::::FSafeDivideR() __fastcall
 0001:00002FD6      System::::FSafeDivide() __fastcall
 0001:000031E4      System::::Halt0() __fastcall
 0001:000031E8      System::::Halt() __fastcall
 0001:000031F5      System::::Run0Error() __fastcall
 0001:000031F9      System::::RunError() __fastcall
 0001:00003204      System::::ReadString() __fastcall
 0001:0000320F      System::::ReadCString() __fastcall
 0001:000032D7      System::::ResetText(void*&) __fastcall
 0001:000032DE      System::::RewritText(void*&) __fastcall
 0001:000032E5      System::::Append() __fastcall
 0001:000033ED      System::::ResetFile() __fastcall
 0001:00003404      System::::RewritFile() __fastcall
 0001:000034C8      System::::Write0String() __fastcall
 0001:000034D2      System::::WriteString() __fastcall
 0001:000034EF      System::::WriteLn() __fastcall
 0001:00003503      System::::Write0Char() __fastcall
 0001:00003555      System::::WriteChar() __fastcall
 0001:0000356C      System::::Write0CString() __fastcall
 0001:00003570      System::::WriteCString() __fastcall
 0001:000035BC      System::::Str0Ext() __fastcall
 0001:000035C8      System::::Str1Ext() __fastcall
 0001:000035CF      System::::Str2Ext() __fastcall
 0001:00003824      System::FPower10() __fastcall
 0001:00003824      System::::Pow10() __fastcall
 0001:00003AF8      System::initialization() __fastcall
 0001:00003AF8      @C1558_4
 0001:00003BB8      @$xp$13System@String
 0001:00003BC0      System::TextStart() __fastcall
 0001:00003BC4      System::_16414
 0001:00003C14      System::_16415
 0001:00003C1C      System::_16416
 0001:00003C4C      System::_16417
 0001:00003C64      System::_16418
 0001:00003CD8      System::_16419
 0001:00003D68      System::_16420
 0001:00003DCC      System::_16421
 0001:00003E44      System::_16422
 0001:00003EFC      System::_16423
 0001:00003F90      System::_16424
 0001:00004010      System::_16425
 0001:000040A0      System::_16426
 0001:000041C4      System::_16427
 0001:00004250      System::_16428
 0001:00004314      System::_16429
 0001:000043F8      System::_16430
 0001:0000444C      System::_16431
 0001:0000447C      System::_16432
 0001:000044AC      System::_16433
 0001:000044D0      System::_16434
 0001:000044F8      System::_16435
 0001:00004568      System::_16436
 0001:000045A0      System::_16437
 0001:00004638      System::_16438
 0001:000046B8      System::_16439
 0001:00004704      System::_16440
 0001:00004790      System::_16441
 0001:000047BC      System::_16442
 0001:000047F0      System::_16443
 0001:00004818      System::_16444
 0001:0000490C      System::SysGetMem(int) __fastcall
 0001:00004A94      System::SysFreeMem(void*) __fastcall
 0001:00004C38      System::_16447
 0001:00004E08      System::SysReallocMem(void*,int) __fastcall
 0001:00004ECC      System::::GetMem() __fastcall
 0001:00004EE4      System::::FreeMem() __fastcall
 0001:00004EFC      System::::ReallocMem() __fastcall
 0001:00004F4C      System::_16457
 0001:00004F8C      System::::_IOTest() __fastcall
 0001:00004FAC      System::_16459
 0001:00004FBC      System::_16460
 0001:00004FC8      System::Move(const void*,void*,int) __fastcall
 0001:00005008      System::::ValLong() __fastcall
 0001:000050D4      System::_16525
 0001:000050E0      System::TObject::ClassName(System::TMetaClass*) __fastcall
 0001:000050F4      System::TObject::NewInstance(System::TMetaClass*) __fastcall
 0001:0000511C      System::TObject::FreeInstance() __fastcall
 0001:00005140      System::TObject::Free() __fastcall
 0001:0000514C      System::::IsClass() __fastcall
 0001:00005164      System::_16542
 0001:00005190      System::TObject::DefaultHandler(void*) __fastcall
 0001:00005194      System::TObject::AfterConstruction() __fastcall
 0001:00005198      System::TObject::BeforeDestruction() __fastcall
 0001:0000519C      System::TObject::Dispatch(void*) __fastcall
 0001:000051C4      System::::ClassCreate() __fastcall
 0001:00005204      System::::ClassDestroy() __fastcall
 0001:0000520C      System::::AfterConstruction() __fastcall
 0001:00005214      System::::BeforeDestruction() __fastcall
 0001:00005224      System::_16560
 0001:00005240      System::_16561
 0001:00005260      System::_16562
 0001:00005274      System::_16564
 0001:00005288      System::_16565
 0001:000052A8      System::_16566
 0001:000052D0      System::::HandleAnyException() __fastcall
 0001:000053A0      System::::HandleFinally() __fastcall
 0001:000053D8      System::::RaiseExcept() __fastcall
 0001:000053F4      System::::RaiseAgain() __fastcall
 0001:00005448      System::::TryFinallyExit() __fastcall
 0001:00005460      System::_16581
 0001:00005488      System::::LStrClr() __fastcall
 0001:000054A8      System::::LStrArrayClr() __fastcall
 0001:000054D8      System::::LStrAsg() __fastcall
 0001:0000551C      System::::LStrLAsg() __fastcall
 0001:00005544      System::::NewAnsiString() __fastcall
 0001:00005568      System::::LStrFromLenStr() __fastcall
 0001:00005598      System::::LStrFromChar() __fastcall
 0001:000055A8      System::::LStrFromPChar() __fastcall
 0001:000055D8      System::::LStrFromArray() __fastcall
 0001:000055F0      System::::LStrLen() __fastcall
 0001:000055F8      System::::LStrCat() __fastcall
 0001:0000563C      System::::LStrCat3() __fastcall
 0001:000056B0      System::::LStrCatN() __fastcall
 0001:00005700      System::::LStrCmp() __fastcall
 0001:000057A4      System::::LStrToPChar() __fastcall
 0001:000057B0      System::UniqueString(System::AnsiString&) __fastcall
 0001:000057E4      System::::LStrCopy() __fastcall
 0001:00005824      System::::LStrDelete() __fastcall
 0001:0000586C      System::::LStrInsert() __fastcall
 0001:000058C8      System::::LStrPos() __fastcall
 0001:00005910      System::::LStrSetLength() __fastcall
 0001:00005974      System::::FinalizeRecord() __fastcall
 0001:0000599C      System::::FinalizeArray() __fastcall
 0001:00005A24      System::::Finalize() __fastcall
 0001:00005A30      System::WideCharLenToStrVar(wchar_t*,int,System::AnsiString&) __fastcall
 0001:00005ABC      System::OleStrToStrVar(wchar_t*,System::AnsiString&) __fastcall
 0001:00005AD8      System::StringToOleStr(const System::AnsiString) __fastcall
 0001:00005B5C      System::_16646
 0001:00005B64      System::_16647
 0001:00005B6C      System::VarClear(System::Variant&) __fastcall
 0001:00005BA0      System::VarCopy(System::Variant&,const System::Variant) __fastcall
 0001:00005C14      System::_16651
 0001:00005C84      System::_16652
 0001:00005CB4      System::_16653
 0001:00005CD4      System::VarCast(System::Variant&,const System::Variant) __fastcall
 0001:00005DC4      System::::VarToLStr(System::AnsiString&,const System::Variant) __fastcall
 0001:00005E00      System::::VarClr() __fastcall
 0001:00005E08      System::VclInit(bool,long,bool)
 0001:00005E3C      System::VclExit()
 0001:00005E58      System::GetMemory(int)
 0001:00005E68      System::FreeMemory(void*)
 0001:00005E80      System::ReallocMemory(void*,int)
 0001:00005E90      System::::Close() __fastcall
 0001:00005ECC      System::::ReadChar() __fastcall
 0001:00005F40      @C1559_0
 0001:00005F62      Sysutils::FloatToText(char*,const void*,Sysutils::TFloatValue,S,...
 0001:0000622B      Sysutils::FloatToTextFmt(char*,const void*,Sysutils::TFloatValue,...
 0001:000064FE      Sysutils::FloatToDecimal(Sysutils::TFloatRec&,const void,Sysutils::TFloatValue,int) __fastcall
 0001:000066EB      Sysutils::TextToFloat(char*,void*,Sysutils::TFloatValue) __fastcall
 0001:000067EC      Sysutils::initialization() __fastcall
 0001:000067EC      @C1559_3
 0001:00006848      Sysutils::Exception::
 0001:000068A4      Sysutils::EOutOfMemory::
 0001:000068F4      Sysutils::EInOutError::
 0001:00006940      Sysutils::EIntError::
 0001:0000698C      Sysutils::EDivByZero::
 0001:000069D8      Sysutils::ERangeError::
 0001:00006A24      Sysutils::EIntOverflow::
 0001:00006A74      Sysutils::EMathError::
 0001:00006AC0      Sysutils::EInvalidOp::
 0001:00006B0C      Sysutils::EZeroDivide::
 0001:00006B58      Sysutils::EOverflow::
 0001:00006BA4      Sysutils::EUnderflow::
 0001:00006BF0      Sysutils::EInvalidPointer::
 0001:00006C40      Sysutils::EInvalidCast::
 0001:00006C90      Sysutils::EConvertError::
 0001:00006CE0      Sysutils::EAccessViolation::
 0001:00006D34      Sysutils::EPrivilege::
 0001:00006D80      Sysutils::EStackOverflow::
 0001:00006DD0      Sysutils::EControlC::
 0001:00006E1C      Sysutils::EVariantError::
 0001:00006E6C      Sysutils::EExternalException::
 0001:00006EC0      SysUtils::_16442
 0001:00006ED8      SysUtils::_16443
 0001:00006EFC      Sysutils::AnsiUpperCase(const System::AnsiString) __fastcall
 0001:00006F2C      Sysutils::AnsiLowerCase(const System::AnsiString) __fastcall
 0001:00006F5C      Sysutils::AnsiCompareStr(const System::AnsiString,const System::AnsiString) __fastcall
 0001:00006F94      Sysutils::AnsiCompareText(const System::AnsiString,const System::AnsiString) __fastcall
 0001:00006FCC      Sysutils::Trim(const System::AnsiString) __fastcall
 0001:0000701C      Sysutils::TrimLeft(const System::AnsiString) __fastcall
 0001:00007050      Sysutils::TrimRight(const System::AnsiString) __fastcall
 0001:00007084      Sysutils::IntToStr(int) __fastcall
 0001:000070B4      Sysutils::IntToHex(int,int) __fastcall
 0001:000070F0      Sysutils::StrToInt(const System::AnsiString) __fastcall
 0001:0000712C      Sysutils::StrToIntDef(const System::AnsiString) __fastcall
 0001:00007144      Sysutils::LoadStr(int) __fastcall
 0001:0000717C      Sysutils::FmtLoadStr(int,const System::TVarRec*,int) __fastcall
 0001:000071D8      Sysutils::AnsiLastChar(const System::AnsiString) __fastcall
 0001:00007200      Sysutils::LastDelimiter(const System::AnsiString,const System::AnsiString) __fastcall
 0001:00007248      Sysutils::StrLen(char*) __fastcall
 0001:00007260      Sysutils::StrMove(char*,char*,unsigned int) __fastcall
 0001:0000729C      Sysutils::StrLCopy(char*,char*,unsigned int) __fastcall
 0001:000072D0      Sysutils::StrLIComp(char*,char*,unsigned int) __fastcall
 0001:00007318      Sysutils::StrScan(char*,char) __fastcall
 0001:00007338      Sysutils::StrPos(char*,char*) __fastcall
 0001:00007384      SysUtils::_16545
 0001:000073DC      SysUtils::_16546
 0001:000073F0      SysUtils::_16547
 0001:000073FC      Sysutils::FormatBuf(void*,unsigned int,const void*,unsigned int,const System::TVarRec*,int) __fastcall
 0001:00007704      Sysutils::StrFmt(char*,char*,const System::TVarRec*,int) __fastcall
 0001:00007738      Sysutils::Format(const System::AnsiString,const System::TVarRec,int) __fastcall
 0001:0000774C      Sysutils::FmtStr(System::AnsiString&,System::AnsiString,const System::TVarRec,int) __fastcall
 0001:000077B0      Sysutils::FloatToStr(long double) __fastcall
 0001:000077E0      Sysutils::CurrToStr(System::Currency) __fastcall
 0001:00007810      Sysutils::FloatToStrF(long double,Sysutils::TFloatFormat,int) __fastcall
 0001:00007848      Sysutils::CurrToStrF(System::Currency,S,...
 0001:00007880      Sysutils::FormatFloat(const System::AnsiString) __fastcall
 0001:000078D8      Sysutils::StrToFloat(const System::AnsiString) __fastcall
 0001:00007914      Sysutils::GetLocaleStr(int,int,const System::AnsiString) __fastcall
 0001:00007960      Sysutils::GetLocaleChar(int,int,char) __fastcall
 0001:00007988      SysUtils::_16613
 0001:00007ACC      SysUtils::_16614
 0001:00007CD8      Sysutils::GetFormatSettings() __fastcall
 0001:00008024      SysUtils::_16618
 0001:00008030      Sysutils::ShowException(System::TObject*,void) __fastcall
 0001:000081B4      Sysutils::Exception::Exception(const System::AnsiString) __fastcall
 0001:000081EC      Sysutils::Exception::Exception(int) __fastcall
 0001:00008264      Sysutils::Exception::Exception(int,const System::TVarRec*,int) __fastcall
 0001:000082F8      Sysutils::EOutOfMemory::~EOutOfMemory() __fastcall
 0001:00008308      Sysutils::EOutOfMemory::FreeInstance() __fastcall
 0001:0000830C      SysUtils::_16634
 0001:00008394      SysUtils::_16636
 0001:000083D0      SysUtils::_16637
 0001:00008450      SysUtils::_16638
 0001:00008464      SysUtils::_16639
 0001:00008558      SysUtils::_16640
 0001:00008568      SysUtils::_16641
 0001:000085B4      SysUtils::_16642
 0001:000085DC      SysUtils::_16644
 0001:0000863C      Sysutils::ByteType(const System::AnsiString) __fastcall
 0001:00008660      Sysutils::StrByteType(char*,unsigned int) __fastcall
 0001:00008678      Sysutils::IsPathDelimiter(const System::AnsiString) __fastcall
 0001:000086AC      Sysutils::IsDelimiter(const System::AnsiString,const System::AnsiString,int) __fastcall
 0001:000086F0      Sysutils::AnsiPos(const System::AnsiString,const System::AnsiString) __fastcall
 0001:00008728      Sysutils::AnsiStrPos(char*,char*) __fastcall
 0001:000087C8      Sysutils::AnsiStrRScan(char*,char) __fastcall
 0001:000087F0      Sysutils::AnsiStrScan(char*,char) __fastcall
 0001:00008830      SysUtils::_16661
 0001:000088E0      @C1565_0
 0001:000088E0      Windows::initialization() __fastcall
 0001:000088E0      @C1565_2
 0001:000088F0      @C1778_0
 0001:000088F0      _memchr
 0001:000088F0      ___org_memchr
 0001:00008910      ___org_memcpy
 0001:00008910      @C1780_0
 0001:00008910      _memcpy
 0001:00008934      ___org_memmove
 0001:00008934      _memmove
 0001:00008934      @C1782_0
 0001:00008980      _memset
 0001:00008980      ___org_memset
 0001:00008980      @C1783_0
 0001:00008A0C      @C1784_0
 0001:00008A0C      __wmemset
 0001:00008A24      ___org_strcat
 0001:00008A24      @C1791_0
 0001:00008A24      _strcat
 0001:00008A60      @C1793_0
 0001:00008A60      _strcmp
 0001:00008A60      ___org_strcmp
 0001:00008AAC      _strlen
 0001:00008AAC      ___org_strlen
 0001:00008AAC      @C1795_0
 0001:00008B08      _strncat
 0001:00008B08      @C1796_0
 0001:00008B08      ___org_strncat
 0001:00008B78      _memcmp
 0001:00008B78      @C1804_0
 0001:00008B78      ___org_memcmp
 0001:00008BE4      _strncpy
 0001:00008BE4      ___org_strncpy
 0001:00008BE4      @C1810_0
 0001:00008C34      __stpcpy
 0001:00008C34      @C1820_0
 0001:00008C6C      @C1821_0
 0001:00008C6C      _wcslen
 0001:00008C84      @C1822_0
 0001:00008C84      _wcscpy
 0001:00008CC4      @C1842_0
 0001:00008CC4      xalloc::xalloc(const string&,unsigned int)
 0001:00008D08      xalloc::raise()
 0001:00008D6C      __tpdsc__[xalloc*]
 0001:00008D84      __tpdsc__[xalloc] const
 0001:00008DD4      xalloc::xalloc(const xalloc&)
 0001:00008E18      xalloc::~xalloc()
 0001:00008E60      __tpdsc__[xmsg] const
 0001:00008EA4      xmsg::xmsg(const string&)
 0001:00008EA4      @C1843_0
 0001:00008F04      xmsg::xmsg(const xmsg&)
 0001:00008F68      xmsg::~xmsg()
 0001:00008FAC      xmsg::raise()
 0001:00009000      xmsg::operator =(const xmsg&)
 0001:00009070      __tpdsc__[xmsg*]
 0001:00009084      __tpdsc__[string*]
 0001:0000909C      __tpdsc__[string]
 0001:000090E0      @C1844_0
 0001:000090E0      @C1844_4
 0001:0000910B      terminate()
 0001:00009111      set_terminate(void(*)())
 0001:00009139      ___call_terminate
 0001:000091B4      unexpected()
 0001:000091BA      set_unexpected(void(*)())
 0001:000091E2      ___call_unexpected
 0001:00009221      __GetPolymorphicDTC(void*,unsigned int)
 0001:00009240      __ExceptInit
 0001:00009263      __GetExceptDLLinfoInternal
 0001:0000928C      ___DefHandler
 0001:0000928C      @C1847_0
 0001:00009298      @C1848_0
 0001:00009374      __setexc
 0001:00009390      __unsetexc
 0001:000093A0      __SetUserHandler
 0001:000093B4      __unsetuserhandler
 0001:000093C0      @C1848_3
 0001:000093C0      __init_except
 0001:000093D8      @C1848_4
 0001:000093D8      __exit_except
 0001:000093EC      __InitDefaultHander
 0001:00009400      @C1849_0
 0001:00009400      jump()
 0001:00009406      ___doGlobalUnwind
 0001:0000941B      invokeHnd()
 0001:00009424      @C1850_0
 0001:00009424      @C1850_3
 0001:0000944F      ___JumpToCatch__
 0001:00009B87      ___raiseDebuggerException
 0001:00009F73      _ThrowExceptionLDTC(void*,void*,void*,void*,unsigned int,unsigned int,unsigned int,unsigned char*,void*)
 0001:00009FA8      _ReThrowException(unsigned int,unsigned char*)
 0001:0000A0E5      __Global_unwind
 0001:0000A235      _CatchCleanup()
 0001:0000A8A6      __Local_unwind
 0001:0000A8B9      __Return_unwind
 0001:0000A9F4      ____ExceptionHandler
 0001:0000AE96      __ExceptionHandler
 0001:0000B8AB      __CurrExcContext
 0001:0000B8FF      @C1850_4
 0001:0000B968      Sysutils::EDivByZero::EDivByZero(const System::AnsiString) __fastcall
 0001:0000BA20      Sysutils::ERangeError::ERangeError(const System::AnsiString) __fastcall
 0001:0000BAD8      Sysutils::EIntOverflow::EIntOverflow(const System::AnsiString) __fastcall
 0001:0000BB90      Sysutils::EInvalidOp::EInvalidOp(const System::AnsiString) __fastcall
 0001:0000BC48      Sysutils::EZeroDivide::EZeroDivide(const System::AnsiString) __fastcall
 0001:0000BD00      Sysutils::EOverflow::EOverflow(const System::AnsiString) __fastcall
 0001:0000BDB8      Sysutils::EUnderflow::EUnderflow(const System::AnsiString) __fastcall
 0001:0000BE70      Sysutils::EAccessViolation::EAccessViolation(const System::AnsiString) __fastcall
 0001:0000BF28      Sysutils::EPrivilege::EPrivilege(const System::AnsiString) __fastcall
 0001:0000BFE0      Sysutils::EControlC::EControlC(const System::AnsiString) __fastcall
 0001:0000C098      Sysutils::EStackOverflow::EStackOverflow(const System::AnsiString) __fastcall
 0001:0000C150      Sysutils::EIntError::EIntError(const System::AnsiString) __fastcall
 0001:0000C208      Sysutils::EMathError::EMathError(const System::AnsiString) __fastcall
 0001:0000C2C0      __tpdsc__[Sysutils::EMathError*]
 0001:0000C2E4      __tpdsc__[Sysutils::EIntError*]
 0001:0000C308      __tpdsc__[Sysutils::EStackOverflow*]
 0001:0000C330      __tpdsc__[Sysutils::EControlC*]
 0001:0000C354      __tpdsc__[Sysutils::EPrivilege*]
 0001:0000C378      __tpdsc__[Sysutils::Exception]
 0001:0000C3E4      __tpdsc__[Sysutils::EAccessViolation*]
 0001:0000C410      __tpdsc__[Sysutils::EUnderflow*]
 0001:0000C434      __tpdsc__[Sysutils::EOverflow*]
 0001:0000C458      __tpdsc__[Sysutils::EZeroDivide*]
 0001:0000C47C      __tpdsc__[Sysutils::EMathError]
 0001:0000C4DC      __tpdsc__[Sysutils::EInvalidOp*]
 0001:0000C500      __tpdsc__[Sysutils::EIntOverflow*]
 0001:0000C528      __tpdsc__[Sysutils::ERangeError*]
 0001:0000C54C      __tpdsc__[Sysutils::EIntError]
 0001:0000C5A8      __tpdsc__[Sysutils::EDivByZero*]
 0001:0000C5CC      __tpdsc__[Sysutils::Exception*]
 0001:0000C5F0      __tpdsc__[Sysutils::EStackOverflow&]
 0001:0000C618      __tpdsc__[Sysutils::EControlC&]
 0001:0000C63C      __tpdsc__[Sysutils::EPrivilege&]
 0001:0000C660      __tpdsc__[Sysutils::EAccessViolation&]
 0001:0000C68C      __tpdsc__[Sysutils::EUnderflow&]
 0001:0000C6B0      __tpdsc__[Sysutils::EOverflow&]
 0001:0000C6D4      __tpdsc__[Sysutils::EZeroDivide&]
 0001:0000C6F8      __tpdsc__[Sysutils::EInvalidOp&]
 0001:0000C71C      __tpdsc__[Sysutils::EIntOverflow&]
 0001:0000C744      __tpdsc__[Sysutils::ERangeError&]
 0001:0000C768      __tpdsc__[Sysutils::EDivByZero&]
 0001:0000C78C      Sysutils::Exception::~Exception() __fastcall
 0001:0000C7F4      Sysutils::EMathError::~EMathError() __fastcall
 0001:0000C848      Sysutils::EIntError::~EIntError() __fastcall
 0001:0000C89C      __tpdsc__[typeinfo]
 0001:0000C8E4      __tpdsc__[Sysutils::EDivByZero]
 0001:0000C944      __tpdsc__[Sysutils::ERangeError]
 0001:0000C9A4      __tpdsc__[Sysutils::EIntOverflow]
 0001:0000CA04      __tpdsc__[Sysutils::EInvalidOp]
 0001:0000CA64      __tpdsc__[Sysutils::EZeroDivide]
 0001:0000CAC4      __tpdsc__[Sysutils::EOverflow]
 0001:0000CB20      __tpdsc__[Sysutils::EUnderflow]
 0001:0000CB80      __tpdsc__[Sysutils::EAccessViolation]
 0001:0000CBE4      __tpdsc__[System::TObject]
 0001:0000CC30      __tpdsc__[Sysutils::EPrivilege]
 0001:0000CC90      __tpdsc__[Sysutils::EControlC]
 0001:0000CCEC      __tpdsc__[Sysutils::EStackOverflow]
 0001:0000CD50      Sysutils::EDivByZero::~EDivByZero() __fastcall
 0001:0000CDA4      Sysutils::ERangeError::~ERangeError() __fastcall
 0001:0000CDF8      Sysutils::EIntOverflow::~EIntOverflow() __fastcall
 0001:0000CE4C      Sysutils::EInvalidOp::~EInvalidOp() __fastcall
 0001:0000CEA0      Sysutils::EZeroDivide::~EZeroDivide() __fastcall
 0001:0000CEF4      Sysutils::EOverflow::~EOverflow() __fastcall
 0001:0000CF48      Sysutils::EUnderflow::~EUnderflow() __fastcall
 0001:0000CF9C      Sysutils::EAccessViolation::~EAccessViolation() __fastcall
 0001:0000CFF0      Sysutils::EPrivilege::~EPrivilege() __fastcall
 0001:0000D044      Sysutils::EControlC::~EControlC() __fastcall
 0001:0000D098      Sysutils::EStackOverflow::~EStackOverflow() __fastcall
 0001:0000D0EC      @C1851_0
 0001:0000D0EC      @__InitExceptBlockLDTC
 0001:0000D128      __typeIDname(tpid*)
 0001:0000D128      @C1852_0
 0001:0000D15F      __isSameTypeID(tpid*,tpid*)
 0001:0000D391      __isCompatTypeID(tpid*,tpid*,int,tpid**)
 0001:0000D4A0      __ThrowFileName()
 0001:0000D4AC      __ThrowLineNumber()
 0001:0000D4B8      __ThrowExceptionName()
 0001:0000D4C4      typeinfo::typeinfo(const typeinfo&)
 0001:0000D4FC      typeinfo::operator =(const typeinfo&)
 0001:0000D504      typeinfo::~typeinfo()
 0001:0000D523      typeinfo::operator ==(const typeinfo&) const
 0001:0000D546      typeinfo::operator !=(const typeinfo&) const
 0001:0000D566      typeinfo::before(const typeinfo&) const
 0001:0000D5AF      typeinfo::name() const
 0001:0000D5C0      __GetTypeInfo(void*,void*,void*,void*)
 0001:0000D884      __DynamicCast(void*,void*,void*,void*,int)
 0001:0000D96C      __DynamicCastVCLref(void*,void*) __fastcall
 0001:0000D99E      __DynamicCastVCLptr(void*,void*) __fastcall
 0001:0000DA54      __adjustClassAdr(void*,tpid*,tpid*)
 0001:0000DAD0      __tpdsc__[typeinfo*]
 0001:0000DAE8      __tpdsc__[Bad_typeid]
 0001:0000DB04      __tpdsc__[Bad_cast]
 0001:0000DB20      @C1854_0
 0001:0000DB20      __SetExceptionHandler
 0001:0000DB35      __UnsetExceptionHandler
 0001:0000DB61      __UnwindException
 0001:0000DB68      @C1855_0
 0001:0000DB68      ___org_access
 0001:0000DB68      _access
 0001:0000DB70      __allocbuf
 0001:0000DB70      @C1856_0
 0001:0000DBF0      ___org_close
 0001:0000DBF0      @C1860_0
 0001:0000DBF0      _close
 0001:0000DBF8      ___org_fclose
 0001:0000DBF8      @C1868_0
 0001:0000DBF8      _fclose
 0001:0000DC98      @C1870_0
 0001:0000DC98      ___org_fflush
 0001:0000DC98      _fflush
 0001:0000DD28      @C1880_0
 0001:0000DD28      __flushout
 0001:0000DD8C      __initfmode
 0001:0000DD8C      @C1882_0
 0001:0000DD9C      @C1885_0
 0001:0000DE78      ___openfp
 0001:0000DF20      ___getfp
 0001:0000DF4C      ___org_fopen
 0001:0000DF4C      _fopen
 0001:0000DF80      @C1886_0
 0001:0000DF80      ___org_fprintf
 0001:0000DF80      _fprintf
 0001:0000DFB4      @C1889_0
 0001:0000DFB4      ___fputn
 0001:0000E090      @C1896_0
 0001:0000E090      _fscanf
 0001:0000E090      ___org_fscanf
 0001:0000E0CC      @C1898_0
 0001:0000E128      ___org_fseek
 0001:0000E128      _fseek
 0001:0000E19C      _ftell
 0001:0000E19C      ___org_ftell
 0001:0000E228      @C1908_0
 0001:0000E228      _isatty
 0001:0000E228      ___org_isatty
 0001:0000E230      @C1909_0
 0001:0000E2D0      ___org__fgetc
 0001:0000E2D0      __fgetc
 0001:0000E2E8      __lgetc
 0001:0000E3D0      @C1911_0
 0001:0000E3D0      __lputc
 0001:0000E4E0      _lseek
 0001:0000E4E0      ___org_lseek
 0001:0000E4E0      @C1913_0
 0001:0000E4E8      @C1915_0
 0001:0000E4E8      ___mkname
 0001:0000E540      ___tmpnam
 0001:0000E584      @C1919_0
 0001:0000E584      ___org_printf
 0001:0000E584      _printf
 0001:0000E5C0      @C1924_0
 0001:0000E5C0      _read
 0001:0000E5C0      ___org_read
 0001:0000E5C8      @C1928_0
 0001:0000E5C8      ___org_scanf
 0001:0000E5C8      _scanf
 0001:0000E608      __scanner
 0001:0000E608      @C1930_0
 0001:0000EDE4      @C1934_0
 0001:0000EDE4      ___scantoint64
 0001:0000F00C      @C1939_0
 0001:0000F00C      _setvbuf
 0001:0000F00C      ___org_setvbuf
 0001:0000F06C      @C1942_0
 0001:0000F094      _sprintf
 0001:0000F094      ___org_sprintf
 0001:0000F0B8      _vsprintf
 0001:0000F0B8      ___org_vsprintf
 0001:0000F0DC      @C1946_0
 0001:0000F0DC      __init_streams
 0001:0000F1A0      __exit_streams
 0001:0000F1A0      @C1946_3
 0001:0000F1F8      __lock_all_streams
 0001:0000F208      __unlock_all_streams
 0001:0000F218      __lock_stream
 0001:0000F2BC      __cleanup_stream_locks
 0001:0000F2E0      __unlock_stream
 0001:0000F314      ___org_ungetc
 0001:0000F314      @C1952_0
 0001:0000F314      _ungetc
 0001:0000F378      @C1958_0
 0001:0000F404      ___vprinter
 0001:0000FD2C      _write
 0001:0000FD2C      @C1974_0
 0001:0000FD2C      ___org_write
 0001:0000FD34      __xfclose
 0001:0000FD34      @C1980_0
 0001:0000FD6C      __xfflush
 0001:0000FD6C      @C1981_0
 0001:0000FDA0      @C1984_0
 0001:0000FDA0      ___eof
 0001:0000FE38      @C1985_0
 0001:0000FEA4      ___read
 0001:0000FFEC      @C1987_0
 0001:000100A4      ___write
 0001:0001019C      @C1988_0
 0001:000101B0      @C1993_0
 0001:000101B0      __flushall
 0001:000101F4      @C1994_0
 0001:000101F4      ___org__fputc
 0001:000101F4      __fputc
 0001:00010214      _fgetc
 0001:00010214      ___org_fgetc
 0001:00010214      @C2010_0
 0001:0001023C      @C2012_0
 0001:0001023C      ___org_fputc
 0001:0001023C      _fputc
 0001:00010268      @C2039_0
 0001:00010268      __lock_all_handles
 0001:00010278      __cleanup_handle_locks
 0001:0001029C      __unlock_all_handles
 0001:000102AC      __lock_handle
 0001:00010340      __unlock_handle
 0001:00010368      __get_handle
 0001:000103A8      __dup_handle
 0001:00010410      __free_handle
 0001:000104C8      __init_handles
 0001:0001061C      @C2040_0
 0001:0001061C      ___doserrno
 0001:00010628      ___IOerror
 0001:00010674      ___DOSerror
 0001:00010694      ___NTerror
 0001:000106A8      @C2065_0
 0001:000106A8      ___org__rtl_read
 0001:000106A8      __rtl_read
 0001:000106F0      ___org__read
 0001:000106F0      __read
 0001:0001070C      ___org__rtl_write
 0001:0001070C      __rtl_write
 0001:0001070C      @C2067_0
 0001:00010754      __write
 0001:00010754      ___org__write
 0001:00010770      @C2070_0
 0001:00010770      ___access
 0001:000107B0      @C2071_0
 0001:000107B0      ___close
 0001:00010810      ___isatty
 0001:00010810      @C2075_0
 0001:00010840      ___isatty_osfhandle
 0001:00010858      @C2076_0
 0001:00010858      ___lseek
 0001:000108DC      @C2077_0
 0001:000108DC      ___open
 0001:00010ADC      __unlink
 0001:00010ADC      @C2082_0
 0001:00010AF8      @C2084_3
 0001:00010AF8      @C2084_0
 0001:00010D38      Iostream_delete()
 0001:00010D38      @C2084_5
 0001:00010DD0      @C2084_4
 0001:00010E40      @C2084_6
 0001:00010EAC      __tpdsc__[filebuf*]
 0001:00010EC4      __tpdsc__[istream_withassign*]
 0001:00010EE8      __tpdsc__[ostream_withassign*]
 0001:00010F0C      __tpdsc__[streambuf*]
 0001:00010F24      __tpdsc__[istream_withassign]
 0001:00010F8C      __tpdsc__[ostream_withassign]
 0001:00010FF4      __tpdsc__[ostream]
 0001:00011044      __tpdsc__[ios]
 0001:00011084      __tpdsc__[istream]
 0001:000110D4      __tpdsc__[streambuf]
 0001:0001111C      __tpdsc__[filebuf]
 0001:0001116C      filebuf::close()
 0001:0001116C      @C2094_0
 0001:000111DC      filebuf::filebuf(int)
 0001:000111DC      @C2096_0
 0001:00011288      @C2098_0
 0001:00011288      filebuf::~filebuf()
 0001:00011308      filebuf::overflow(int)
 0001:00011308      @C2099_0
 0001:000113F0      @C2101_0
 0001:000113F0      filebuf::setbuf(char*,int)
 0001:00011468      filebuf::seekoff(long,ios::seek_dir)
 0001:00011468      @C2102_0
 0001:00011568      filebuf::sync()
 0001:00011568      @C2103_0
 0001:00011674      filebuf::underflow()
 0001:00011674      @C2104_0
 0001:000117C0      istream_withassign::operator =(streambuf*)
 0001:000117C0      @C2137_0
 0001:000117DC      @C2138_0
 0001:000117DC      istream::istream()
 0001:00011850      __tpdsc__[istream*]
 0001:00011868      istream::
 0001:00011874      istream_withassign::istream_withassign()
 0001:00011874      @C2141_0
 0001:000118E4      istream_withassign::
 0001:000118F0      @C2142_0
 0001:000118F0      istream::do_get()
 0001:00011940      istream::ipfx(int)
 0001:00011940      @C2143_0
 0001:000119D0      @C2144_0
 0001:000119D0      istream::~istream()
 0001:00011A44      @C2145_0
 0001:00011A44      istream_withassign::~istream_withassign()
 0001:00011ACC      istream::eatwhite()
 0001:00011ACC      @C2146_0
 0001:00011B30      @C2150_0
 0001:00011B30      istream::operator >>(double&)
 0001:00011FEC      istream::operator >>(char&)
 0001:00011FEC      @C2155_0
 0001:0001205C      istream::get(char&)
 0001:0001205C      @C2165_0
 0001:000120E4      @C2167_0
 0001:000120E4      istream::get(char*,int,char)
 0001:00012194      @C2171_0
 0001:00012194      istream::putback(char)
 0001:00012200      ostream_withassign::operator =(streambuf*)
 0001:00012200      @C2192_0
 0001:00012224      @C2193_0
 0001:00012224      ostream::ostream()
 0001:00012288      __tpdsc__[ostream*]
 0001:000122A0      ostream::
 0001:000122AC      ostream_withassign::ostream_withassign()
 0001:000122AC      @C2195_0
 0001:0001231C      ostream_withassign::
 0001:00012328      @C2196_0
 0001:00012328      ostream::~ostream()
 0001:000123B8      ostream_withassign::~ostream_withassign()
 0001:000123B8      @C2197_0
 0001:00012440      @C2198_0
 0001:00012440      ostream::operator <<(double)
 0001:000124B4      ostream::flush()
 0001:000124B4      @C2199_0
 0001:000124DC      ostream::do_opfx()
 0001:000124DC      @C2206_0
 0001:00012504      ostream::do_osfx()
 0001:00012504      @C2207_0
 0001:00012544      ostream::outstr(const char*,const char*)
 0001:00012544      @C2208_0
 0001:00012734      @C2243_0
 0001:00012734      streambuf::doallocate()
 0001:0001276C      streambuf::streambuf()
 0001:0001276C      @C2244_0
 0001:000127F0      streambuf::lock()
 0001:000127F8      streambuf::unlock()
 0001:00012800      @C2247_0
 0001:00012800      streambuf::do_snextc()
 0001:00012820      @C2248_0
 0001:00012820      streambuf::do_sgetn(char*,int)
 0001:00012898      streambuf::do_sputn(const char*,int)
 0001:00012898      @C2249_0
 0001:00012908      streambuf::~streambuf()
 0001:00012908      @C2250_0
 0001:0001293C      streambuf::overflow(int)
 0001:0001293C      @C2251_0
 0001:00012944      streambuf::pbackfail(int)
 0001:00012944      @C2252_0
 0001:0001294C      @C2253_0
 0001:0001294C      streambuf::setbuf(char*,int)
 0001:00012970      streambuf::setb(char*,char*,int)
 0001:00012970      @C2254_0
 0001:000129D8      streambuf::setg(char*,char*,char*)
 0001:000129D8      @C2255_0
 0001:00012A0C      @C2256_0
 0001:00012A0C      streambuf::setp(char*,char*)
 0001:00012A34      @C2258_0
 0001:00012A34      streambuf::seekoff(long,ios::seek_dir)
 0001:00012A3C      @C2259_0
 0001:00012A3C      streambuf::seekpos(long,int)
 0001:00012A58      @C2260_0
 0001:00012A58      streambuf::sputn(const char*,int)
 0001:00012A9C      streambuf::sync()
 0001:00012A9C      @C2262_0
 0001:00012AD4      @C2264_0
 0001:00012AD4      streambuf::underflow()
 0001:00012AF4      ios::clear(int)
 0001:00012AF4      @C2265_0
 0001:00012B30      @C2266_0
 0001:00012B30      ios::ios()
 0001:00012B70      __tpdsc__[ios*]
 0001:00012B84      ios::~ios()
 0001:00012B84      @C2268_0
 0001:00012BFC      @C2270_0
 0001:00012BFC      ios::init(streambuf*)
 0001:00012C44      @C2273_0
 0001:00012C44      ios::setf(long)
 0001:00012C9C      @C2275_0
 0001:00012C9C      ios::setstate(int)
 0001:00012CC8      @C2278_0
 0001:00012CC8      ios::tie(ostream*)
 0001:00012D10      @C2285_0
 0001:00012D10      filebuf::lock()
 0001:00012D24      filebuf::unlock()
 0001:00012D38      @C2292_0
 0001:00012D38      __getLocaleTimeInfo
 0001:0001306C      __getLocaleMonetaryInfo
 0001:000131C0      __getLocaleMonetaryNegFmt
 0001:000131CC      __getLocaleNumericInfo
 0001:00013220      __getLocaleEra
 0001:000132C0      @C2294_0
 0001:000132C0      _iswalnum
 0001:000132D8      _iswascii
 0001:000132EC      _iswalpha
 0001:00013304      _iswcntrl
 0001:00013318      _iswdigit
 0001:0001332C      _iswgraph
 0001:00013344      _iswlower
 0001:00013358      _iswprint
 0001:00013370      _iswpunct
 0001:00013384      _iswspace
 0001:00013398      _iswupper
 0001:000133AC      _iswxdigit
 0001:000133C4      ___iswctype
 0001:000133C4      @C2296_0
 0001:0001341C      @C2319_0
 0001:0001341C      ___org_mblen
 0001:0001341C      _mblen
 0001:00013498      ___org_mbtowc
 0001:00013498      _mbtowc
 0001:00013564      ___org_wctomb
 0001:00013564      _wctomb
 0001:000135D8      ___org_mbstowcs
 0001:000135D8      _mbstowcs
 0001:00013740      _wcstombs
 0001:00013740      ___org_wcstombs
 0001:000138E4      @C2345_0
 0001:000138E4      __llmul
 0001:00013907      __lldiv
 0001:0001397F      __lludiv
 0001:000139C8      __llmod
 0001:00013A42      __llumod
 0001:00013A90      __llshl
 0001:00013AAC      __llshr
 0001:00013AC8      __llushr
 0001:00013AE4      @C2346_0
 0001:00013BCD      _acos
 0001:00013BCD      ___org_acos
 0001:00013BE8      ___org_asin
 0001:00013BE8      _asin
 0001:00013C00      ___org_atan2
 0001:00013C00      @C2349_0
 0001:00013C00      _atan2
 0001:00013CB4      @C2354_0
 0001:00013CB4      __clear87
 0001:00013CC8      _cos
 0001:00013CC8      ___org_cos
 0001:00013CC8      @C2355_0
 0001:00013D0C      abs(const complex&)
 0001:00013D0C      @C2359_0
 0001:00013D30      norm(const complex&)
 0001:00013D44      complex::operator *=(const complex&)
 0001:00013D8C      operator *(const complex&,const complex&)
 0001:00013DF0      complex::operator /=(const complex&)
 0001:00013DF0      @C2360_0
 0001:00013E5C      operator /(const complex&,const complex&)
 0001:00013EEC      operator /(double,const complex&)
 0001:00013FA0      acos(const complex&)
 0001:000140CC      arg(const complex&)
 0001:00014124      asin(const complex&)
 0001:00014254      atan(const complex&)
 0001:00014328      cos(const complex&)
 0001:000143BC      cosh(const complex&)
 0001:00014450      exp(const complex&)
 0001:000144C8      log(const complex&)
 0001:00014518      log10(const complex&)
 0001:00014574      pow(const complex&,double)
 0001:0001465C      pow(double,const complex&)
 0001:00014778      pow(const complex&,const complex&)
 0001:00014820      sin(const complex&)
 0001:000148B8      sinh(const complex&)
 0001:0001494C      sqrt(const complex&)
 0001:000149D4      tan(const complex&)
 0001:00014AC8      tanh(const complex&)
 0001:00014B94      operator <<(ostream&,const complex&)
 0001:00014BFC      operator >>(istream&,complex&)
 0001:00014D04      @C2360_2
 0001:00014D24      @C2363_0
 0001:00014D24      __control87
 0001:00014D4C      ___realcvt
 0001:00014D4C      @C2364_0
 0001:00014D52      ___nextreal
 0001:00014D58      __scantod
 0001:00014D5E      __scanrslt
 0001:00014D64      @C2367_0
 0001:00014D64      ___org_exp
 0001:00014D64      _exp
 0001:00014DD0      @C2370_0
 0001:00014DD0      __f87_ArcTan
 0001:00014E30      __f87_Exp2
 0001:00014E30      @C2371_0
 0001:00014E35      __f87_Exp10
 0001:00014E3D      __f87_Exp
 0001:00014F00      @C2372_0
 0001:00014F00      __f87_Log2
 0001:00014F04      __f87_Log10
 0001:00014F08      __f87_Log
 0001:00014F48      __f87_Sine
 0001:00014F48      @C2373_0
 0001:00014F4C      __f87_Cosine
 0001:00014F50      __f87_Tangent
 0001:0001502C      @C2374_0
 0001:0001502C      _fabs
 0001:0001503C      @C2383_0
 0001:0001503C      __fpreset
 0001:00015054      __fuildq
 0001:00015054      @C2387_0
 0001:00015084      __fuistq
 0001:00015084      @C2388_0
 0001:000150A8      @C2389_0
 0001:000150A8      __fxam
 0001:000150BC      ___int64toa
 0001:000150BC      @C2394_0
 0001:00015170      @C2398_0
 0001:00015170      ___org_log
 0001:00015170      _log
 0001:000151E0      _pow
 0001:000151E0      @C2408_0
 0001:000151E0      ___org_pow
 0001:000153BC      __qdiv10
 0001:000153BC      @C2410_0
 0001:000153E4      @C2411_0
 0001:000153E4      __qmul10
 0001:00015414      @C2415_0
 0001:00015414      _sin
 0001:00015414      ___org_sin
 0001:00015458      _sqrt
 0001:00015458      @C2419_0
 0001:00015458      ___org_sqrt
 0001:00015494      @C2437_0
 0001:000154AC      @C2438_0
 0001:000154C4      @C2445_0
 0001:000154C4      ___ldtrunc
 0001:000155C4      @C2446_0
 0001:000155C4      ___longtoa
 0001:00015638      ___utoa
 0001:00015654      ___org_itoa
 0001:00015654      _itoa
 0001:00015654      @C2448_0
 0001:00015684      _ultoa
 0001:00015684      ___org_ultoa
 0001:000156A4      __ltoa
 0001:000156CC      ___org__matherr
 0001:000156CC      @C2450_0
 0001:000156CC      __matherr
 0001:000156F8      ___org__matherrl
 0001:000156F8      __matherrl
 0001:000156F8      @C2451_0
 0001:00015728      __initmatherr
 0001:00015728      @C2452_0
 0001:00015740      @C2457_0
 0001:00015A24      __cvt_init
 0001:00015A3C      @C2458_0
 0001:00015D58      __cvt_initw
 0001:00015D70      @C2459_0
 0001:0001623C      __scan_init
 0001:00016254      @C2460_0
 0001:00016720      __scan_initw
 0001:00016738      @C2467_0
 0001:00016738      ___xcvt
 0001:00016A08      @C2468_0
 0001:00016A08      ___xcvtw
 0001:00016CF8      ___matherr
 0001:00016CF8      @C2473_0
 0001:00016DA8      @C2474_0
 0001:00016DA8      __pow10
 0001:00016F20      @C2486_0
 0001:00016F20      __setmbcp
 0001:00017010      __initMBCSTable
 0001:00017010      @C2486_3
 0001:00017020      __ismbcspace
 0001:00017020      @C2497_0
 0001:00017040      __mbsrchr
 0001:00017040      @C2528_0
 0001:00017098      ___org_calloc
 0001:00017098      _calloc
 0001:00017098      @C2558_0
 0001:000170C4      operator delete(void*)
 0001:000170C4      @C2559_0
 0001:000170C4      ___org_delete
 0001:000170D4      ___org_deletea
 0001:000170D4      operator delete[](void*)
 0001:000170D4      @C2560_0
 0001:000170E4      set_new_handler(void(*)())
 0001:000170E4      @C2561_0
 0001:000170F8      operator new(unsigned int)
 0001:000170F8      ___org_new
 0001:0001712C      operator new[](unsigned int)
 0001:0001712C      @C2562_0
 0001:0001712C      ___org_newa
 0001:0001713C      @C2565_0
 0001:000171A0      @C2565_3
 0001:000171AC      @C2565_4
 0001:0001720C      @C2565_5
 0001:00017244      InitProntoMemoryManager() __fastcall
 0001:00017244      @C2572_0
 0001:00017248      ___org_malloc
 0001:00017248      _malloc
 0001:00017258      _free
 0001:00017258      ___org_free
 0001:00017268      ___org_realloc
 0001:00017268      _realloc
 0001:0001728C      __free_heaps
 0001:00017290      @C2578_0
 0001:000172D8      __assert
 0001:00017338      ___errno
 0001:00017338      @C2583_0
 0001:00017344      @C2588_0
 0001:000173A0      __ErrorMessage
 0001:00017480      ___ErrorMessage
 0001:00017490      __ErrorExit
 0001:000174A8      @C2589_0
 0001:00017508      __ErrorMessageHelper
 0001:00017564      __abort
 0001:00017564      @C2595_0
 0001:00017578      _abort
 0001:00017588      @C2613_0
 0001:00017600      _exit
 0001:00017618      __exit
 0001:00017630      __cexit
 0001:00017640      __c_exit
 0001:00017650      @C2617_0
 0001:00017650      __initwild
 0001:00017654      @C2621_0
 0001:00017654      __setargv
 0001:00017654      @C2621_3
 0001:000177E8      __exitargv
 0001:000177E8      @C2621_4
 0001:00017878      __addarg
 0001:0001793C      @C2648_0
 0001:0001793C      @C2648_2
 0001:00017974      @C2648_3
 0001:00017984      @C2655_0
 0001:00017984      __lock_env
 0001:00017994      __unlock_env
 0001:000179A4      @C2655_4
 0001:000179D8      __expandblock
 0001:00017B24      @C2655_3
 0001:00017B58      @C2657_0
 0001:00017D24      _signal
 0001:00017DD8      ___org_raise
 0001:00017DD8      _raise
 0001:00017E74      @C2664_0
 0001:00017E74      __terminate
 0001:00017E84      __create_shmem
 0001:00017E8C      __init_exit_proc
 0001:00017F38      __cleanup
 0001:00017FB0      __lock_exit
 0001:00017FC0      __unlock_exit
 0001:00017FD0      @C2664_2
 0001:00017FE4      @C2665_0
 0001:00017FE4      __startup
 0001:0001814C      @C2690_0
 0001:0001814C      string::string(const string&)
 0001:00018180      string::string(const char*)
 0001:00018180      @C2691_0
 0001:000181F8      __tpdsc__[string::lengtherror]
 0001:00018254      __tpdsc__[TStringRef*]
 0001:00018270      __tpdsc__[TStringRef]
 0001:000182C4      string::lengtherror::~lengtherror()
 0001:0001830C      __tpdsc__[TReference]
 0001:00018340      @C2734_0
 0001:00018340      string::~string()
 0001:00018394      string::assert_element(unsigned int) const
 0001:00018434      string::assert_index(unsigned int) const
 0001:000184D4      TSubString::assert_element(unsigned int) const
 0001:00018574      TStringRef::TStringRef(const char*,unsigned int,const char*,unsigned int,unsigned int)
 0001:0001862C      TStringRef::~TStringRef()
 0001:00018670      TStringRef::reserve(unsigned int)
 0001:000186C8      TStringRef::check_freeboard()
 0001:0001871C      TStringRef::grow_to(unsigned int)
 0001:0001876C      TStringRef::round_capacity(unsigned int)
 0001:000187A8      TStringRef::splice(unsigned int,unsigned int,const char*,unsigned int)
 0001:000188D0      string::set_case_sensitive(int)
 0001:000188E4      string::set_paranoid_check(int)
 0001:000188F8      string::skip_whitespace(int)
 0001:0001890C      string::initial_capacity(unsigned int)
 0001:00018920      string::resize_increment(unsigned int)
 0001:00018944      string::max_waste(unsigned int)
 0001:00018958      __tpdsc__[string::outofrange]
 0001:000189B4      string::outofrange::outofrange(const string::outofrange&)
 0001:000189F0      string::outofrange::~outofrange()
 0001:00018A38      @C2740_0
 0001:00018A38      @C2740_2
 0001:00018A38      __init_tls
 0001:00018AA0      __exit_tls
 0001:00018AA0      @C2740_3
 0001:00018AB8      __thread_data
 0001:00018AB8      @C2742_0
 0001:00018AE4      __thread_data_new
 0001:00018B7C      __thread_data_del
 0001:00018BB0      @C2742_3
 0001:00018BC4      @C2742_4
 0001:00018C78      __create_lock
 0001:00018C78      @C2745_0
 0001:00018CDC      __lock_nt
 0001:00018CEC      __unlock_nt
 0001:00018CFC      __lock_error
 0001:00018D38      @C2745_3
 0001:00018D50      _getdate
 0001:00018D50      @C2763_0
 0001:00018D50      ___org_getdate
 0001:00018D7C      _gettime
 0001:00018D7C      ___org_gettime
 0001:00018DB4      @C2770_0
 0001:00018DB4      __thread_buf
 0002:000000EC      @D1491_1
 0002:00000144      ___isDLL
 0002:0000014D      ___useDynamicTLS
 0002:0000014E      ___isGUI
 0002:00000153      __TLS_index4
 0002:00000157      __hInstance
 0002:0000015B      ___CPPdebugHook
 0002:00000160      @D1492_1
 0002:0000029C      System::TObject::
 0002:000002E4      @D1527_1
 0002:00000C18      @D1558_1
 0002:00000C80      System::DebugHook
 0002:00000C80      _DebugHook
 0002:00000C84      System::_16451
 0002:00000C90      System::_16524
 0002:00000C94      Sysutils::Win32Platform
 0002:00000C98      Sysutils::LeadBytes
 0002:00000CB8      SysUtils::_16633
 0002:00000CF0      SysUtils::_16635
 0002:00000D90      @D1842_1
 0002:00000DF0      @D1843_1
 0002:00000EEC      @D1844_1
 0002:00000EEC      ___CPPexceptionList
 0002:00000EF0      ___exceptFlags
 0002:00000EF4      ___terminatePTR
 0002:00000EF8      ___unexpectdPTR
 0002:00000EFC      ___throwFileName
 0002:00000F00      ___throwLineNumber
 0002:00000F04      ___throwExceptionName
 0002:00000F08      ___exceptStaticBuffP
 0002:00000F0C      ___exceptMemAllocVars
 0002:00000F10      ___ExceptStaticXbuff
 0002:00000FC4      __ExceptVarsSize
 0002:00000FD8      @D1848_1
 0002:00000FD8      __stkchk
 0002:00000FEC      ___debuggerDisableTerminateCallback
 0002:00000FEC      @D1850_1
 0002:000023D4      typeinfo::
 0002:000023E4      @D1852_1
 0002:000026F0      @D1876_1
 0002:000026F0      __streams
 0002:00002BA0      @D1877_1
 0002:00002BA0      __nfile
 0002:00002BA4      __openfd
 0002:00002C6C      __fmode
 0002:00002C6C      @D1881_1
 0002:00002C70      @D1882_1
 0002:00002C70      __fmodeptr
 0002:00002C74      @D1915_1
 0002:00002C80      @D1918_1
 0002:00002C80      __sys_errlist
 0002:00002D44      __sys_nerr
 0002:000030FC      @D1930_1
 0002:0000317C      @D1946_1
 0002:000031D0      @D1958_1
 0002:00003248      @D1988_1
 0002:00003248      __cfinfo_get
 0002:0000324C      @D2000_1
 0002:0000324C      __notUmask
 0002:00003250      @D2039_1
 0002:000032A4      @D2040_1
 0002:000032A4      __dosErrorToSV
 0002:000033D0      @D2084_1
 0002:000035C0      @D2096_1
 0002:000035E4      filebuf::
 0002:00003624      @D2098_1
 0002:00003648      filebuf::openprot
 0002:0000364C      @D2138_1
 0002:00003670      istream::
 0002:0000368C      @D2141_1
 0002:000036B0      istream_withassign::
 0002:000036CC      @D2144_1
 0002:000036F0      @D2145_1
 0002:00003714      @D2193_1
 0002:00003738      ostream::
 0002:00003754      @D2195_1
 0002:00003778      ostream_withassign::
 0002:00003794      @D2196_1
 0002:000037B8      @D2197_1
 0002:000037DC      @D2198_1
 0002:000037E0      @D2244_1
 0002:00003804      streambuf::
 0002:00003844      @D2266_1
 0002:00003868      ios::
 0002:00003878      @D2268_1
 0002:000038A8      ios::basefield
 0002:000038AC      ios::adjustfield
 0002:000038B0      ios::floatfield
 0002:000038B4      ios::nextbit
 0002:000038B8      ios::usercount
 0002:000038BC      @D2286_1
 0002:000038BC      __chartype
 0002:00003AC0      @D2292_1
 0002:00003AC8      @D2298_1
 0002:00003AC8      _CMonetary
 0002:00003AFC      _CNumeric
 0002:00003B12      _CTimeDate
 0002:00003BD4      _CLOCALE
 0002:00003C00      ___locale
 0002:00003D24      @D2346_1
 0002:00003D40      @D2349_1
 0002:00003D58      @D2355_1
 0002:00003D64      @D2360_1
 0002:00003D7C      @D2367_1
 0002:00003D88      @D2370_1
 0002:00003D9C      @D2371_1
 0002:00003DB0      @D2372_1
 0002:00003DC8      @D2373_1
 0002:00003DE4      @D2398_1
 0002:00003DF0      @D2408_1
 0002:00003E0C      @D2415_1
 0002:00003E18      @D2419_1
 0002:00003E28      __realcvtptr
 0002:00003E28      @D2437_1
 0002:00003E2C      __nextrealptr
 0002:00003E30      __scantodptr
 0002:00003E34      __scanrsltptr
 0002:00003E90      __realcvtwptr
 0002:00003E90      @D2438_1
 0002:00003E94      __nextrealwptr
 0002:00003E98      __scanwtodptr
 0002:00003E9C      __scanwrsltptr
 0002:00003EF8      @D2439_1
 0002:00003EF8      __default87
 0002:00003EFC      @D2442_1
 0002:00003EFC      __huge_flt
 0002:00003F00      __huge_dble
 0002:00003F08      __huge_ldble
 0002:00003F12      __max_flt
 0002:00003F16      __max_dble
 0002:00003F1E      __max_ldble
 0002:00003F28      __indefinite
 0002:00003F2C      __tiny_ldble
 0002:00003F38      __turboFloat
 0002:00003F38      @D2443_1
 0002:00003F3C      __floatconvert
 0002:00003F40      @D2452_1
 0002:00003F40      __pmatherr
 0002:00003F44      __pmatherrl
 0002:00003F48      @D2453_1
 0002:00003F48      __mathwhy
 0002:00003F8C      @D2457_1
 0002:00003FA0      @D2458_1
 0002:00003FC8      @D2459_1
 0002:00003FF0      @D2460_1
 0002:00004018      @D2473_1
 0002:00004028      @D2474_1
 0002:000040E8      @D2486_1
 0002:000040E8      __kalpha
 0002:000040EA      __kpunct
 0002:00004130      @D2565_1
 0002:00004130      ___xalloc
 0002:000041B4      @D2578_1
 0002:000041D8      __messagefile
 0002:000041D8      @D2588_1
 0002:000041E4      @D2589_1
 0002:00004208      @D2595_1
 0002:00004228      @D2613_1
 0002:00004228      __atexitcnt
 0002:0000422C      __exitbuf
 0002:00004230      __exitfopen
 0002:00004234      __exitopen
 0002:00004238      __setargv__
 0002:00004238      @D2621_1
 0002:0000423C      __expandptr
 0002:000042B0      __argv0
 0002:000042B0      @D2648_1
 0002:000042D0      __setenvp__
 0002:000042D0      @D2655_1
 0002:0000433C      @D2657_1
 0002:0000439C      @D2664_1
 0002:000043B4      @D2690_1
 0002:000043E8      @D2691_1
 0002:00004450      @D2734_1
 0002:000045DC      string::case_sensitive
 0002:000045E0      string::paranoid_check
 0002:000045E4      string::skip_white
 0002:000045E8      string::initial_capac
 0002:000045EC      string::resize_inc
 0002:000045F0      string::freeboard
 0002:00004670      @D2742_1
 0002:0000468C      @D2745_1
 0002:00004A94      __TLS_index
 0003:00000000      @B1492_2
 0003:00000000      _m1
 0003:00000004      _m2
 0003:00000008      _tisk
 0003:0000000C      _s
 0003:00000010      _f
 0003:00000014      _ft
 0003:00000018      @B1558_2
 0003:00000018      System::ExceptProc
 0003:0000001C      System::ErrorProc
 0003:00000020      System::ExceptClsProc
 0003:00000024      System::ExceptObjProc
 0003:00000028      _ExceptionClass
 0003:00000028      System::ExceptionClass
 0003:0000002C      System::HPrevInst
 0003:00000030      System::HInstance
 0003:00000034      System::CmdShow
 0003:00000038      System::CmdLine
 0003:0000003C      System::InitProc
 0003:00000040      System::ExitCode
 0003:00000044      System::ExitProc
 0003:00000048      System::ErrorAddr
 0003:0000004C      System::DllProc
 0003:00000050      System::RandSeed
 0003:00000054      System::IsLibrary
 0003:00000055      System::IsConsole
 0003:00000056      System::IsMultiThread
 0003:00000057      System::FileMode
 0003:00000058      System::Test8086
 0003:00000059      System::Test8087
 0003:0000005A      System::TestFDIV
 0003:0000005C      System::Input
 0003:00000228      System::Output
 0003:000003F4      System::TlsIndex
 0003:000003F8      System::TlsIndex4
 0003:000003FC      System::TlsLast
 0003:00000400      System::Unassigned
 0003:00000410      System::Null
 0003:00000420      System::AllocMemCount
 0003:00000424      System::AllocMemSize
 0003:000004BC      @B1559_2
 0003:000004BC      Sysutils::CurrencyString
 0003:000004C0      Sysutils::CurrencyFormat
 0003:000004C1      Sysutils::NegCurrFormat
 0003:000004C2      Sysutils::ThousandSeparator
 0003:000004C3      Sysutils::DecimalSeparator
 0003:000004C4      Sysutils::CurrencyDecimals
 0003:000004C5      Sysutils::DateSeparator
 0003:000004C8      Sysutils::ShortDateFormat
 0003:000004CC      Sysutils::LongDateFormat
 0003:000004D0      Sysutils::TimeSeparator
 0003:000004D4      Sysutils::TimeAMString
 0003:000004D8      Sysutils::TimePMString
 0003:000004DC      Sysutils::ShortTimeFormat
 0003:000004E0      Sysutils::LongTimeFormat
 0003:000004E4      Sysutils::ShortMonthNames
 0003:00000514      Sysutils::LongMonthNames
 0003:00000544      Sysutils::ShortDayNames
 0003:00000560      Sysutils::LongDayNames
 0003:0000057C      Sysutils::SysLocale
 0003:00000590      @B1565_1
 0003:00000594      @B1844_2
 0003:00000594      __DestructorCountPtr
 0003:0000059C      __HandlerPtr
 0003:0000059C      @B1848_2
 0003:000005A0      __UserHandlerPtr
 0003:000005A4      @B1850_2
 0003:000005A8      ___pCPPdebugHook
 0003:000005B4      @B1852_2
 0003:000005B8      @B1877_2
 0003:000005B8      __pidtab
 0003:00000680      __handles
 0003:00000748      @B1909_1
 0003:0000074C      @B1946_2
 0003:00000754      @B2039_2
 0003:0000075C      _cin
 0003:0000075C      @B2084_2
 0003:000007A8      _cout
 0003:000007F0      _cerr
 0003:00000838      _clog
 0003:00000880      ___stdin_streambuf
 0003:00000884      ___stdout_streambuf
 0003:00000888      ___stderr_streambuf
 0003:0000088C      __mbctype
 0003:0000088C      @B2486_2
 0003:00000990      __mbcsCodePage
 0003:00000994      @B2565_2
 0003:00000994      __new_handler
 0003:00000998      @B2578_2
 0003:00000A98      @B2589_2
 0003:00000AB0      __atexittbl
 0003:00000AB0      @B2613_2
 0003:00000B30      __argv
 0003:00000B30      @B2621_2
 0003:00000B3C      @B2655_2
 0003:00000B3C      __environ
 0003:00000B44      __envsize
 0003:00000B48      __env_lock
 0003:00000B4C      __dll_table
 0003:00000B4C      @B2663_1
 0003:00000B54      __ExcRegPtr
 0003:00000B58      __osenv
 0003:00000B5C      __wosenv
 0003:00000B60      __oscmd
 0003:00000B64      __woscmd
 0003:00000B68      ___exit_lock
 0003:00000B6C      __argc
 0003:00000B70      __C0argc
 0003:00000B74      __C0argv
 0003:00000B78      __C0environ
 0003:00000B7C      __wC0argv
 0003:00000B80      __wC0environ
 0003:00000B84      __exe_table
 0003:00000B8C      __stkbase
 0003:00000B90      __isWindows
 0003:00000B94      __stkindex
 0003:00000B94      @B2740_1
 0003:00000B98      __tlsindex
 0003:00000B9C      @B2742_2
 0003:00000BA4      @B2745_2
 0004:00000000      System::RaiseList
 0004:00000000      @T1558_3
 0004:00000004      System::InOutRes
 0004:00000008      @T1844_3
 0004:00000008      ___xxInfo
