
 Start         Length     Name                   Class
 0001:00401000 00001890CH _TEXT                  CODE
 0002:0041A000 000004724H _DATA                  DATA
 0003:0041E724 000003BA8H _BSS                   BSS
 0004:00000000 0000000ACH _TLS                   TLS


Detailed map of segments
 0001:00000000 00000108 C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\C0X32.OBJ ACBP=A9
 0001:00000108 000011F3 C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\PROJECT\FFT2\FFT2.OBJ ACBP=A9
 0001:000012FC 00000071 C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\VCL.LIB|vclinit ACBP=A9
 0001:00001370 00000035 C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\VCL.LIB|classcre ACBP=A9
 0001:000013A8 000012C6 C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\VCL.LIB|dstring ACBP=A9
 0001:0000265C 000032CD C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\VCL.LIB|system ACBP=A9
 0001:000058E0 000029A0 C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\VCL.LIB|sysutils ACBP=A9
 0001:00008280 00000022 C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\VCL.LIB|windows ACBP=A9
 0001:00008290 0000001E C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|memchr ACBP=A9
 0001:000082B0 00000024 C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|memcpy ACBP=A9
 0001:000082D4 0000004A C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|memmove ACBP=A9
 0001:00008320 0000008A C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|memset ACBP=A9
 0001:000083AC 00000018 C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|wmemset ACBP=A9
 0001:000083C4 0000003C C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|strcat ACBP=A9
 0001:00008400 0000004B C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|strcmp ACBP=A9
 0001:0000844C 0000005A C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|strlen ACBP=A9
 0001:000084A8 0000006E C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|strncat ACBP=A9
 0001:00008518 0000006C C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|memcmp ACBP=A9
 0001:00008584 0000004F C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|strncpy ACBP=A9
 0001:000085D4 00000037 C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|_stpcpy ACBP=A9
 0001:0000860C 00000018 C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|wcslen ACBP=A9
 0001:00008624 0000003F C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|wcscpy ACBP=A9
 0001:00008664 000001E0 C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|xalloc ACBP=A9
 0001:00008844 0000023C C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|xmsg ACBP=A9
 0001:00008A80 000001AA C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|xxv ACBP=A9
 0001:00008C2C 0000000A C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|defhandl ACBP=A9
 0001:00008C38 00000165 C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|except ACBP=A9
 0001:00008DA0 00000022 C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|ta ACBP=A9
 0001:00008DC4 00003CC8 C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|xx ACBP=A9
 0001:0000CA8C 0000003B C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|xxa ACBP=A9
 0001:0000CAC8 00000A40 C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|xxtype ACBP=A9
 0001:0000D4C0 00000046 C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|setexc ACBP=A9
 0001:0000D508 00000008 C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|access ACBP=A9
 0001:0000D510 0000007D C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|allocbuf ACBP=A9
 0001:0000D590 00000008 C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|close ACBP=A9
 0001:0000D598 0000009F C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|fclose ACBP=A9
 0001:0000D638 0000008F C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|fflush ACBP=A9
 0001:0000D6C7 00000001 C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|files ACBP=A9
 0001:0000D6C7 00000001 C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|files2 ACBP=A9
 0001:0000D6C8 00000064 C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|flushout ACBP=A9
 0001:0000D72C 00000001 C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|fmode ACBP=A9
 0001:0000D72C 0000000D C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|fmodeptr ACBP=A9
 0001:0000D73C 000001E3 C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|fopen ACBP=A9
 0001:0000D920 00000034 C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|fprintf ACBP=A9
 0001:0000D954 000000D9 C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|fputn ACBP=A9
 0001:0000DA30 00000039 C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|fscanf ACBP=A9
 0001:0000DA6C 0000015C C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|fseek ACBP=A9
 0001:0000DBC8 00000008 C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|isatty ACBP=A9
 0001:0000DBD0 0000019E C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|lgetc ACBP=A9
 0001:0000DD70 00000110 C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|lputc ACBP=A9
 0001:0000DE80 00000008 C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|lseek ACBP=A9
 0001:0000DE88 00000099 C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|mkname ACBP=A9
 0001:0000DF21 00000083 C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|perror ACBP=A9
 0001:0000DF24 0000003B C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|printf ACBP=A9
 0001:0000DF60 00000008 C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|read ACBP=A9
 0001:0000DF68 00000040 C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|scanf ACBP=A9
 0001:0000DFA8 000007D9 C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|scanner ACBP=A9
 0001:0000E784 00000228 C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|scn2i64 ACBP=A9
 0001:0000E9AC 0000005F C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|setvbuf ACBP=A9
 0001:0000EA0C 00000070 C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|sprintf ACBP=A9
 0001:0000EA7C 00000238 C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|streams ACBP=A9
 0001:0000ECB4 00000062 C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|ungetc ACBP=A9
 0001:0000ED18 000009B3 C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|vprinter ACBP=A9
 0001:0000F6CC 00000008 C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|write ACBP=A9
 0001:0000F6D4 00000038 C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|xfclose ACBP=A9
 0001:0000F70C 00000031 C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|xfflush ACBP=A9
 0001:0000F740 00000098 C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|__eof ACBP=A9
 0001:0000F7D8 000001B2 C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|__read ACBP=A9
 0001:0000F98C 000001B0 C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|__write ACBP=A9
 0001:0000FB3C 00000011 C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|_cfinfo ACBP=A9
 0001:0000FB50 00000042 C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|_flshall ACBP=A9
 0001:0000FB94 0000001D C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|_fputc ACBP=A9
 0001:0000FBB1 00000017 C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|_umask ACBP=A9
 0001:0000FBB4 00000025 C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|fgetc ACBP=A9
 0001:0000FBDC 0000002B C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|fputc ACBP=A9
 0001:0000FC08 000003B3 C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|handles ACBP=A9
 0001:0000FFBC 0000008A C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|ioerror ACBP=A9
 0001:00010048 00000061 C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|_read ACBP=A9
 0001:000100AC 00000061 C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|_write ACBP=A9
 0001:00010110 0000003D C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|__access ACBP=A9
 0001:00010150 00000060 C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|__close ACBP=A9
 0001:000101B0 00000047 C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|__isatty ACBP=A9
 0001:000101F8 00000084 C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|__lseek ACBP=A9
 0001:0001027C 00000200 C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|__open ACBP=A9
 0001:0001047C 0000001A C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|unlink ACBP=A9
 0001:00010498 00000674 C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|ioststd ACBP=A9
 0001:00010B0C 00000070 C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|fsbclose ACBP=A9
 0001:00010B7C 000000F2 C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|fsbctr2 ACBP=A9
 0001:00010C28 000000C6 C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|fsbdtr ACBP=A9
 0001:00010CA8 000000E7 C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|fsboflow ACBP=A9
 0001:00010D90 00000075 C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|fsbsbuf ACBP=A9
 0001:00010E08 000000FE C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|fsbskoff ACBP=A9
 0001:00010F08 0000010C C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|fsbsync ACBP=A9
 0001:00011014 0000014C C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|fsbuflow ACBP=A9
 0001:00011160 0000001B C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|istasn2 ACBP=A9
 0001:0001117C 000000D6 C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|istctr1 ACBP=A9
 0001:00011214 000000BA C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|istctr4 ACBP=A9
 0001:00011290 0000004D C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|istdget ACBP=A9
 0001:000112E0 00000090 C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|istdipfx ACBP=A9
 0001:00011370 000000B2 C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|istdtr1 ACBP=A9
 0001:000113E4 000000C5 C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|istdtr2 ACBP=A9
 0001:0001146C 00000064 C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|isteatwh ACBP=A9
 0001:000114D0 000004BC C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|istedbl ACBP=A9
 0001:0001198C 00000070 C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|istepchr ACBP=A9
 0001:000119FC 00000087 C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|istgpchr ACBP=A9
 0001:00011A84 000000AF C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|istgstr ACBP=A9
 0001:00011B34 00000069 C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|istpback ACBP=A9
 0001:00011BA0 00000022 C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|ostasn2 ACBP=A9
 0001:00011BC4 000000C6 C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|ostctr1 ACBP=A9
 0001:00011C4C 000000BA C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|ostctr3 ACBP=A9
 0001:00011CC8 000000CE C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|ostdtr1 ACBP=A9
 0001:00011D58 000000C5 C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|ostdtr2 ACBP=A9
 0001:00011DE0 00000073 C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|ostfloat ACBP=A9
 0001:00011E54 00000028 C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|ostflush ACBP=A9
 0001:00011E7C 00000027 C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|ostopfx ACBP=A9
 0001:00011EA4 0000003D C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|ostosfx ACBP=A9
 0001:00011EE4 000001F0 C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|ostoutst ACBP=A9
 0001:000120D4 00000035 C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|stbalc ACBP=A9
 0001:0001210C 00000091 C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|stbctr1 ACBP=A9
 0001:000121A0 00000020 C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|stbdnext ACBP=A9
 0001:000121C0 00000075 C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|stbdsgtn ACBP=A9
 0001:00012238 0000006E C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|stbdsptn ACBP=A9
 0001:000122A8 00000037 C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|stbdtr ACBP=A9
 0001:000122DC 00000008 C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|stboflow ACBP=A9
 0001:000122E4 00000008 C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|stbpbfl ACBP=A9
 0001:000122EC 00000021 C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|stbsbuf ACBP=A9
 0001:00012310 00000067 C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|stbsetb ACBP=A9
 0001:00012378 00000034 C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|stbsetg ACBP=A9
 0001:000123AC 00000025 C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|stbsetp ACBP=A9
 0001:000123D4 00000008 C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|stbskoff ACBP=A9
 0001:000123DC 0000001B C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|stbskpos ACBP=A9
 0001:000123F8 00000041 C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|stbsputn ACBP=A9
 0001:0001243C 00000037 C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|stbsync ACBP=A9
 0001:00012474 0000001E C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|stbuflow ACBP=A9
 0001:00012494 0000003C C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|stclear ACBP=A9
 0001:000124D0 00000092 C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|stctr1 ACBP=A9
 0001:00012524 000000B8 C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|stdtr ACBP=A9
 0001:0001259C 00000048 C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|stinit ACBP=A9
 0001:000125E4 00000058 C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|stsetf1 ACBP=A9
 0001:0001263C 0000002A C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|stsetst ACBP=A9
 0001:00012668 00000046 C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|sttie ACBP=A9
 0001:000126B0 00000026 C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|fsblkmt ACBP=A9
 0001:000126D6 00000001 C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|bigctype ACBP=A9
 0001:000126D8 00000588 C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|getinfo ACBP=A9
 0001:00012C60 00000103 C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|wis ACBP=A9
 0001:00012D64 00000055 C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|iswctype ACBP=A9
 0001:00012DB9 00000001 C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|clocale ACBP=A9
 0001:00012DBC 000004C8 C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|mbyte1 ACBP=A9
 0001:00013284 00000200 C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|_ll ACBP=A9
 0001:00013484 0000011C C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|acosasin ACBP=A9
 0001:000135A0 000000B3 C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|atan2 ACBP=A9
 0001:00013654 00000013 C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|clear87 ACBP=A9
 0001:00013668 00000042 C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|cos ACBP=A9
 0001:000136AC 000000E4 C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|cplx1 ACBP=A9
 0001:00013790 00000F31 C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|cplx2 ACBP=A9
 0001:000146C4 00000028 C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|ctrl87 ACBP=A9
 0001:000146EC 00000018 C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|cvtentry ACBP=A9
 0001:00014704 0000006C C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|exp ACBP=A9
 0001:00014770 0000005F C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|f87atan ACBP=A9
 0001:000147D0 000000CD C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|f87exp ACBP=A9
 0001:000148A0 00000048 C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|f87log ACBP=A9
 0001:000148E8 000000E2 C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|f87sine ACBP=A9
 0001:000149CC 0000000D C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|fabs ACBP=A9
 0001:000149DC 00000017 C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|fpreset ACBP=A9
 0001:000149F4 0000002D C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|fuildq ACBP=A9
 0001:00014A24 00000021 C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|fuistq ACBP=A9
 0001:00014A48 00000011 C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|fxam ACBP=A9
 0001:00014A5C 000000B1 C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|int64toa ACBP=A9
 0001:00014B10 0000006D C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|log ACBP=A9
 0001:00014B80 000001DA C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|pow ACBP=A9
 0001:00014D5C 00000025 C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|qdiv10 ACBP=A9
 0001:00014D84 0000002E C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|qmul10 ACBP=A9
 0001:00014DB4 00000042 C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|sin ACBP=A9
 0001:00014DF8 0000003A C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|sqrt ACBP=A9
 0001:00014E34 00000018 C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|cvtfak ACBP=A9
 0001:00014E4C 00000018 C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|cvtfakw ACBP=A9
 0001:00014E64 00000001 C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|deflt87 ACBP=A9
 0001:00014E64 00000001 C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|hugeval ACBP=A9
 0001:00014E64 00000001 C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|initcvt ACBP=A9
 0001:00014E64 000000FD C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|ldtrunc ACBP=A9
 0001:00014F64 0000008F C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|longtoa ACBP=A9
 0001:00014FF4 00000075 C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|ltoa1 ACBP=A9
 0001:0001506C 0000002A C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|matherr ACBP=A9
 0001:00015098 0000002E C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|matherrl ACBP=A9
 0001:000150C8 00000016 C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|mathptr ACBP=A9
 0001:000150DE 00000001 C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|mathwhy ACBP=A9
 0001:000150E0 000002F9 C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|realcvt ACBP=A9
 0001:000153DC 00000331 C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|realcvtw ACBP=A9
 0001:00015710 000004E1 C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|scantod ACBP=A9
 0001:00015BF4 000004E1 C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|scanwtod ACBP=A9
 0001:000160D8 000002D0 C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|xcvt ACBP=A9
 0001:000163A8 000002EF C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|xcvtw ACBP=A9
 0001:00016698 000000B0 C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|_matherr ACBP=A9
 0001:00016748 00000178 C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|_pow10 ACBP=A9
 0001:000168C0 000000FD C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|mbctype ACBP=A9
 0001:000169C0 00000020 C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|mbisspc ACBP=A9
 0001:000169E0 00000056 C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|mbsrchr ACBP=A9
 0001:00016A38 0000002B C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|calloc ACBP=A9
 0001:00016A64 0000000F C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|del ACBP=A9
 0001:00016A74 0000000F C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|delarray ACBP=A9
 0001:00016A84 00000048 C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|new ACBP=A9
 0001:00016ACC 0000000F C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|newarray ACBP=A9
 0001:00016ADC 0000014C C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|setnew ACBP=A9
 0001:00016BE4 00000049 C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|pheap ACBP=A9
 0001:00016C30 000000A6 C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|assert ACBP=A9
 0001:00016CD8 00000009 C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|errno ACBP=A9
 0001:00016CE4 00000163 C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|errormsg ACBP=A9
 0001:00016E48 000000BB C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|ermsghlp ACBP=A9
 0001:00016F04 00000022 C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|abort ACBP=A9
 0001:00016F28 000000C7 C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|exit ACBP=A9
 0001:00016FF0 00000001 C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|nowild ACBP=A9
 0001:00016FF4 000002E7 C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|setargv ACBP=A9
 0001:000172DC 00000045 C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|setargv0 ACBP=A9
 0001:00017324 000001D2 C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|setenvp ACBP=A9
 0001:000174F8 0000031C C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|signal ACBP=A9
 0001:00017814 00000001 C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|globals ACBP=A9
 0001:00017814 0000016F C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|initexit ACBP=A9
 0001:00017984 00000166 C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|startup ACBP=A9
 0001:00017AEC 00000078 C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|ctor2 ACBP=A9
 0001:00017B20 000001C0 C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|ctor3 ACBP=A9
 0001:00017CE0 0000072A C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|strings ACBP=A9
 0001:000183D8 00000080 C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|tls ACBP=A9
 0001:00018458 000001BD C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|thrddata ACBP=A9
 0001:00018618 000000D5 C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|_lock ACBP=A9
 0001:000186F0 00000064 C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|getdate ACBP=A9
 0001:00018754 0000003B C=CODE    S=_TEXT    G=(none)   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|thrdbuf ACBP=A9
 0002:000000EC 00000073 C=DATA    S=_DATA    G=DGROUP   M=E:\BORLAND\CBUILDER\LIB\C0X32.OBJ ACBP=A9
 0002:00000160 000001C0 C=DATA    S=_DATA    G=DGROUP   M=E:\BORLAND\PROJECT\FFT2\FFT2.OBJ ACBP=A9
 0002:00000320 00000048 C=DATA    S=_DATA    G=DGROUP   M=E:\BORLAND\CBUILDER\LIB\VCL.LIB|vclinit ACBP=A9
 0002:00000368 0000097C C=DATA    S=_DATA    G=DGROUP   M=E:\BORLAND\CBUILDER\LIB\VCL.LIB|dstring ACBP=A9
 0002:00000C9C 0000007E C=DATA    S=_DATA    G=DGROUP   M=E:\BORLAND\CBUILDER\LIB\VCL.LIB|system ACBP=A9
 0002:00000D16 000000FE C=DATA    S=_DATA    G=DGROUP   M=E:\BORLAND\CBUILDER\LIB\VCL.LIB|sysutils ACBP=A9
 0002:00000E14 00000060 C=DATA    S=_DATA    G=DGROUP   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|xalloc ACBP=A9
 0002:00000E74 000000FC C=DATA    S=_DATA    G=DGROUP   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|xmsg ACBP=A9
 0002:00000F70 000000EC C=DATA    S=_DATA    G=DGROUP   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|xxv ACBP=A9
 0002:0000105C 00000014 C=DATA    S=_DATA    G=DGROUP   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|except ACBP=A9
 0002:00001070 00001440 C=DATA    S=_DATA    G=DGROUP   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|xx ACBP=A9
 0002:00002468 0000031C C=DATA    S=_DATA    G=DGROUP   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|xxtype ACBP=A9
 0002:00002774 000004B0 C=DATA    S=_DATA    G=DGROUP   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|files ACBP=A9
 0002:00002C24 000000CC C=DATA    S=_DATA    G=DGROUP   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|files2 ACBP=A9
 0002:00002CF0 00000004 C=DATA    S=_DATA    G=DGROUP   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|fmode ACBP=A9
 0002:00002CF4 00000004 C=DATA    S=_DATA    G=DGROUP   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|fmodeptr ACBP=A9
 0002:00002CF8 0000000C C=DATA    S=_DATA    G=DGROUP   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|mkname ACBP=A9
 0002:00002D04 0000047C C=DATA    S=_DATA    G=DGROUP   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|perror ACBP=A9
 0002:00003180 00000080 C=DATA    S=_DATA    G=DGROUP   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|scanner ACBP=A9
 0002:00003200 00000054 C=DATA    S=_DATA    G=DGROUP   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|streams ACBP=A9
 0002:00003254 00000076 C=DATA    S=_DATA    G=DGROUP   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|vprinter ACBP=A9
 0002:000032CC 00000004 C=DATA    S=_DATA    G=DGROUP   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|_cfinfo ACBP=A9
 0002:000032D0 00000004 C=DATA    S=_DATA    G=DGROUP   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|_umask ACBP=A9
 0002:000032D4 00000054 C=DATA    S=_DATA    G=DGROUP   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|handles ACBP=A9
 0002:00003328 0000012B C=DATA    S=_DATA    G=DGROUP   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|ioerror ACBP=A9
 0002:00003454 000001F0 C=DATA    S=_DATA    G=DGROUP   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|ioststd ACBP=A9
 0002:00003644 00000064 C=DATA    S=_DATA    G=DGROUP   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|fsbctr2 ACBP=A9
 0002:000036A8 00000068 C=DATA    S=_DATA    G=DGROUP   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|fsbdtr ACBP=A9
 0002:000036D0 00000040 C=DATA    S=_DATA    G=DGROUP   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|istctr1 ACBP=A9
 0002:00003710 00000040 C=DATA    S=_DATA    G=DGROUP   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|istctr4 ACBP=A9
 0002:00003750 00000040 C=DATA    S=_DATA    G=DGROUP   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|istdtr1 ACBP=A9
 0002:00003774 00000040 C=DATA    S=_DATA    G=DGROUP   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|istdtr2 ACBP=A9
 0002:00003798 00000040 C=DATA    S=_DATA    G=DGROUP   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|ostctr1 ACBP=A9
 0002:000037D8 00000040 C=DATA    S=_DATA    G=DGROUP   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|ostctr3 ACBP=A9
 0002:00003818 00000040 C=DATA    S=_DATA    G=DGROUP   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|ostdtr1 ACBP=A9
 0002:0000383C 00000040 C=DATA    S=_DATA    G=DGROUP   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|ostdtr2 ACBP=A9
 0002:00003860 00000004 C=DATA    S=_DATA    G=DGROUP   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|ostfloat ACBP=A9
 0002:00003864 00000064 C=DATA    S=_DATA    G=DGROUP   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|stbctr1 ACBP=A9
 0002:000038C8 00000040 C=DATA    S=_DATA    G=DGROUP   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|stbdtr ACBP=A9
 0002:000038C8 00000034 C=DATA    S=_DATA    G=DGROUP   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|stctr1 ACBP=A9
 0002:000038FC 00000054 C=DATA    S=_DATA    G=DGROUP   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|stdtr ACBP=A9
 0002:00003940 00000202 C=DATA    S=_DATA    G=DGROUP   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|bigctype ACBP=A9
 0002:00003B44 00000008 C=DATA    S=_DATA    G=DGROUP   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|getinfo ACBP=A9
 0002:00003B4C 0000025C C=DATA    S=_DATA    G=DGROUP   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|clocale ACBP=A9
 0002:00003DA8 0000001C C=DATA    S=_DATA    G=DGROUP   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|acosasin ACBP=A9
 0002:00003DC4 00000018 C=DATA    S=_DATA    G=DGROUP   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|atan2 ACBP=A9
 0002:00003DDC 0000000C C=DATA    S=_DATA    G=DGROUP   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|cos ACBP=A9
 0002:00003DE8 00000018 C=DATA    S=_DATA    G=DGROUP   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|cplx2 ACBP=A9
 0002:00003E00 0000000C C=DATA    S=_DATA    G=DGROUP   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|exp ACBP=A9
 0002:00003E0C 00000014 C=DATA    S=_DATA    G=DGROUP   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|f87atan ACBP=A9
 0002:00003E20 00000012 C=DATA    S=_DATA    G=DGROUP   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|f87exp ACBP=A9
 0002:00003E34 00000016 C=DATA    S=_DATA    G=DGROUP   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|f87log ACBP=A9
 0002:00003E4C 0000001C C=DATA    S=_DATA    G=DGROUP   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|f87sine ACBP=A9
 0002:00003E68 0000000C C=DATA    S=_DATA    G=DGROUP   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|log ACBP=A9
 0002:00003E74 0000001C C=DATA    S=_DATA    G=DGROUP   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|pow ACBP=A9
 0002:00003E90 0000000C C=DATA    S=_DATA    G=DGROUP   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|sin ACBP=A9
 0002:00003E9C 00000010 C=DATA    S=_DATA    G=DGROUP   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|sqrt ACBP=A9
 0002:00003EAC 00000068 C=DATA    S=_DATA    G=DGROUP   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|cvtfak ACBP=A9
 0002:00003F14 00000068 C=DATA    S=_DATA    G=DGROUP   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|cvtfakw ACBP=A9
 0002:00003F7C 00000004 C=DATA    S=_DATA    G=DGROUP   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|deflt87 ACBP=A9
 0002:00003F80 0000003A C=DATA    S=_DATA    G=DGROUP   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|hugeval ACBP=A9
 0002:00003FBC 00000008 C=DATA    S=_DATA    G=DGROUP   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|initcvt ACBP=A9
 0002:00003FC4 00000008 C=DATA    S=_DATA    G=DGROUP   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|mathptr ACBP=A9
 0002:00003FCC 00000044 C=DATA    S=_DATA    G=DGROUP   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|mathwhy ACBP=A9
 0002:00004010 00000014 C=DATA    S=_DATA    G=DGROUP   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|realcvt ACBP=A9
 0002:00004024 00000028 C=DATA    S=_DATA    G=DGROUP   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|realcvtw ACBP=A9
 0002:0000404C 00000028 C=DATA    S=_DATA    G=DGROUP   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|scantod ACBP=A9
 0002:00004074 00000028 C=DATA    S=_DATA    G=DGROUP   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|scanwtod ACBP=A9
 0002:0000409C 00000010 C=DATA    S=_DATA    G=DGROUP   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|_matherr ACBP=A9
 0002:000040AC 000000C0 C=DATA    S=_DATA    G=DGROUP   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|_pow10 ACBP=A9
 0002:0000416C 00000048 C=DATA    S=_DATA    G=DGROUP   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|mbctype ACBP=A9
 0002:000041B4 00000084 C=DATA    S=_DATA    G=DGROUP   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|setnew ACBP=A9
 0002:00004238 00000024 C=DATA    S=_DATA    G=DGROUP   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|assert ACBP=A9
 0002:0000425C 0000000C C=DATA    S=_DATA    G=DGROUP   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|errormsg ACBP=A9
 0002:00004268 00000024 C=DATA    S=_DATA    G=DGROUP   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|ermsghlp ACBP=A9
 0002:0000428C 00000020 C=DATA    S=_DATA    G=DGROUP   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|abort ACBP=A9
 0002:000042AC 00000010 C=DATA    S=_DATA    G=DGROUP   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|exit ACBP=A9
 0002:000042BC 00000078 C=DATA    S=_DATA    G=DGROUP   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|setargv ACBP=A9
 0002:00004334 00000020 C=DATA    S=_DATA    G=DGROUP   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|setargv0 ACBP=A9
 0002:00004354 0000006C C=DATA    S=_DATA    G=DGROUP   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|setenvp ACBP=A9
 0002:000043C0 0000005E C=DATA    S=_DATA    G=DGROUP   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|signal ACBP=A9
 0002:00004420 00000018 C=DATA    S=_DATA    G=DGROUP   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|initexit ACBP=A9
 0002:00004438 00000034 C=DATA    S=_DATA    G=DGROUP   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|ctor2 ACBP=A9
 0002:0000446C 00000068 C=DATA    S=_DATA    G=DGROUP   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|ctor3 ACBP=A9
 0002:000044D4 00000220 C=DATA    S=_DATA    G=DGROUP   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|strings ACBP=A9
 0002:000046F4 0000001C C=DATA    S=_DATA    G=DGROUP   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|thrddata ACBP=A9
 0002:00004710 00000014 C=DATA    S=_DATA    G=DGROUP   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|_lock ACBP=A9
 0003:00000000 00000018 C=BSS     S=_BSS     G=DGROUP   M=E:\BORLAND\PROJECT\FFT2\FFT2.OBJ ACBP=A9
 0003:00000018 000004A4 C=BSS     S=_BSS     G=DGROUP   M=E:\BORLAND\CBUILDER\LIB\VCL.LIB|system ACBP=A9
 0003:000004BC 000000D4 C=BSS     S=_BSS     G=DGROUP   M=E:\BORLAND\CBUILDER\LIB\VCL.LIB|sysutils ACBP=A9
 0003:00000590 00000004 C=BSS     S=_BSS     G=DGROUP   M=E:\BORLAND\CBUILDER\LIB\VCL.LIB|windows ACBP=A9
 0003:00000594 00000008 C=BSS     S=_BSS     G=DGROUP   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|xxv ACBP=A9
 0003:0000059C 00000008 C=BSS     S=_BSS     G=DGROUP   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|except ACBP=A9
 0003:000005A4 00000010 C=BSS     S=_BSS     G=DGROUP   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|xx ACBP=A9
 0003:000005B4 00000002 C=BSS     S=_BSS     G=DGROUP   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|xxtype ACBP=A9
 0003:000005B8 00000190 C=BSS     S=_BSS     G=DGROUP   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|files2 ACBP=A9
 0003:00000748 00000001 C=BSS     S=_BSS     G=DGROUP   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|lgetc ACBP=A9
 0003:00000749 00000002 C=BSS     S=_BSS     G=DGROUP   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|mkname ACBP=A9
 0003:0000074C 00000008 C=BSS     S=_BSS     G=DGROUP   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|streams ACBP=A9
 0003:00000754 00000008 C=BSS     S=_BSS     G=DGROUP   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|handles ACBP=A9
 0003:0000075C 00000130 C=BSS     S=_BSS     G=DGROUP   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|ioststd ACBP=A9
 0003:0000088C 00000004 C=BSS     S=_BSS     G=DGROUP   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|stdtr ACBP=A9
 0003:0000088C 00000108 C=BSS     S=_BSS     G=DGROUP   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|mbctype ACBP=A9
 0003:00000994 00000004 C=BSS     S=_BSS     G=DGROUP   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|setnew ACBP=A9
 0003:00000998 00000100 C=BSS     S=_BSS     G=DGROUP   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|assert ACBP=A9
 0003:00000A98 00000018 C=BSS     S=_BSS     G=DGROUP   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|ermsghlp ACBP=A9
 0003:00000AB0 00000080 C=BSS     S=_BSS     G=DGROUP   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|exit ACBP=A9
 0003:00000B30 0000000C C=BSS     S=_BSS     G=DGROUP   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|setargv ACBP=A9
 0003:00000B3C 00000010 C=BSS     S=_BSS     G=DGROUP   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|setenvp ACBP=A9
 0003:00000B4C 00000048 C=BSS     S=_BSS     G=DGROUP   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|globals ACBP=A9
 0003:00000B94 00000008 C=BSS     S=_BSS     G=DGROUP   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|tls ACBP=A9
 0003:00000B9C 00000008 C=BSS     S=_BSS     G=DGROUP   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|thrddata ACBP=A9
 0003:00000BA4 00003004 C=BSS     S=_BSS     G=DGROUP   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|_lock ACBP=A9
 0004:00000000 00000008 C=TLS     S=_TLS     G=DGROUP   M=E:\BORLAND\CBUILDER\LIB\VCL.LIB|system ACBP=A9
 0004:00000008 000000A4 C=TLS     S=_TLS     G=DGROUP   M=E:\BORLAND\CBUILDER\LIB\CP32MT.LIB|xxv ACBP=A9

  Address         Publics by Name

 0001:00003558      @$xp$13System@String
 0001:00001338      @$xp$14System@TObject
 0003:0000088C      @B1201_2
 0003:00000994      @B1280_2
 0003:00000998      @B1293_2
 0003:00000A98      @B1304_2
 0003:00000018      @B130_2
 0003:000004BC      @B131_2
 0003:00000AB0      @B1328_2
 0003:00000B30      @B1336_2
 0003:00000B3C      @B1370_2
 0003:00000B4C      @B1378_1
 0003:00000590      @B139_1
 0003:00000B94      @B1455_1
 0003:00000B9C      @B1457_2
 0003:00000BA4      @B1460_2
 0003:00000000      @B1487_2
 0003:00000594      @B559_2
 0003:0000059C      @B563_2
 0003:000005A4      @B565_2
 0003:000005B4      @B567_2
 0003:000005B8      @B592_2
 0003:00000748      @B624_1
 0003:0000074C      @B661_2
 0003:00000754      @B754_2
 0003:0000075C      @B799_2
 0001:000126B0      @C1000_0
 0001:000126D8      @C1007_0
 0001:00012C60      @C1009_0
 0001:00012D64      @C1011_0
 0001:00012DBC      @C1034_0
 0001:00013284      @C1060_0
 0001:00013484      @C1061_0
 0001:000135A0      @C1064_0
 0001:00013654      @C1069_0
 0001:00013668      @C1070_0
 0001:000136AC      @C1074_0
 0001:00013790      @C1075_0
 0001:000146A4      @C1075_2
 0001:000146C4      @C1078_0
 0001:000146EC      @C1079_0
 0001:00014704      @C1082_0
 0001:00014770      @C1085_0
 0001:000147D0      @C1086_0
 0001:000148A0      @C1087_0
 0001:000148E8      @C1088_0
 0001:000149CC      @C1089_0
 0001:000149DC      @C1098_0
 0001:000012FC      @C10_0
 0001:000149F4      @C1102_0
 0001:00014A24      @C1103_0
 0001:00014A48      @C1104_0
 0001:00014A5C      @C1109_0
 0001:00014B10      @C1113_0
 0001:00014B80      @C1123_0
 0001:00014D5C      @C1125_0
 0001:00014D84      @C1126_0
 0001:00014DB4      @C1130_0
 0001:00014DF8      @C1134_0
 0001:00014E34      @C1152_0
 0001:00014E4C      @C1153_0
 0001:00014E64      @C1160_0
 0001:00014F64      @C1161_0
 0001:00014FF4      @C1163_0
 0001:0001506C      @C1165_0
 0001:00015098      @C1166_0
 0001:000150C8      @C1167_0
 0001:000150E0      @C1172_0
 0001:000153DC      @C1173_0
 0001:00015710      @C1174_0
 0001:00015BF4      @C1175_0
 0001:000160D8      @C1182_0
 0001:000163A8      @C1183_0
 0001:00016698      @C1188_0
 0001:00016748      @C1189_0
 0001:000168C0      @C1201_0
 0001:000169B0      @C1201_3
 0001:000169C0      @C1212_0
 0001:000169E0      @C1243_0
 0001:00016A38      @C1273_0
 0001:00016A64      @C1274_0
 0001:00016A74      @C1275_0
 0001:00016A84      @C1276_0
 0001:00016ACC      @C1277_0
 0001:00016ADC      @C1280_0
 0001:00016B40      @C1280_3
 0001:00016B4C      @C1280_4
 0001:00016BAC      @C1280_5
 0001:00016BE4      @C1287_0
 0001:00016C30      @C1293_0
 0001:00016CD8      @C1298_0
 0001:00016CE4      @C1303_0
 0001:00016E48      @C1304_0
 0001:0000265C      @C130_0
 0001:00003498      @C130_4
 0001:00016F04      @C1310_0
 0001:000058E0      @C131_0
 0001:0000618C      @C131_3
 0001:00016F28      @C1328_0
 0001:00016FF0      @C1332_0
 0001:00016FF4      @C1336_0
 0001:00016FF4      @C1336_3
 0001:00017188      @C1336_4
 0001:000172DC      @C1363_0
 0001:000172DC      @C1363_2
 0001:00017314      @C1363_3
 0001:00017324      @C1370_0
 0001:000174C4      @C1370_3
 0001:00017344      @C1370_4
 0001:000174F8      @C1372_0
 0001:00017814      @C1379_0
 0001:00017970      @C1379_2
 0001:00017984      @C1380_0
 0001:00008280      @C139_0
 0001:00008280      @C139_2
 0001:00017AEC      @C1405_0
 0001:00017B20      @C1406_0
 0001:00017CE0      @C1449_0
 0001:000183D8      @C1455_0
 0001:000183D8      @C1455_2
 0001:00018440      @C1455_3
 0001:00018458      @C1457_0
 0001:00018550      @C1457_3
 0001:00018564      @C1457_4
 0001:00018618      @C1460_0
 0001:000186D8      @C1460_3
 0001:000186F0      @C1478_0
 0001:00018754      @C1485_0
 0001:00000000      @C1486_0
 0001:00000108      @C1487_0
 0001:00001370      @C19_0
 0001:00008290      @C493_0
 0001:000082B0      @C495_0
 0001:000082D4      @C497_0
 0001:00008320      @C498_0
 0001:000083AC      @C499_0
 0001:000083C4      @C506_0
 0001:00008400      @C508_0
 0001:0000844C      @C510_0
 0001:000084A8      @C511_0
 0001:00008518      @C519_0
 0001:00008584      @C525_0
 0001:000085D4      @C535_0
 0001:0000860C      @C536_0
 0001:00008624      @C537_0
 0001:00008664      @C557_0
 0001:00008844      @C558_0
 0001:00008A80      @C559_0
 0001:00008A80      @C559_4
 0001:00008C2C      @C562_0
 0001:00008C38      @C563_0
 0001:00008D60      @C563_3
 0001:00008D78      @C563_4
 0001:00008DA0      @C564_0
 0001:00008DC4      @C565_0
 0001:00008DC4      @C565_3
 0001:0000B29F      @C565_4
 0001:0000CA8C      @C566_0
 0001:0000CAC8      @C567_0
 0001:0000D4C0      @C569_0
 0001:0000D508      @C570_0
 0001:0000D510      @C571_0
 0001:0000D590      @C575_0
 0001:0000D598      @C583_0
 0001:0000D638      @C585_0
 0001:0000D6C8      @C595_0
 0001:0000D72C      @C597_0
 0001:0000D73C      @C600_0
 0001:0000D920      @C601_0
 0001:0000D954      @C604_0
 0001:0000DA30      @C611_0
 0001:0000DA6C      @C613_0
 0001:0000DBC8      @C623_0
 0001:0000DBD0      @C624_0
 0001:0000DD70      @C626_0
 0001:0000DE80      @C628_0
 0001:0000DE88      @C630_0
 0001:0000DF24      @C634_0
 0001:0000DF60      @C639_0
 0001:0000DF68      @C643_0
 0001:0000DFA8      @C645_0
 0001:0000E784      @C649_0
 0001:0000E9AC      @C654_0
 0001:0000EA0C      @C657_0
 0001:0000EA7C      @C661_0
 0001:0000EB40      @C661_3
 0001:0000ECB4      @C667_0
 0001:0000ED18      @C673_0
 0001:0000F6CC      @C689_0
 0001:0000F6D4      @C695_0
 0001:0000F70C      @C696_0
 0001:0000F740      @C699_0
 0001:0000F7D8      @C700_0
 0001:0000F98C      @C702_0
 0001:0000FB3C      @C703_0
 0001:0000FB50      @C708_0
 0001:0000FB94      @C709_0
 0001:0000FBB4      @C725_0
 0001:0000FBDC      @C727_0
 0001:000013A8      @C72_0
 0001:0000FC08      @C754_0
 0001:0000FFBC      @C755_0
 0001:00010048      @C780_0
 0001:000100AC      @C782_0
 0001:00010110      @C785_0
 0001:00010150      @C786_0
 0001:000101B0      @C790_0
 0001:000101F8      @C791_0
 0001:0001027C      @C792_0
 0001:0001047C      @C797_0
 0001:00010498      @C799_0
 0001:00010498      @C799_3
 0001:00010770      @C799_4
 0001:000106D8      @C799_5
 0001:000107E0      @C799_6
 0001:00010B0C      @C809_0
 0001:00010B7C      @C811_0
 0001:00010C28      @C813_0
 0001:00010CA8      @C814_0
 0001:00010D90      @C816_0
 0001:00010E08      @C817_0
 0001:00010F08      @C818_0
 0001:00011014      @C819_0
 0001:00011160      @C852_0
 0001:0001117C      @C853_0
 0001:00011214      @C856_0
 0001:00011290      @C857_0
 0001:000112E0      @C858_0
 0001:00011370      @C859_0
 0001:000113E4      @C860_0
 0001:0001146C      @C861_0
 0001:000114D0      @C865_0
 0001:0001198C      @C870_0
 0001:000119FC      @C880_0
 0001:00011A84      @C882_0
 0001:00011B34      @C886_0
 0001:00011BA0      @C907_0
 0001:00011BC4      @C908_0
 0001:00011C4C      @C910_0
 0001:00011CC8      @C911_0
 0001:00011D58      @C912_0
 0001:00011DE0      @C913_0
 0001:00011E54      @C914_0
 0001:00011E7C      @C921_0
 0001:00011EA4      @C922_0
 0001:00011EE4      @C923_0
 0001:000120D4      @C958_0
 0001:0001210C      @C959_0
 0001:000121A0      @C962_0
 0001:000121C0      @C963_0
 0001:00012238      @C964_0
 0001:000122A8      @C965_0
 0001:000122DC      @C966_0
 0001:000122E4      @C967_0
 0001:000122EC      @C968_0
 0001:00012310      @C969_0
 0001:00012378      @C970_0
 0001:000123AC      @C971_0
 0001:000123D4      @C973_0
 0001:000123DC      @C974_0
 0001:000123F8      @C975_0
 0001:0001243C      @C977_0
 0001:00012474      @C979_0
 0001:00012494      @C980_0
 0001:000124D0      @C981_0
 0001:00012524      @C983_0
 0001:0001259C      @C985_0
 0001:000125E4      @C988_0
 0001:0001263C      @C990_0
 0001:00012668      @C993_0
 0002:00003940      @D1001_1
 0002:00003B44      @D1007_1
 0002:00003B4C      @D1013_1
 0002:00003DA8      @D1061_1
 0002:00003DC4      @D1064_1
 0002:00003DDC      @D1070_1
 0002:00003DE8      @D1075_1
 0002:00003E00      @D1082_1
 0002:00003E0C      @D1085_1
 0002:00003E20      @D1086_1
 0002:00003E34      @D1087_1
 0002:00003E4C      @D1088_1
 0002:00003E68      @D1113_1
 0002:00003E74      @D1123_1
 0002:00003E90      @D1130_1
 0002:00003E9C      @D1134_1
 0002:00003EAC      @D1152_1
 0002:00003F14      @D1153_1
 0002:00003F7C      @D1154_1
 0002:00003F80      @D1157_1
 0002:00003FBC      @D1158_1
 0002:00003FC4      @D1167_1
 0002:00003FCC      @D1168_1
 0002:00004010      @D1172_1
 0002:00004024      @D1173_1
 0002:0000404C      @D1174_1
 0002:00004074      @D1175_1
 0002:0000409C      @D1188_1
 0002:000040AC      @D1189_1
 0002:0000416C      @D1201_1
 0002:000041B4      @D1280_1
 0002:00004238      @D1293_1
 0002:0000425C      @D1303_1
 0002:00004268      @D1304_1
 0002:00000C9C      @D130_1
 0002:0000428C      @D1310_1
 0002:000042AC      @D1328_1
 0002:000042BC      @D1336_1
 0002:00004334      @D1363_1
 0002:00004354      @D1370_1
 0002:000043C0      @D1372_1
 0002:00004420      @D1379_1
 0002:00004438      @D1405_1
 0002:0000446C      @D1406_1
 0002:000044D4      @D1449_1
 0002:000046F4      @D1457_1
 0002:00004710      @D1460_1
 0002:000000EC      @D1486_1
 0002:00000160      @D1487_1
 0002:00000E14      @D557_1
 0002:00000E74      @D558_1
 0002:00000F70      @D559_1
 0002:0000105C      @D563_1
 0002:00001070      @D565_1
 0002:00002468      @D567_1
 0002:00002774      @D591_1
 0002:00002C24      @D592_1
 0002:00002CF0      @D596_1
 0002:00002CF4      @D597_1
 0002:00002CF8      @D630_1
 0002:00002D04      @D633_1
 0002:00003180      @D645_1
 0002:00003200      @D661_1
 0002:00003254      @D673_1
 0002:000032CC      @D703_1
 0002:000032D0      @D715_1
 0002:00000368      @D72_1
 0002:000032D4      @D754_1
 0002:00003328      @D755_1
 0002:00003454      @D799_1
 0002:00003644      @D811_1
 0002:000036A8      @D813_1
 0002:000036D0      @D853_1
 0002:00003710      @D856_1
 0002:00003750      @D859_1
 0002:00003774      @D860_1
 0002:00003798      @D908_1
 0002:000037D8      @D910_1
 0002:00003818      @D911_1
 0002:0000383C      @D912_1
 0002:00003860      @D913_1
 0002:00003864      @D959_1
 0002:000038C8      @D981_1
 0002:000038FC      @D983_1
 0004:00000000      @T130_3
 0004:00000008      @T559_3
 0001:0000CA8C      @__InitExceptBlockLDTC
 0001:00000108      Alloc_2D(long,long)
 0001:00000190      CplxAlloc_2D(long,long)
 0001:000001FF      CplxDealloc_2D(complex**,long,long)
 0001:00000177      Dealloc_2D(double**,long,long)
 0001:00016BE4      InitProntoMemoryManager() __fastcall
 0001:000106D8      Iostream_delete()
 0001:00006860      SysUtils::_16442
 0001:00006878      SysUtils::_16443
 0001:00006D24      SysUtils::_16545
 0001:00006D7C      SysUtils::_16546
 0001:00006D90      SysUtils::_16547
 0001:00007328      SysUtils::_16613
 0001:0000746C      SysUtils::_16614
 0001:000079C4      SysUtils::_16618
 0002:00000D3C      SysUtils::_16633
 0001:00007CAC      SysUtils::_16634
 0002:00000D74      SysUtils::_16635
 0001:00007D34      SysUtils::_16636
 0001:00007D70      SysUtils::_16637
 0001:00007DF0      SysUtils::_16638
 0001:00007E04      SysUtils::_16639
 0001:00007EF8      SysUtils::_16640
 0001:00007F08      SysUtils::_16641
 0001:00007F54      SysUtils::_16642
 0001:00007F7C      SysUtils::_16644
 0001:000081D0      SysUtils::_16661
 0001:00004BAC      System::::AfterConstruction() __fastcall
 0001:00002C85      System::::Append() __fastcall
 0001:00002859      System::::Assign(void*&,System::SmallString<255>&) __fastcall
 0001:00004BB4      System::::BeforeDestruction() __fastcall
 0001:00004B64      System::::ClassCreate() __fastcall
 0001:00004BA4      System::::ClassDestroy() __fastcall
 0001:00005830      System::::Close() __fastcall
 0001:00002976      System::::FSafeDivide() __fastcall
 0001:00002974      System::::FSafeDivideR() __fastcall
 0001:000053C4      System::::Finalize() __fastcall
 0001:0000533C      System::::FinalizeArray() __fastcall
 0001:00005314      System::::FinalizeRecord() __fastcall
 0001:000028D4      System::::Flush(void*&) __fastcall
 0001:00004884      System::::FreeMem() __fastcall
 0001:0000486C      System::::GetMem() __fastcall
 0001:000000F9      System::::GetTls() __fastcall
 0001:00002B88      System::::Halt() __fastcall
 0001:00002B84      System::::Halt0() __fastcall
 0001:00004C70      System::::HandleAnyException() __fastcall
 0001:00004D40      System::::HandleFinally() __fastcall
 0001:00004AEC      System::::IsClass() __fastcall
 0001:00004E48      System::::LStrArrayClr() __fastcall
 0001:00004E78      System::::LStrAsg() __fastcall
 0001:00004F98      System::::LStrCat() __fastcall
 0001:00004FDC      System::::LStrCat3() __fastcall
 0001:00005050      System::::LStrCatN() __fastcall
 0001:00004E28      System::::LStrClr() __fastcall
 0001:000050A0      System::::LStrCmp() __fastcall
 0001:00005184      System::::LStrCopy() __fastcall
 0001:000051C4      System::::LStrDelete() __fastcall
 0001:00004F78      System::::LStrFromArray() __fastcall
 0001:00004F38      System::::LStrFromChar() __fastcall
 0001:00004F08      System::::LStrFromLenStr() __fastcall
 0001:00004F48      System::::LStrFromPChar() __fastcall
 0001:0000520C      System::::LStrInsert() __fastcall
 0001:00004EBC      System::::LStrLAsg() __fastcall
 0001:00004F90      System::::LStrLen() __fastcall
 0001:00005268      System::::LStrPos() __fastcall
 0001:000052B0      System::::LStrSetLength() __fastcall
 0001:00005144      System::::LStrToPChar() __fastcall
 0001:00004EE4      System::::NewAnsiString() __fastcall
 0001:000031C4      System::::Pow10() __fastcall
 0001:00004D94      System::::RaiseAgain() __fastcall
 0001:00004D78      System::::RaiseExcept() __fastcall
 0001:00002BAF      System::::ReadCString() __fastcall
 0001:0000586C      System::::ReadChar() __fastcall
 0001:00002BA4      System::::ReadString() __fastcall
 0001:0000489C      System::::ReallocMem() __fastcall
 0001:00002D8D      System::::ResetFile() __fastcall
 0001:00002C77      System::::ResetText(void*&) __fastcall
 0001:00002DA4      System::::RewritFile() __fastcall
 0001:00002C7E      System::::RewritText(void*&) __fastcall
 0001:00002B95      System::::Run0Error() __fastcall
 0001:00002B99      System::::RunError() __fastcall
 0001:00002F5C      System::::Str0Ext() __fastcall
 0001:00002F68      System::::Str1Ext() __fastcall
 0001:00002F6F      System::::Str2Ext() __fastcall
 0001:00004DE8      System::::TryFinallyExit() __fastcall
 0001:000049A8      System::::ValLong() __fastcall
 0001:000057A0      System::::VarClr() __fastcall
 0001:00005764      System::::VarToLStr(System::AnsiString&,const System::Variant) __fastcall
 0001:00002F0C      System::::Write0CString() __fastcall
 0001:00002EA3      System::::Write0Char() __fastcall
 0001:00002E68      System::::Write0String() __fastcall
 0001:00002F10      System::::WriteCString() __fastcall
 0001:00002EF5      System::::WriteChar() __fastcall
 0001:00002E8F      System::::WriteLn() __fastcall
 0001:00002E72      System::::WriteString() __fastcall
 0001:000028AF      System::::_Flush(void*&) __fastcall
 0001:0000492C      System::::_IOTest() __fastcall
 0003:00000420      System::AllocMemCount
 0003:00000424      System::AllocMemSize
 0001:00001780      System::AnsiString::AnsiCompare(const System::AnsiString&) const __fastcall
 0001:000017F1      System::AnsiString::AnsiCompareIC(const System::AnsiString&) const __fastcall
 0001:0000243C      System::AnsiString::AnsiLastChar() const __fastcall
 0001:00002278      System::AnsiString::AnsiPos(const System::AnsiString&) const __fastcall
 0001:000014EC      System::AnsiString::AnsiString(char) __fastcall
 0001:000013DF      System::AnsiString::AnsiString(const System::AnsiString&) __fastcall
 0001:000013A8      System::AnsiString::AnsiString(const char*) __fastcall
 0001:00001418      System::AnsiString::AnsiString(const char*,unsigned char) __fastcall
 0001:00001455      System::AnsiString::AnsiString(const wchar_t*) __fastcall
 0001:0000159C      System::AnsiString::AnsiString(double) __fastcall
 0001:00001535      System::AnsiString::AnsiString(int) __fastcall
 0001:000023AD      System::AnsiString::ByteType(int) const __fastcall
 0001:00001C1B      System::AnsiString::CurrToStr(System::Currency) __fastcall
 0001:00001C88      System::AnsiString::CurrToStrF(System::Currency,System) __fastcall
 0001:00001D7A      System::AnsiString::Delete(int,int) __fastcall
 0001:00001B28      System::AnsiString::FloatToStrF(long double,System::AnsiString::TStringFloatFormat) __fastcall
 0001:00001987      System::AnsiString::FmtLoadStr(int,const System::TVarRec*) __fastcall
 0001:000019FE      System::AnsiString::Format(const System::AnsiString&,const System::TVarRec) __fastcall
 0001:00001A92      System::AnsiString::FormatFloat(const System::AnsiString&,const long double) __fastcall
 0001:00001D55      System::AnsiString::Insert(const System::AnsiString&) __fastcall
 0001:00001BAA      System::AnsiString::IntToHex(int,int) __fastcall
 0001:00002201      System::AnsiString::IsDelimiter(const System::AnsiString&) const __fastcall
 0001:00001870      System::AnsiString::IsEmpty() const __fastcall
 0001:00002400      System::AnsiString::IsLeadByte(int) const __fastcall
 0001:000022E9      System::AnsiString::IsPathDelimiter(int) const __fastcall
 0001:0000241D      System::AnsiString::IsTrailByte(int) const __fastcall
 0001:0000233C      System::AnsiString::LastDelimiter(const System::AnsiString&) const __fastcall
 0001:00001862      System::AnsiString::Length() const __fastcall
 0001:0000191C      System::AnsiString::LoadStr(int) __fastcall
 0001:00001DDB      System::AnsiString::LowerCase() const __fastcall
 0001:00001DBA      System::AnsiString::Pos(const System::AnsiString&) const __fastcall
 0001:00001D9D      System::AnsiString::SetLength(int) __fastcall
 0001:0000187F      System::AnsiString::StringOfChar(char,int) __fastcall
 0001:00002083      System::AnsiString::SubString(int,int) const __fastcall
 0001:000021B0      System::AnsiString::ToDouble() const __fastcall
 0001:00002110      System::AnsiString::ToInt() const __fastcall
 0001:0000215D      System::AnsiString::ToIntDef(int) const __fastcall
 0001:00001EEB      System::AnsiString::Trim() const __fastcall
 0001:00001F73      System::AnsiString::TrimLeft() const __fastcall
 0001:00001FFB      System::AnsiString::TrimRight() const __fastcall
 0001:00001D4B      System::AnsiString::Unique() __fastcall
 0001:00001E63      System::AnsiString::UpperCase() const __fastcall
 0001:00001D24      System::AnsiString::WideChar(wchar_t*,int) const __fastcall
 0001:00001D01      System::AnsiString::WideCharBufSize() const __fastcall
 0001:000016FE      System::AnsiString::operator !=(const System::AnsiString&) const __fastcall
 0001:0000165F      System::AnsiString::operator +(const System::AnsiString&) const __fastcall
 0001:0000164B      System::AnsiString::operator +=(const System::AnsiString&) __fastcall
 0001:00001714      System::AnsiString::operator <(const System::AnsiString&) const __fastcall
 0001:00001740      System::AnsiString::operator <=(const System::AnsiString&) const __fastcall
 0001:00001637      System::AnsiString::operator =(const System::AnsiString&) __fastcall
 0001:000016E8      System::AnsiString::operator ==(const System::AnsiString&) const __fastcall
 0001:0000172A      System::AnsiString::operator >(const System::AnsiString&) const __fastcall
 0001:00001760      System::AnsiString::operator >=(const System::AnsiString&) const __fastcall
 0001:00001608      System::AnsiString::~AnsiString() __fastcall
 0003:00000038      System::CmdLine
 0003:00000034      System::CmdShow
 0002:00000D04      System::DebugHook
 0003:0000004C      System::DllProc
 0003:00000048      System::ErrorAddr
 0003:0000001C      System::ErrorProc
 0003:00000020      System::ExceptClsProc
 0003:00000024      System::ExceptObjProc
 0003:00000018      System::ExceptProc
 0003:00000028      System::ExceptionClass
 0003:00000040      System::ExitCode
 0003:00000044      System::ExitProc
 0001:000031C4      System::FPower10() __fastcall
 0003:00000057      System::FileMode
 0001:00005808      System::FreeMemory(void*)
 0001:000057F8      System::GetMemory(int)
 0003:00000030      System::HInstance
 0003:0000002C      System::HPrevInst
 0004:00000004      System::InOutRes
 0003:0000003C      System::InitProc
 0003:0000005C      System::Input
 0003:00000055      System::IsConsole
 0003:00000054      System::IsLibrary
 0003:00000056      System::IsMultiThread
 0001:00004968      System::Move(const void*,void*,int) __fastcall
 0003:00000410      System::Null
 0001:0000545C      System::OleStrToStrVar(wchar_t*,System::AnsiString&) __fastcall
 0003:00000228      System::Output
 0004:00000000      System::RaiseList
 0003:00000050      System::RandSeed
 0001:00005820      System::ReallocMemory(void*,int)
 0001:00005478      System::StringToOleStr(const System::AnsiString) __fastcall
 0001:00004434      System::SysFreeMem(void*) __fastcall
 0001:000042AC      System::SysGetMem(int) __fastcall
 0001:000047A8      System::SysReallocMem(void*,int) __fastcall
 0002:00000320      System::TObject::
 0001:00004B34      System::TObject::AfterConstruction() __fastcall
 0001:00004B38      System::TObject::BeforeDestruction() __fastcall
 0001:00004A80      System::TObject::ClassName(System::TMetaClass*) __fastcall
 0001:00004B30      System::TObject::DefaultHandler(void*) __fastcall
 0001:00004B3C      System::TObject::Dispatch(void*) __fastcall
 0001:00004AE0      System::TObject::Free() __fastcall
 0001:00004ABC      System::TObject::FreeInstance() __fastcall
 0001:00004A94      System::TObject::NewInstance(System::TMetaClass*) __fastcall
 0001:00001358      System::TObject::~TObject() __fastcall
 0003:00000058      System::Test8086
 0003:00000059      System::Test8087
 0003:0000005A      System::TestFDIV
 0001:00003560      System::TextStart() __fastcall
 0003:000003F4      System::TlsIndex
 0003:000003F8      System::TlsIndex4
 0003:000003FC      System::TlsLast
 0003:00000400      System::Unassigned
 0001:00005150      System::UniqueString(System::AnsiString&) __fastcall
 0001:00005674      System::VarCast(System::Variant&,const System::Variant) __fastcall
 0001:0000550C      System::VarClear(System::Variant&) __fastcall
 0001:00005540      System::VarCopy(System::Variant&,const System::Variant) __fastcall
 0001:000057DC      System::VclExit()
 0001:000057A8      System::VclInit(bool,long,bool)
 0001:000053D0      System::WideCharLenToStrVar(wchar_t*,int,System::AnsiString&) __fastcall
 0001:00003564      System::_16414
 0001:000035B4      System::_16415
 0001:000035BC      System::_16416
 0001:000035EC      System::_16417
 0001:00003604      System::_16418
 0001:00003678      System::_16419
 0001:00003708      System::_16420
 0001:0000376C      System::_16421
 0001:000037E4      System::_16422
 0001:0000389C      System::_16423
 0001:00003930      System::_16424
 0001:000039B0      System::_16425
 0001:00003A40      System::_16426
 0001:00003B64      System::_16427
 0001:00003BF0      System::_16428
 0001:00003CB4      System::_16429
 0001:00003D98      System::_16430
 0001:00003DEC      System::_16431
 0001:00003E1C      System::_16432
 0001:00003E4C      System::_16433
 0001:00003E70      System::_16434
 0001:00003E98      System::_16435
 0001:00003F08      System::_16436
 0001:00003F40      System::_16437
 0001:00003FD8      System::_16438
 0001:00004058      System::_16439
 0001:000040A4      System::_16440
 0001:00004130      System::_16441
 0001:0000415C      System::_16442
 0001:00004190      System::_16443
 0001:000041B8      System::_16444
 0001:000045D8      System::_16447
 0002:00000D08      System::_16451
 0001:000048EC      System::_16457
 0001:0000494C      System::_16459
 0001:0000495C      System::_16460
 0002:00000D14      System::_16524
 0001:00004A74      System::_16525
 0001:00004B04      System::_16542
 0001:00004BC4      System::_16560
 0001:00004BE0      System::_16561
 0001:00004C00      System::_16562
 0001:00004C14      System::_16564
 0001:00004C28      System::_16565
 0001:00004C48      System::_16566
 0001:00004E00      System::_16581
 0001:000054FC      System::_16646
 0001:00005504      System::_16647
 0001:000055B4      System::_16651
 0001:00005624      System::_16652
 0001:00005654      System::_16653
 0001:00003498      System::initialization() __fastcall
 0001:00002489      System::operator +(const char*,const System::AnsiString&) __fastcall
 0001:00002511      System::operator >>(istream&,System::AnsiString&)
 0001:000068FC      Sysutils::AnsiCompareStr(const System::AnsiString,const System::AnsiString) __fastcall
 0001:00006934      Sysutils::AnsiCompareText(const System::AnsiString,const System::AnsiString) __fastcall
 0001:00006B78      Sysutils::AnsiLastChar(const System::AnsiString) __fastcall
 0001:000068CC      Sysutils::AnsiLowerCase(const System::AnsiString) __fastcall
 0001:00008090      Sysutils::AnsiPos(const System::AnsiString,const System::AnsiString) __fastcall
 0001:000080C8      Sysutils::AnsiStrPos(char*,char*) __fastcall
 0001:00008168      Sysutils::AnsiStrRScan(char*,char) __fastcall
 0001:00008190      Sysutils::AnsiStrScan(char*,char) __fastcall
 0001:0000689C      Sysutils::AnsiUpperCase(const System::AnsiString) __fastcall
 0001:00007FDC      Sysutils::ByteType(const System::AnsiString) __fastcall
 0001:00007180      Sysutils::CurrToStr(System::Currency) __fastcall
 0001:000071E8      Sysutils::CurrToStrF(System::Currency,S,...
 0003:000004C4      Sysutils::CurrencyDecimals
 0003:000004C0      Sysutils::CurrencyFormat
 0003:000004BC      Sysutils::CurrencyString
 0003:000004C5      Sysutils::DateSeparator
 0003:000004C3      Sysutils::DecimalSeparator
 0001:00006680      Sysutils::EAccessViolation::
 0001:0000B810      Sysutils::EAccessViolation::EAccessViolation(const System::AnsiString) __fastcall
 0001:0000C93C      Sysutils::EAccessViolation::~EAccessViolation() __fastcall
 0001:00006770      Sysutils::EControlC::
 0001:0000B980      Sysutils::EControlC::EControlC(const System::AnsiString) __fastcall
 0001:0000C9E4      Sysutils::EControlC::~EControlC() __fastcall
 0001:00006630      Sysutils::EConvertError::
 0001:0000632C      Sysutils::EDivByZero::
 0001:0000B308      Sysutils::EDivByZero::EDivByZero(const System::AnsiString) __fastcall
 0001:0000C6F0      Sysutils::EDivByZero::~EDivByZero() __fastcall
 0001:0000680C      Sysutils::EExternalException::
 0001:00006294      Sysutils::EInOutError::
 0001:000062E0      Sysutils::EIntError::
 0001:0000BAF0      Sysutils::EIntError::EIntError(const System::AnsiString) __fastcall
 0001:0000C1E8      Sysutils::EIntError::~EIntError() __fastcall
 0001:000063C4      Sysutils::EIntOverflow::
 0001:0000B478      Sysutils::EIntOverflow::EIntOverflow(const System::AnsiString) __fastcall
 0001:0000C798      Sysutils::EIntOverflow::~EIntOverflow() __fastcall
 0001:000065E0      Sysutils::EInvalidCast::
 0001:00006460      Sysutils::EInvalidOp::
 0001:0000B530      Sysutils::EInvalidOp::EInvalidOp(const System::AnsiString) __fastcall
 0001:0000C7EC      Sysutils::EInvalidOp::~EInvalidOp() __fastcall
 0001:00006590      Sysutils::EInvalidPointer::
 0001:00006414      Sysutils::EMathError::
 0001:0000BBA8      Sysutils::EMathError::EMathError(const System::AnsiString) __fastcall
 0001:0000C194      Sysutils::EMathError::~EMathError() __fastcall
 0001:00006244      Sysutils::EOutOfMemory::
 0001:00007CA8      Sysutils::EOutOfMemory::FreeInstance() __fastcall
 0001:00007C98      Sysutils::EOutOfMemory::~EOutOfMemory() __fastcall
 0001:000064F8      Sysutils::EOverflow::
 0001:0000B6A0      Sysutils::EOverflow::EOverflow(const System::AnsiString) __fastcall
 0001:0000C894      Sysutils::EOverflow::~EOverflow() __fastcall
 0001:000066D4      Sysutils::EPrivilege::
 0001:0000B8C8      Sysutils::EPrivilege::EPrivilege(const System::AnsiString) __fastcall
 0001:0000C990      Sysutils::EPrivilege::~EPrivilege() __fastcall
 0001:00006378      Sysutils::ERangeError::
 0001:0000B3C0      Sysutils::ERangeError::ERangeError(const System::AnsiString) __fastcall
 0001:0000C744      Sysutils::ERangeError::~ERangeError() __fastcall
 0001:00006720      Sysutils::EStackOverflow::
 0001:0000BA38      Sysutils::EStackOverflow::EStackOverflow(const System::AnsiString) __fastcall
 0001:0000CA38      Sysutils::EStackOverflow::~EStackOverflow() __fastcall
 0001:00006544      Sysutils::EUnderflow::
 0001:0000B758      Sysutils::EUnderflow::EUnderflow(const System::AnsiString) __fastcall
 0001:0000C8E8      Sysutils::EUnderflow::~EUnderflow() __fastcall
 0001:000067BC      Sysutils::EVariantError::
 0001:000064AC      Sysutils::EZeroDivide::
 0001:0000B5E8      Sysutils::EZeroDivide::EZeroDivide(const System::AnsiString) __fastcall
 0001:0000C840      Sysutils::EZeroDivide::~EZeroDivide() __fastcall
 0001:000061E8      Sysutils::Exception::
 0001:00007B54      Sysutils::Exception::Exception(const System::AnsiString) __fastcall
 0001:00007B8C      Sysutils::Exception::Exception(int) __fastcall
 0001:00007C04      Sysutils::Exception::Exception(int,const System::TVarRec*,int) __fastcall
 0001:0000C12C      Sysutils::Exception::~Exception() __fastcall
 0001:00005E9E      Sysutils::FloatToDecimal(Sysutils::TFloatRec&,const void,Sysutils::TFloatValue,int) __fastcall
 0001:00007150      Sysutils::FloatToStr(long double) __fastcall
 0001:000071B0      Sysutils::FloatToStrF(long double,Sysutils::TFloatFormat,int) __fastcall
 0001:00005902      Sysutils::FloatToText(char*,const void*,Sysutils::TFloatValue,S,...
 0001:00005BCB      Sysutils::FloatToTextFmt(char*,const void*,Sysutils::TFloatValue,...
 0001:00006B1C      Sysutils::FmtLoadStr(int,const System::TVarRec*,int) __fastcall
 0001:000070EC      Sysutils::FmtStr(System::AnsiString&,System::AnsiString,const System::TVarRec,int) __fastcall
 0001:000070D8      Sysutils::Format(const System::AnsiString,const System::TVarRec,int) __fastcall
 0001:00006D9C      Sysutils::FormatBuf(void*,unsigned int,const void*,unsigned int,const System::TVarRec*,int) __fastcall
 0001:00007220      Sysutils::FormatFloat(const System::AnsiString) __fastcall
 0001:00007678      Sysutils::GetFormatSettings() __fastcall
 0001:00007300      Sysutils::GetLocaleChar(int,int,char) __fastcall
 0001:000072B4      Sysutils::GetLocaleStr(int,int,const System::AnsiString) __fastcall
 0001:00006A54      Sysutils::IntToHex(int,int) __fastcall
 0001:00006A24      Sysutils::IntToStr(int) __fastcall
 0001:0000804C      Sysutils::IsDelimiter(const System::AnsiString,const System::AnsiString,int) __fastcall
 0001:00008018      Sysutils::IsPathDelimiter(const System::AnsiString) __fastcall
 0001:00006BA0      Sysutils::LastDelimiter(const System::AnsiString,const System::AnsiString) __fastcall
 0002:00000D1C      Sysutils::LeadBytes
 0001:00006AE4      Sysutils::LoadStr(int) __fastcall
 0003:000004CC      Sysutils::LongDateFormat
 0003:00000560      Sysutils::LongDayNames
 0003:00000514      Sysutils::LongMonthNames
 0003:000004E0      Sysutils::LongTimeFormat
 0003:000004C1      Sysutils::NegCurrFormat
 0003:000004C8      Sysutils::ShortDateFormat
 0003:00000544      Sysutils::ShortDayNames
 0003:000004E4      Sysutils::ShortMonthNames
 0003:000004DC      Sysutils::ShortTimeFormat
 0001:000079D0      Sysutils::ShowException(System::TObject*,void) __fastcall
 0001:00008000      Sysutils::StrByteType(char*,unsigned int) __fastcall
 0001:000070A4      Sysutils::StrFmt(char*,char*,const System::TVarRec*,int) __fastcall
 0001:00006C3C      Sysutils::StrLCopy(char*,char*,unsigned int) __fastcall
 0001:00006C70      Sysutils::StrLIComp(char*,char*,unsigned int) __fastcall
 0001:00006BE8      Sysutils::StrLen(char*) __fastcall
 0001:00006C00      Sysutils::StrMove(char*,char*,unsigned int) __fastcall
 0001:00006CD8      Sysutils::StrPos(char*,char*) __fastcall
 0001:00006CB8      Sysutils::StrScan(char*,char) __fastcall
 0001:00007278      Sysutils::StrToFloat(const System::AnsiString) __fastcall
 0001:00006A90      Sysutils::StrToInt(const System::AnsiString) __fastcall
 0001:00006ACC      Sysutils::StrToIntDef(const System::AnsiString) __fastcall
 0003:0000057C      Sysutils::SysLocale
 0001:0000608B      Sysutils::TextToFloat(char*,void*,Sysutils::TFloatValue) __fastcall
 0003:000004C2      Sysutils::ThousandSeparator
 0003:000004D4      Sysutils::TimeAMString
 0003:000004D8      Sysutils::TimePMString
 0003:000004D0      Sysutils::TimeSeparator
 0001:0000696C      Sysutils::Trim(const System::AnsiString) __fastcall
 0001:000069BC      Sysutils::TrimLeft(const System::AnsiString) __fastcall
 0001:000069F0      Sysutils::TrimRight(const System::AnsiString) __fastcall
 0002:00000D18      Sysutils::Win32Platform
 0001:0000618C      Sysutils::initialization() __fastcall
 0001:00017F14      TStringRef::TStringRef(const char*,unsigned int,const char*,unsigned int,unsigned int)
 0001:00018068      TStringRef::check_freeboard()
 0001:000180BC      TStringRef::grow_to(unsigned int)
 0001:00018010      TStringRef::reserve(unsigned int)
 0001:0001810C      TStringRef::round_capacity(unsigned int)
 0001:00018148      TStringRef::splice(unsigned int,unsigned int,const char*,unsigned int)
 0001:00017FCC      TStringRef::~TStringRef()
 0001:00017E74      TSubString::assert_element(unsigned int) const
 0001:00008280      Windows::initialization() __fastcall
 0002:00003C58      _CLOCALE
 0002:00003B4C      _CMonetary
 0002:00003B80      _CNumeric
 0002:00003B96      _CTimeDate
 0001:00009BD5      _CatchCleanup()
 0002:00000D04      _DebugHook
 0003:00000028      _ExceptionClass
 0001:00009948      _ReThrowException(unsigned int,unsigned char*)
 0001:00009913      _ThrowExceptionLDTC(void*,void*,void*,void*,unsigned int,unsigned int,unsigned int,unsigned char*,void*)
 0001:0000137D      __AfterConstruction
 0001:00001385      __BeforeDestruction
 0003:00000B70      __C0argc
 0003:00000B74      __C0argv
 0003:00000B78      __C0environ
 0001:00001370      __ClassCreate
 0001:00001378      __ClassDestroy
 0001:0000B24B      __CurrExcContext
 0003:00000594      __DestructorCountPtr
 0001:0000D224      __DynamicCast(void*,void*,void*,void*,int)
 0001:0000D33E      __DynamicCastVCLptr(void*,void*) __fastcall
 0001:0000D30C      __DynamicCastVCLref(void*,void*) __fastcall
 0001:00016E30      __ErrorExit
 0001:00016D40      __ErrorMessage
 0001:00016EA8      __ErrorMessageHelper
 0003:00000B54      __ExcRegPtr
 0001:00008BE0      __ExceptInit
 0002:00001048      __ExceptVarsSize
 0001:0000A836      __ExceptionHandler
 0001:0000132B      __ExitVCL
 0001:00000046      __GetExceptDLLinfo
 0001:00008C03      __GetExceptDLLinfoInternal
 0001:00008BC1      __GetPolymorphicDTC(void*,unsigned int)
 0001:0000CF60      __GetTypeInfo(void*,void*,void*,void*)
 0001:00009A85      __Global_unwind
 0003:0000059C      __HandlerPtr
 0001:00008D8C      __InitDefaultHander
 0001:000012FC      __InitVCL
 0001:0000A246      __Local_unwind
 0001:0000A259      __Return_unwind
 0001:0000D4C0      __SetExceptionHandler
 0001:00008D40      __SetUserHandler
 0002:00004B18      __TLS_index
 0002:00000153      __TLS_index4
 0001:0000CE58      __ThrowExceptionName()
 0001:0000CE40      __ThrowFileName()
 0001:0000CE4C      __ThrowLineNumber()
 0001:0000D4D5      __UnsetExceptionHandler
 0001:0000D501      __UnwindException
 0003:000005A0      __UserHandlerPtr
 0002:0000015B      ___CPPdebugHook
 0002:00000F70      ___CPPexceptionList
 0001:00010014      ___DOSerror
 0001:00008C2C      ___DefHandler
 0001:00016E20      ___ErrorMessage
 0002:00000F94      ___ExceptStaticXbuff
 0001:0000FFC8      ___IOerror
 0001:00008DEF      ___JumpToCatch__
 0001:00010034      ___NTerror
 0001:000000F9      ___System__GetTls
 0001:0000A394      ____ExceptionHandler
 0001:00010110      ___access
 0001:00008AD9      ___call_terminate
 0001:00008B82      ___call_unexpected
 0001:00010150      ___close
 0002:00001070      ___debuggerDisableTerminateCallback
 0001:00008DA6      ___doGlobalUnwind
 0001:0000FFBC      ___doserrno
 0001:0000F740      ___eof
 0001:00016CD8      ___errno
 0002:00000F74      ___exceptFlags
 0002:00000F90      ___exceptMemAllocVars
 0002:00000F8C      ___exceptStaticBuffP
 0003:00000B68      ___exit_lock
 0001:0000D954      ___fputn
 0001:0000D8C0      ___getfp
 0001:00014A5C      ___int64toa
 0002:00000144      ___isDLL
 0002:0000014E      ___isGUI
 0001:000101B0      ___isatty
 0001:000101E0      ___isatty_osfhandle
 0001:00012D64      ___iswctype
 0001:00014E64      ___ldtrunc
 0002:00003C84      ___locale
 0001:00014F64      ___longtoa
 0001:000101F8      ___lseek
 0001:00016698      ___matherr
 0001:0000DE88      ___mkname
 0001:000146F2      ___nextreal
 0001:0001027C      ___open
 0001:0000D818      ___openfp
 0001:0000DC70      ___org__fgetc
 0001:0000FB94      ___org__fputc
 0001:0001506C      ___org__matherr
 0001:00015098      ___org__matherrl
 0001:00010090      ___org__read
 0001:00010048      ___org__rtl_read
 0001:000100AC      ___org__rtl_write
 0001:000100F4      ___org__write
 0001:0000D508      ___org_access
 0001:0001356D      ___org_acos
 0001:00013588      ___org_asin
 0001:000135A0      ___org_atan2
 0001:00016A38      ___org_calloc
 0001:0000D590      ___org_close
 0001:00013668      ___org_cos
 0001:00016A64      ___org_delete
 0001:00016A74      ___org_deletea
 0001:00014704      ___org_exp
 0001:0000D598      ___org_fclose
 0001:0000D638      ___org_fflush
 0001:0000FBB4      ___org_fgetc
 0001:0000D8EC      ___org_fopen
 0001:0000D920      ___org_fprintf
 0001:0000FBDC      ___org_fputc
 0001:00016BF8      ___org_free
 0001:0000DA30      ___org_fscanf
 0001:0000DAC8      ___org_fseek
 0001:0000DB3C      ___org_ftell
 0001:000186F0      ___org_getdate
 0001:0001871C      ___org_gettime
 0001:0000DBC8      ___org_isatty
 0001:00014FF4      ___org_itoa
 0001:00014B10      ___org_log
 0001:0000DE80      ___org_lseek
 0001:00016BE8      ___org_malloc
 0001:00012DBC      ___org_mblen
 0001:00012F78      ___org_mbstowcs
 0001:00012E38      ___org_mbtowc
 0001:00008290      ___org_memchr
 0001:00008518      ___org_memcmp
 0001:000082B0      ___org_memcpy
 0001:000082D4      ___org_memmove
 0001:00008320      ___org_memset
 0001:00016A98      ___org_new
 0001:00016ACC      ___org_newa
 0001:00014B80      ___org_pow
 0001:0000DF24      ___org_printf
 0001:00017778      ___org_raise
 0001:0000DF60      ___org_read
 0001:00016C08      ___org_realloc
 0001:0000DF68      ___org_scanf
 0001:0000E9AC      ___org_setvbuf
 0001:00014DB4      ___org_sin
 0001:0000EA34      ___org_sprintf
 0001:00014DF8      ___org_sqrt
 0001:000083C4      ___org_strcat
 0001:00008400      ___org_strcmp
 0001:0000844C      ___org_strlen
 0001:000084A8      ___org_strncat
 0001:00008584      ___org_strncpy
 0001:00015024      ___org_ultoa
 0001:0000ECB4      ___org_ungetc
 0001:0000EA58      ___org_vsprintf
 0001:000130E0      ___org_wcstombs
 0001:00012F04      ___org_wctomb
 0001:0000F6CC      ___org_write
 0003:000005A8      ___pCPPdebugHook
 0001:00009527      ___raiseDebuggerException
 0001:0000F844      ___read
 0001:000146EC      ___realcvt
 0001:0000E784      ___scantoint64
 0003:00000888      ___stderr_streambuf
 0003:00000880      ___stdin_streambuf
 0003:00000884      ___stdout_streambuf
 0002:00000F78      ___terminatePTR
 0002:00000F88      ___throwExceptionName
 0002:00000F80      ___throwFileName
 0002:00000F84      ___throwLineNumber
 0001:0000DEE0      ___tmpnam
 0002:00000F7C      ___unexpectdPTR
 0002:0000014D      ___useDynamicTLS
 0001:00014FD8      ___utoa
 0001:0000EDA4      ___vprinter
 0001:0000FA44      ___write
 0002:000041B4      ___xalloc
 0001:000160D8      ___xcvt
 0001:000163A8      ___xcvtw
 0004:00000008      ___xxInfo
 0001:00016F04      __abort
 0001:00000000      __acrtused
 0001:00017218      __addarg
 0001:0000D3F4      __adjustClassAdr(void*,tpid*,tpid*)
 0001:0000D510      __allocbuf
 0003:00000B6C      __argc
 0003:00000B30      __argv
 0002:00004334      __argv0
 0001:00016C78      __assert
 0002:000042AC      __atexitcnt
 0003:00000AB0      __atexittbl
 0001:00016FE0      __c_exit
 0001:00016FD0      __cexit
 0002:000032CC      __cfinfo_get
 0002:00003940      __chartype
 0001:000178D8      __cleanup
 0001:0000FC18      __cleanup_handle_locks
 0001:0000EC5C      __cleanup_stream_locks
 0001:00013654      __clear87
 0001:000146C4      __control87
 0001:00018618      __create_lock
 0001:00017824      __create_shmem
 0001:000153C4      __cvt_init
 0001:000156F8      __cvt_initw
 0002:00003F7C      __default87
 0003:00000B4C      __dll_table
 0002:00003328      __dosErrorToSV
 0001:0000FD48      __dup_handle
 0003:00000B48      __env_lock
 0003:00000B3C      __environ
 0003:00000B44      __envsize
 0003:00000B84      __exe_table
 0001:00016FB8      __exit
 0001:00008D78      __exit_except
 0001:0000EB40      __exit_streams
 0001:00018440      __exit_tls
 0001:00017188      __exitargv
 0002:000042B0      __exitbuf
 0002:000042B4      __exitfopen
 0002:000042B8      __exitopen
 0001:00017378      __expandblock
 0002:000042C0      __expandptr
 0001:00014770      __f87_ArcTan
 0001:000148EC      __f87_Cosine
 0001:000147DD      __f87_Exp
 0001:000147D5      __f87_Exp10
 0001:000147D0      __f87_Exp2
 0001:000148A8      __f87_Log
 0001:000148A4      __f87_Log10
 0001:000148A0      __f87_Log2
 0001:000148E8      __f87_Sine
 0001:000148F0      __f87_Tangent
 0001:0000DC70      __fgetc
 0002:00003FC0      __floatconvert
 0001:0000FB50      __flushall
 0001:0000D6C8      __flushout
 0002:00002CF0      __fmode
 0002:00002CF4      __fmodeptr
 0001:000149DC      __fpreset
 0001:0000FB94      __fputc
 0001:0000FDB0      __free_handle
 0001:00016C2C      __free_heaps
 0001:000149F4      __fuildq
 0001:00014A24      __fuistq
 0001:00014A48      __fxam
 0001:00000053      __getHInstance
 0001:00012BC0      __getLocaleEra
 0001:00012A0C      __getLocaleMonetaryInfo
 0001:00012B60      __getLocaleMonetaryNegFmt
 0001:00012B6C      __getLocaleNumericInfo
 0001:000126D8      __getLocaleTimeInfo
 0001:0000FD08      __get_handle
 0002:00000157      __hInstance
 0003:00000680      __handles
 0002:00003F84      __huge_dble
 0002:00003F80      __huge_flt
 0002:00003F8C      __huge_ldble
 0002:00003FAC      __indefinite
 0001:000169B0      __initMBCSTable
 0001:00008D60      __init_except
 0001:0001782C      __init_exit_proc
 0001:0000FE68      __init_handles
 0001:0000EA7C      __init_streams
 0001:000183D8      __init_tls
 0001:0000D72C      __initfmode
 0001:000150C8      __initmatherr
 0001:00016FF0      __initwild
 0001:0000CD31      __isCompatTypeID(tpid*,tpid*,int,tpid**)
 0001:0000004B      __isDLL
 0001:0000CAFF      __isSameTypeID(tpid*,tpid*)
 0003:00000B90      __isWindows
 0001:000169C0      __ismbcspace
 0002:0000416C      __kalpha
 0002:0000416E      __kpunct
 0001:0000DC88      __lgetc
 0001:000132A7      __lldiv
 0001:00013368      __llmod
 0001:00013284      __llmul
 0001:00013430      __llshl
 0001:0001344C      __llshr
 0001:0001331F      __lludiv
 0001:000133E2      __llumod
 0001:00013468      __llushr
 0001:0000FC08      __lock_all_handles
 0001:0000EB98      __lock_all_streams
 0001:00017324      __lock_env
 0001:0001869C      __lock_error
 0001:00017950      __lock_exit
 0001:0000FC4C      __lock_handle
 0001:0001867C      __lock_nt
 0001:0000EBB8      __lock_stream
 0001:0000DD70      __lputc
 0001:00015044      __ltoa
 0001:0001506C      __matherr
 0001:00015098      __matherrl
 0002:00003FCC      __mathwhy
 0002:00003F9A      __max_dble
 0002:00003F96      __max_flt
 0002:00003FA2      __max_ldble
 0003:00000990      __mbcsCodePage
 0003:0000088C      __mbctype
 0001:000169E0      __mbsrchr
 0002:0000425C      __messagefile
 0003:00000994      __new_handler
 0002:00003EB0      __nextrealptr
 0002:00003F18      __nextrealwptr
 0002:00002C24      __nfile
 0002:000032D0      __notUmask
 0002:00002C28      __openfd
 0003:00000B60      __oscmd
 0003:00000B58      __osenv
 0003:000005B8      __pidtab
 0002:00003FC4      __pmatherr
 0002:00003FC8      __pmatherrl
 0001:00016748      __pow10
 0001:00014D5C      __qdiv10
 0001:00014D84      __qmul10
 0001:00010090      __read
 0002:00003EAC      __realcvtptr
 0002:00003F14      __realcvtwptr
 0001:00001398      __roundToInt64
 0001:00010048      __rtl_read
 0001:000100AC      __rtl_write
 0001:00015BDC      __scan_init
 0001:000160C0      __scan_initw
 0001:0000DFA8      __scanner
 0001:000146FE      __scanrslt
 0002:00003EB8      __scanrsltptr
 0001:000146F8      __scantod
 0002:00003EB4      __scantodptr
 0002:00003F20      __scanwrsltptr
 0002:00003F1C      __scanwtodptr
 0001:00016FF4      __setargv
 0002:000042BC      __setargv__
 0002:00004354      __setenvp__
 0001:00008D14      __setexc
 0001:000168C0      __setmbcp
 0001:00017984      __startup
 0003:00000B8C      __stkbase
 0002:0000105C      __stkchk
 0003:00000B94      __stkindex
 0001:000085D4      __stpcpy
 0002:00002774      __streams
 0002:00002D04      __sys_errlist
 0002:00002DC8      __sys_nerr
 0001:00017814      __terminate
 0001:00018754      __thread_buf
 0001:00018458      __thread_data
 0001:0001851C      __thread_data_del
 0001:00018484      __thread_data_new
 0002:00003FB0      __tiny_ldble
 0003:00000B98      __tlsindex
 0001:0000D4A4      __tpdsc__[Bad_cast]
 0001:0000D488      __tpdsc__[Bad_typeid]
 0001:00002638      __tpdsc__[System::AnsiString*]
 0001:000025E8      __tpdsc__[System::AnsiString]
 0001:0000C584      __tpdsc__[System::TObject]
 0001:0000C000      __tpdsc__[Sysutils::EAccessViolation&]
 0001:0000BD84      __tpdsc__[Sysutils::EAccessViolation*]
 0001:0000C520      __tpdsc__[Sysutils::EAccessViolation]
 0001:0000BFB8      __tpdsc__[Sysutils::EControlC&]
 0001:0000BCD0      __tpdsc__[Sysutils::EControlC*]
 0001:0000C630      __tpdsc__[Sysutils::EControlC]
 0001:0000C108      __tpdsc__[Sysutils::EDivByZero&]
 0001:0000BF48      __tpdsc__[Sysutils::EDivByZero*]
 0001:0000C284      __tpdsc__[Sysutils::EDivByZero]
 0001:0000BC84      __tpdsc__[Sysutils::EIntError*]
 0001:0000BEEC      __tpdsc__[Sysutils::EIntError]
 0001:0000C0BC      __tpdsc__[Sysutils::EIntOverflow&]
 0001:0000BEA0      __tpdsc__[Sysutils::EIntOverflow*]
 0001:0000C344      __tpdsc__[Sysutils::EIntOverflow]
 0001:0000C098      __tpdsc__[Sysutils::EInvalidOp&]
 0001:0000BE7C      __tpdsc__[Sysutils::EInvalidOp*]
 0001:0000C3A4      __tpdsc__[Sysutils::EInvalidOp]
 0001:0000BC60      __tpdsc__[Sysutils::EMathError*]
 0001:0000BE1C      __tpdsc__[Sysutils::EMathError]
 0001:0000C050      __tpdsc__[Sysutils::EOverflow&]
 0001:0000BDD4      __tpdsc__[Sysutils::EOverflow*]
 0001:0000C464      __tpdsc__[Sysutils::EOverflow]
 0001:0000BFDC      __tpdsc__[Sysutils::EPrivilege&]
 0001:0000BCF4      __tpdsc__[Sysutils::EPrivilege*]
 0001:0000C5D0      __tpdsc__[Sysutils::EPrivilege]
 0001:0000C0E4      __tpdsc__[Sysutils::ERangeError&]
 0001:0000BEC8      __tpdsc__[Sysutils::ERangeError*]
 0001:0000C2E4      __tpdsc__[Sysutils::ERangeError]
 0001:0000BF90      __tpdsc__[Sysutils::EStackOverflow&]
 0001:0000BCA8      __tpdsc__[Sysutils::EStackOverflow*]
 0001:0000C68C      __tpdsc__[Sysutils::EStackOverflow]
 0001:0000C02C      __tpdsc__[Sysutils::EUnderflow&]
 0001:0000BDB0      __tpdsc__[Sysutils::EUnderflow*]
 0001:0000C4C0      __tpdsc__[Sysutils::EUnderflow]
 0001:0000C074      __tpdsc__[Sysutils::EZeroDivide&]
 0001:0000BDF8      __tpdsc__[Sysutils::EZeroDivide*]
 0001:0000C404      __tpdsc__[Sysutils::EZeroDivide]
 0001:0000BF6C      __tpdsc__[Sysutils::Exception*]
 0001:0000BD18      __tpdsc__[Sysutils::Exception]
 0001:00017CAC      __tpdsc__[TReference]
 0001:00017BF4      __tpdsc__[TStringRef*]
 0001:00017C10      __tpdsc__[TStringRef]
 0001:0001084C      __tpdsc__[filebuf*]
 0001:00010ABC      __tpdsc__[filebuf]
 0001:00012510      __tpdsc__[ios*]
 0001:000109E4      __tpdsc__[ios]
 0001:000111F0      __tpdsc__[istream*]
 0001:00010A24      __tpdsc__[istream]
 0001:00010864      __tpdsc__[istream_withassign*]
 0001:000108C4      __tpdsc__[istream_withassign]
 0001:00011C28      __tpdsc__[ostream*]
 0001:00010994      __tpdsc__[ostream]
 0001:00010888      __tpdsc__[ostream_withassign*]
 0001:0001092C      __tpdsc__[ostream_withassign]
 0001:000108AC      __tpdsc__[streambuf*]
 0001:00010A74      __tpdsc__[streambuf]
 0001:00008A24      __tpdsc__[string*]
 0001:00017B98      __tpdsc__[string::lengtherror]
 0001:000182F8      __tpdsc__[string::outofrange]
 0001:00008A3C      __tpdsc__[string]
 0001:0000D470      __tpdsc__[typeinfo*]
 0001:0000C23C      __tpdsc__[typeinfo]
 0001:0000870C      __tpdsc__[xalloc*]
 0001:00008724      __tpdsc__[xalloc] const
 0001:00008A10      __tpdsc__[xmsg*]
 0001:00008800      __tpdsc__[xmsg] const
 0002:00003FBC      __turboFloat
 0001:0000CAC8      __typeIDname(tpid*)
 0001:0001047C      __unlink
 0001:0000FC3C      __unlock_all_handles
 0001:0000EBA8      __unlock_all_streams
 0001:00017334      __unlock_env
 0001:00017960      __unlock_exit
 0001:0000FCE0      __unlock_handle
 0001:0001868C      __unlock_nt
 0001:0000EC80      __unlock_stream
 0001:00008D30      __unsetexc
 0001:00008D54      __unsetuserhandler
 0003:00000B7C      __wC0argv
 0003:00000B80      __wC0environ
 0001:000083AC      __wmemset
 0003:00000B64      __woscmd
 0003:00000B5C      __wosenv
 0001:000100F4      __write
 0001:0000F6D4      __xfclose
 0001:0000F70C      __xfflush
 0001:00016F18      _abort
 0001:0000D508      _access
 0001:0001356D      _acos
 0001:00013588      _asin
 0001:000135A0      _atan2
 0001:00016A38      _calloc
 0003:000007F0      _cerr
 0003:0000075C      _cin
 0003:00000838      _clog
 0001:0000D590      _close
 0001:00013668      _cos
 0003:000007A8      _cout
 0001:00016FA0      _exit
 0001:00014704      _exp
 0003:00000010      _f
 0001:000149CC      _fabs
 0001:0000D598      _fclose
 0001:0000D638      _fflush
 0001:0000FBB4      _fgetc
 0001:0000D8EC      _fopen
 0001:0000D920      _fprintf
 0001:0000FBDC      _fputc
 0001:00016BF8      _free
 0001:0000DA30      _fscanf
 0001:0000DAC8      _fseek
 0003:00000014      _ft
 0001:0000DB3C      _ftell
 0001:000186F0      _getdate
 0001:0001871C      _gettime
 0001:0000DBC8      _isatty
 0001:00012C60      _iswalnum
 0001:00012C8C      _iswalpha
 0001:00012C78      _iswascii
 0001:00012CA4      _iswcntrl
 0001:00012CB8      _iswdigit
 0001:00012CCC      _iswgraph
 0001:00012CE4      _iswlower
 0001:00012CF8      _iswprint
 0001:00012D10      _iswpunct
 0001:00012D24      _iswspace
 0001:00012D38      _iswupper
 0001:00012D4C      _iswxdigit
 0001:00014FF4      _itoa
 0001:00014B10      _log
 0001:0000DE80      _lseek
 0003:00000000      _m1
 0003:00000004      _m2
 0001:00001174      _main
 0001:00016BE8      _malloc
 0001:00012DBC      _mblen
 0001:00012F78      _mbstowcs
 0001:00012E38      _mbtowc
 0001:00008290      _memchr
 0001:00008518      _memcmp
 0001:000082B0      _memcpy
 0001:000082D4      _memmove
 0001:00008320      _memset
 0001:00014B80      _pow
 0001:0000DF24      _printf
 0001:00017778      _raise
 0001:0000DF60      _read
 0001:00016C08      _realloc
 0003:0000000C      _s
 0001:0000DF68      _scanf
 0001:0000E9AC      _setvbuf
 0001:000176C4      _signal
 0001:00014DB4      _sin
 0001:0000EA34      _sprintf
 0001:00014DF8      _sqrt
 0001:000083C4      _strcat
 0001:00008400      _strcmp
 0001:0000844C      _strlen
 0001:000084A8      _strncat
 0001:00008584      _strncpy
 0003:00000008      _tisk
 0001:00015024      _ultoa
 0001:0000ECB4      _ungetc
 0001:0000EA58      _vsprintf
 0001:00008624      _wcscpy
 0001:0000860C      _wcslen
 0001:000130E0      _wcstombs
 0001:00012F04      _wctomb
 0001:0000F6CC      _write
 0001:000136AC      abs(const complex&)
 0001:00013940      acos(const complex&)
 0001:00013A6C      arg(const complex&)
 0001:00013AC4      asin(const complex&)
 0001:00013BF4      atan(const complex&)
 0001:00001180      complex::complex()
 0001:000011A4      complex::complex(double,double)
 0001:000136E4      complex::operator *=(const complex&)
 0001:000011E4      complex::operator -()
 0001:00013790      complex::operator /=(const complex&)
 0001:00013CC8      cos(const complex&)
 0001:00013D5C      cosh(const complex&)
 0001:00000B62      ctifft(const char*,complex**)
 0001:000009EA      ctisignal(const char*,double**)
 0001:00013DF0      exp(const complex&)
 0001:00000218      fft2(double**,complex**,int,int)
 0002:00003668      filebuf::
 0001:00010B0C      filebuf::close()
 0001:00010B7C      filebuf::filebuf(int)
 0001:000126B0      filebuf::lock()
 0002:000036CC      filebuf::openprot
 0001:00010CA8      filebuf::overflow(int)
 0001:00010E08      filebuf::seekoff(long,ios::seek_dir)
 0001:00010D90      filebuf::setbuf(char*,int)
 0001:00010F08      filebuf::sync()
 0001:00011014      filebuf::underflow()
 0001:000126C4      filebuf::unlock()
 0001:00010C28      filebuf::~filebuf()
 0001:00000EF9      fmain()
 0001:000012F0      imag(const complex&)
 0001:00008DBB      invokeHnd()
 0002:000038EC      ios::
 0002:00003930      ios::adjustfield
 0002:0000392C      ios::basefield
 0001:00012494      ios::clear(int)
 0002:00003934      ios::floatfield
 0001:0001259C      ios::init(streambuf*)
 0001:000124D0      ios::ios()
 0002:00003938      ios::nextbit
 0001:000125E4      ios::setf(long)
 0001:0001263C      ios::setstate(int)
 0001:00012668      ios::tie(ostream*)
 0002:0000393C      ios::usercount
 0001:00012524      ios::~ios()
 0002:000036F4      istream::
 0001:00011208      istream::
 0001:00011290      istream::do_get()
 0001:0001146C      istream::eatwhite()
 0001:000119FC      istream::get(char&)
 0001:00011A84      istream::get(char*,int,char)
 0001:000112E0      istream::ipfx(int)
 0001:0001117C      istream::istream()
 0001:0001198C      istream::operator >>(char&)
 0001:000114D0      istream::operator >>(double&)
 0001:00011B34      istream::putback(char)
 0001:00011370      istream::~istream()
 0002:00003734      istream_withassign::
 0001:00011284      istream_withassign::
 0001:00011214      istream_withassign::istream_withassign()
 0001:00011160      istream_withassign::operator =(streambuf*)
 0001:000113E4      istream_withassign::~istream_withassign()
 0001:00008DA0      jump()
 0001:00000EDC      konec(int)
 0001:00013E68      log(const complex&)
 0001:00013EB8      log10(const complex&)
 0001:000136D0      norm(const complex&)
 0001:0001372C      operator *(const complex&,const complex&)
 0001:00001214      operator *(const complex&,double)
 0001:000012AC      operator +(const complex&,const complex&)
 0001:00001274      operator -(const complex&,const complex&)
 0001:000137FC      operator /(const complex&,const complex&)
 0001:00001244      operator /(const complex&,double)
 0001:0001388C      operator /(double,const complex&)
 0001:00014534      operator <<(ostream&,const complex&)
 0001:0001459C      operator >>(istream&,complex&)
 0001:00016A64      operator delete(void*)
 0001:00016A74      operator delete[](void*)
 0001:00016A98      operator new(unsigned int)
 0001:00016ACC      operator new[](unsigned int)
 0002:000037BC      ostream::
 0001:00011C40      ostream::
 0001:00011E7C      ostream::do_opfx()
 0001:00011EA4      ostream::do_osfx()
 0001:00011E54      ostream::flush()
 0001:00011DE0      ostream::operator <<(double)
 0001:00011BC4      ostream::ostream()
 0001:00011EE4      ostream::outstr(const char*,const char*)
 0001:00011CC8      ostream::~ostream()
 0002:000037FC      ostream_withassign::
 0001:00011CBC      ostream_withassign::
 0001:00011BA0      ostream_withassign::operator =(streambuf*)
 0001:00011C4C      ostream_withassign::ostream_withassign()
 0001:00011D58      ostream_withassign::~ostream_withassign()
 0001:00000C7E      pisfft(const char*,complex**)
 0001:00000A6A      pissignal(const char*,double**)
 0001:00014118      pow(const complex&,const complex&)
 0001:00013F14      pow(const complex&,double)
 0001:00013FFC      pow(double,const complex&)
 0001:000012E4      real(const complex&)
 0001:00016A84      set_new_handler(void(*)())
 0001:00008AB1      set_terminate(void(*)())
 0001:00008B5A      set_unexpected(void(*)())
 0001:000141C0      sin(const complex&)
 0001:00014258      sinh(const complex&)
 0001:000142EC      sqrt(const complex&)
 0002:00003888      streambuf::
 0001:000121C0      streambuf::do_sgetn(char*,int)
 0001:000121A0      streambuf::do_snextc()
 0001:00012238      streambuf::do_sputn(const char*,int)
 0001:000120D4      streambuf::doallocate()
 0001:00012190      streambuf::lock()
 0001:000122DC      streambuf::overflow(int)
 0001:000122E4      streambuf::pbackfail(int)
 0001:000123D4      streambuf::seekoff(long,ios::seek_dir)
 0001:000123DC      streambuf::seekpos(long,int)
 0001:00012310      streambuf::setb(char*,char*,int)
 0001:000122EC      streambuf::setbuf(char*,int)
 0001:00012378      streambuf::setg(char*,char*,char*)
 0001:000123AC      streambuf::setp(char*,char*)
 0001:000123F8      streambuf::sputn(const char*,int)
 0001:0001210C      streambuf::streambuf()
 0001:0001243C      streambuf::sync()
 0001:00012474      streambuf::underflow()
 0001:00012198      streambuf::unlock()
 0001:000122A8      streambuf::~streambuf()
 0001:00017D34      string::assert_element(unsigned int) const
 0001:00017DD4      string::assert_index(unsigned int) const
 0002:00004660      string::case_sensitive
 0002:00004674      string::freeboard
 0002:0000466C      string::initial_capac
 0001:000182AC      string::initial_capacity(unsigned int)
 0001:00017C64      string::lengtherror::~lengtherror()
 0001:000182E4      string::max_waste(unsigned int)
 0001:00018354      string::outofrange::outofrange(const string::outofrange&)
 0001:00018390      string::outofrange::~outofrange()
 0002:00004664      string::paranoid_check
 0002:00004670      string::resize_inc
 0001:000182C0      string::resize_increment(unsigned int)
 0001:00018270      string::set_case_sensitive(int)
 0001:00018284      string::set_paranoid_check(int)
 0002:00004668      string::skip_white
 0001:00018298      string::skip_whitespace(int)
 0001:00017B20      string::string(const char*)
 0001:00017AEC      string::string(const string&)
 0001:00017CE0      string::~string()
 0001:00000E4A      sumerr()
 0001:00014374      tan(const complex&)
 0001:00014468      tanh(const complex&)
 0001:00008AAB      terminate()
 0002:00002458      typeinfo::
 0001:0000CF06      typeinfo::before(const typeinfo&) const
 0001:0000CF4F      typeinfo::name() const
 0001:0000CEE6      typeinfo::operator !=(const typeinfo&) const
 0001:0000CE9C      typeinfo::operator =(const typeinfo&)
 0001:0000CEC3      typeinfo::operator ==(const typeinfo&) const
 0001:0000CE64      typeinfo::typeinfo(const typeinfo&)
 0001:0000CEA4      typeinfo::~typeinfo()
 0001:00008B54      unexpected()
 0001:000086A8      xalloc::raise()
 0001:00008664      xalloc::xalloc(const string&,unsigned int)
 0001:00008774      xalloc::xalloc(const xalloc&)
 0001:000087B8      xalloc::~xalloc()
 0001:000089A0      xmsg::operator =(const xmsg&)
 0001:0000894C      xmsg::raise()
 0001:00008844      xmsg::xmsg(const string&)
 0001:000088A4      xmsg::xmsg(const xmsg&)
 0001:00008908      xmsg::~xmsg()

  Address         Publics by Value

 0001:00000000      __acrtused
 0001:00000000      @C1486_0
 0001:00000046      __GetExceptDLLinfo
 0001:0000004B      __isDLL
 0001:00000053      __getHInstance
 0001:000000F9      System::::GetTls() __fastcall
 0001:000000F9      ___System__GetTls
 0001:00000108      @C1487_0
 0001:00000108      Alloc_2D(long,long)
 0001:00000177      Dealloc_2D(double**,long,long)
 0001:00000190      CplxAlloc_2D(long,long)
 0001:000001FF      CplxDealloc_2D(complex**,long,long)
 0001:00000218      fft2(double**,complex**,int,int)
 0001:000009EA      ctisignal(const char*,double**)
 0001:00000A6A      pissignal(const char*,double**)
 0001:00000B62      ctifft(const char*,complex**)
 0001:00000C7E      pisfft(const char*,complex**)
 0001:00000E4A      sumerr()
 0001:00000EDC      konec(int)
 0001:00000EF9      fmain()
 0001:00001174      _main
 0001:00001180      complex::complex()
 0001:000011A4      complex::complex(double,double)
 0001:000011E4      complex::operator -()
 0001:00001214      operator *(const complex&,double)
 0001:00001244      operator /(const complex&,double)
 0001:00001274      operator -(const complex&,const complex&)
 0001:000012AC      operator +(const complex&,const complex&)
 0001:000012E4      real(const complex&)
 0001:000012F0      imag(const complex&)
 0001:000012FC      @C10_0
 0001:000012FC      __InitVCL
 0001:0000132B      __ExitVCL
 0001:00001338      @$xp$14System@TObject
 0001:00001358      System::TObject::~TObject() __fastcall
 0001:00001370      __ClassCreate
 0001:00001370      @C19_0
 0001:00001378      __ClassDestroy
 0001:0000137D      __AfterConstruction
 0001:00001385      __BeforeDestruction
 0001:00001398      __roundToInt64
 0001:000013A8      System::AnsiString::AnsiString(const char*) __fastcall
 0001:000013A8      @C72_0
 0001:000013DF      System::AnsiString::AnsiString(const System::AnsiString&) __fastcall
 0001:00001418      System::AnsiString::AnsiString(const char*,unsigned char) __fastcall
 0001:00001455      System::AnsiString::AnsiString(const wchar_t*) __fastcall
 0001:000014EC      System::AnsiString::AnsiString(char) __fastcall
 0001:00001535      System::AnsiString::AnsiString(int) __fastcall
 0001:0000159C      System::AnsiString::AnsiString(double) __fastcall
 0001:00001608      System::AnsiString::~AnsiString() __fastcall
 0001:00001637      System::AnsiString::operator =(const System::AnsiString&) __fastcall
 0001:0000164B      System::AnsiString::operator +=(const System::AnsiString&) __fastcall
 0001:0000165F      System::AnsiString::operator +(const System::AnsiString&) const __fastcall
 0001:000016E8      System::AnsiString::operator ==(const System::AnsiString&) const __fastcall
 0001:000016FE      System::AnsiString::operator !=(const System::AnsiString&) const __fastcall
 0001:00001714      System::AnsiString::operator <(const System::AnsiString&) const __fastcall
 0001:0000172A      System::AnsiString::operator >(const System::AnsiString&) const __fastcall
 0001:00001740      System::AnsiString::operator <=(const System::AnsiString&) const __fastcall
 0001:00001760      System::AnsiString::operator >=(const System::AnsiString&) const __fastcall
 0001:00001780      System::AnsiString::AnsiCompare(const System::AnsiString&) const __fastcall
 0001:000017F1      System::AnsiString::AnsiCompareIC(const System::AnsiString&) const __fastcall
 0001:00001862      System::AnsiString::Length() const __fastcall
 0001:00001870      System::AnsiString::IsEmpty() const __fastcall
 0001:0000187F      System::AnsiString::StringOfChar(char,int) __fastcall
 0001:0000191C      System::AnsiString::LoadStr(int) __fastcall
 0001:00001987      System::AnsiString::FmtLoadStr(int,const System::TVarRec*) __fastcall
 0001:000019FE      System::AnsiString::Format(const System::AnsiString&,const System::TVarRec) __fastcall
 0001:00001A92      System::AnsiString::FormatFloat(const System::AnsiString&,const long double) __fastcall
 0001:00001B28      System::AnsiString::FloatToStrF(long double,System::AnsiString::TStringFloatFormat) __fastcall
 0001:00001BAA      System::AnsiString::IntToHex(int,int) __fastcall
 0001:00001C1B      System::AnsiString::CurrToStr(System::Currency) __fastcall
 0001:00001C88      System::AnsiString::CurrToStrF(System::Currency,System) __fastcall
 0001:00001D01      System::AnsiString::WideCharBufSize() const __fastcall
 0001:00001D24      System::AnsiString::WideChar(wchar_t*,int) const __fastcall
 0001:00001D4B      System::AnsiString::Unique() __fastcall
 0001:00001D55      System::AnsiString::Insert(const System::AnsiString&) __fastcall
 0001:00001D7A      System::AnsiString::Delete(int,int) __fastcall
 0001:00001D9D      System::AnsiString::SetLength(int) __fastcall
 0001:00001DBA      System::AnsiString::Pos(const System::AnsiString&) const __fastcall
 0001:00001DDB      System::AnsiString::LowerCase() const __fastcall
 0001:00001E63      System::AnsiString::UpperCase() const __fastcall
 0001:00001EEB      System::AnsiString::Trim() const __fastcall
 0001:00001F73      System::AnsiString::TrimLeft() const __fastcall
 0001:00001FFB      System::AnsiString::TrimRight() const __fastcall
 0001:00002083      System::AnsiString::SubString(int,int) const __fastcall
 0001:00002110      System::AnsiString::ToInt() const __fastcall
 0001:0000215D      System::AnsiString::ToIntDef(int) const __fastcall
 0001:000021B0      System::AnsiString::ToDouble() const __fastcall
 0001:00002201      System::AnsiString::IsDelimiter(const System::AnsiString&) const __fastcall
 0001:00002278      System::AnsiString::AnsiPos(const System::AnsiString&) const __fastcall
 0001:000022E9      System::AnsiString::IsPathDelimiter(int) const __fastcall
 0001:0000233C      System::AnsiString::LastDelimiter(const System::AnsiString&) const __fastcall
 0001:000023AD      System::AnsiString::ByteType(int) const __fastcall
 0001:00002400      System::AnsiString::IsLeadByte(int) const __fastcall
 0001:0000241D      System::AnsiString::IsTrailByte(int) const __fastcall
 0001:0000243C      System::AnsiString::AnsiLastChar() const __fastcall
 0001:00002489      System::operator +(const char*,const System::AnsiString&) __fastcall
 0001:00002511      System::operator >>(istream&,System::AnsiString&)
 0001:000025E8      __tpdsc__[System::AnsiString]
 0001:00002638      __tpdsc__[System::AnsiString*]
 0001:0000265C      @C130_0
 0001:00002859      System::::Assign(void*&,System::SmallString<255>&) __fastcall
 0001:000028AF      System::::_Flush(void*&) __fastcall
 0001:000028D4      System::::Flush(void*&) __fastcall
 0001:00002974      System::::FSafeDivideR() __fastcall
 0001:00002976      System::::FSafeDivide() __fastcall
 0001:00002B84      System::::Halt0() __fastcall
 0001:00002B88      System::::Halt() __fastcall
 0001:00002B95      System::::Run0Error() __fastcall
 0001:00002B99      System::::RunError() __fastcall
 0001:00002BA4      System::::ReadString() __fastcall
 0001:00002BAF      System::::ReadCString() __fastcall
 0001:00002C77      System::::ResetText(void*&) __fastcall
 0001:00002C7E      System::::RewritText(void*&) __fastcall
 0001:00002C85      System::::Append() __fastcall
 0001:00002D8D      System::::ResetFile() __fastcall
 0001:00002DA4      System::::RewritFile() __fastcall
 0001:00002E68      System::::Write0String() __fastcall
 0001:00002E72      System::::WriteString() __fastcall
 0001:00002E8F      System::::WriteLn() __fastcall
 0001:00002EA3      System::::Write0Char() __fastcall
 0001:00002EF5      System::::WriteChar() __fastcall
 0001:00002F0C      System::::Write0CString() __fastcall
 0001:00002F10      System::::WriteCString() __fastcall
 0001:00002F5C      System::::Str0Ext() __fastcall
 0001:00002F68      System::::Str1Ext() __fastcall
 0001:00002F6F      System::::Str2Ext() __fastcall
 0001:000031C4      System::::Pow10() __fastcall
 0001:000031C4      System::FPower10() __fastcall
 0001:00003498      @C130_4
 0001:00003498      System::initialization() __fastcall
 0001:00003558      @$xp$13System@String
 0001:00003560      System::TextStart() __fastcall
 0001:00003564      System::_16414
 0001:000035B4      System::_16415
 0001:000035BC      System::_16416
 0001:000035EC      System::_16417
 0001:00003604      System::_16418
 0001:00003678      System::_16419
 0001:00003708      System::_16420
 0001:0000376C      System::_16421
 0001:000037E4      System::_16422
 0001:0000389C      System::_16423
 0001:00003930      System::_16424
 0001:000039B0      System::_16425
 0001:00003A40      System::_16426
 0001:00003B64      System::_16427
 0001:00003BF0      System::_16428
 0001:00003CB4      System::_16429
 0001:00003D98      System::_16430
 0001:00003DEC      System::_16431
 0001:00003E1C      System::_16432
 0001:00003E4C      System::_16433
 0001:00003E70      System::_16434
 0001:00003E98      System::_16435
 0001:00003F08      System::_16436
 0001:00003F40      System::_16437
 0001:00003FD8      System::_16438
 0001:00004058      System::_16439
 0001:000040A4      System::_16440
 0001:00004130      System::_16441
 0001:0000415C      System::_16442
 0001:00004190      System::_16443
 0001:000041B8      System::_16444
 0001:000042AC      System::SysGetMem(int) __fastcall
 0001:00004434      System::SysFreeMem(void*) __fastcall
 0001:000045D8      System::_16447
 0001:000047A8      System::SysReallocMem(void*,int) __fastcall
 0001:0000486C      System::::GetMem() __fastcall
 0001:00004884      System::::FreeMem() __fastcall
 0001:0000489C      System::::ReallocMem() __fastcall
 0001:000048EC      System::_16457
 0001:0000492C      System::::_IOTest() __fastcall
 0001:0000494C      System::_16459
 0001:0000495C      System::_16460
 0001:00004968      System::Move(const void*,void*,int) __fastcall
 0001:000049A8      System::::ValLong() __fastcall
 0001:00004A74      System::_16525
 0001:00004A80      System::TObject::ClassName(System::TMetaClass*) __fastcall
 0001:00004A94      System::TObject::NewInstance(System::TMetaClass*) __fastcall
 0001:00004ABC      System::TObject::FreeInstance() __fastcall
 0001:00004AE0      System::TObject::Free() __fastcall
 0001:00004AEC      System::::IsClass() __fastcall
 0001:00004B04      System::_16542
 0001:00004B30      System::TObject::DefaultHandler(void*) __fastcall
 0001:00004B34      System::TObject::AfterConstruction() __fastcall
 0001:00004B38      System::TObject::BeforeDestruction() __fastcall
 0001:00004B3C      System::TObject::Dispatch(void*) __fastcall
 0001:00004B64      System::::ClassCreate() __fastcall
 0001:00004BA4      System::::ClassDestroy() __fastcall
 0001:00004BAC      System::::AfterConstruction() __fastcall
 0001:00004BB4      System::::BeforeDestruction() __fastcall
 0001:00004BC4      System::_16560
 0001:00004BE0      System::_16561
 0001:00004C00      System::_16562
 0001:00004C14      System::_16564
 0001:00004C28      System::_16565
 0001:00004C48      System::_16566
 0001:00004C70      System::::HandleAnyException() __fastcall
 0001:00004D40      System::::HandleFinally() __fastcall
 0001:00004D78      System::::RaiseExcept() __fastcall
 0001:00004D94      System::::RaiseAgain() __fastcall
 0001:00004DE8      System::::TryFinallyExit() __fastcall
 0001:00004E00      System::_16581
 0001:00004E28      System::::LStrClr() __fastcall
 0001:00004E48      System::::LStrArrayClr() __fastcall
 0001:00004E78      System::::LStrAsg() __fastcall
 0001:00004EBC      System::::LStrLAsg() __fastcall
 0001:00004EE4      System::::NewAnsiString() __fastcall
 0001:00004F08      System::::LStrFromLenStr() __fastcall
 0001:00004F38      System::::LStrFromChar() __fastcall
 0001:00004F48      System::::LStrFromPChar() __fastcall
 0001:00004F78      System::::LStrFromArray() __fastcall
 0001:00004F90      System::::LStrLen() __fastcall
 0001:00004F98      System::::LStrCat() __fastcall
 0001:00004FDC      System::::LStrCat3() __fastcall
 0001:00005050      System::::LStrCatN() __fastcall
 0001:000050A0      System::::LStrCmp() __fastcall
 0001:00005144      System::::LStrToPChar() __fastcall
 0001:00005150      System::UniqueString(System::AnsiString&) __fastcall
 0001:00005184      System::::LStrCopy() __fastcall
 0001:000051C4      System::::LStrDelete() __fastcall
 0001:0000520C      System::::LStrInsert() __fastcall
 0001:00005268      System::::LStrPos() __fastcall
 0001:000052B0      System::::LStrSetLength() __fastcall
 0001:00005314      System::::FinalizeRecord() __fastcall
 0001:0000533C      System::::FinalizeArray() __fastcall
 0001:000053C4      System::::Finalize() __fastcall
 0001:000053D0      System::WideCharLenToStrVar(wchar_t*,int,System::AnsiString&) __fastcall
 0001:0000545C      System::OleStrToStrVar(wchar_t*,System::AnsiString&) __fastcall
 0001:00005478      System::StringToOleStr(const System::AnsiString) __fastcall
 0001:000054FC      System::_16646
 0001:00005504      System::_16647
 0001:0000550C      System::VarClear(System::Variant&) __fastcall
 0001:00005540      System::VarCopy(System::Variant&,const System::Variant) __fastcall
 0001:000055B4      System::_16651
 0001:00005624      System::_16652
 0001:00005654      System::_16653
 0001:00005674      System::VarCast(System::Variant&,const System::Variant) __fastcall
 0001:00005764      System::::VarToLStr(System::AnsiString&,const System::Variant) __fastcall
 0001:000057A0      System::::VarClr() __fastcall
 0001:000057A8      System::VclInit(bool,long,bool)
 0001:000057DC      System::VclExit()
 0001:000057F8      System::GetMemory(int)
 0001:00005808      System::FreeMemory(void*)
 0001:00005820      System::ReallocMemory(void*,int)
 0001:00005830      System::::Close() __fastcall
 0001:0000586C      System::::ReadChar() __fastcall
 0001:000058E0      @C131_0
 0001:00005902      Sysutils::FloatToText(char*,const void*,Sysutils::TFloatValue,S,...
 0001:00005BCB      Sysutils::FloatToTextFmt(char*,const void*,Sysutils::TFloatValue,...
 0001:00005E9E      Sysutils::FloatToDecimal(Sysutils::TFloatRec&,const void,Sysutils::TFloatValue,int) __fastcall
 0001:0000608B      Sysutils::TextToFloat(char*,void*,Sysutils::TFloatValue) __fastcall
 0001:0000618C      Sysutils::initialization() __fastcall
 0001:0000618C      @C131_3
 0001:000061E8      Sysutils::Exception::
 0001:00006244      Sysutils::EOutOfMemory::
 0001:00006294      Sysutils::EInOutError::
 0001:000062E0      Sysutils::EIntError::
 0001:0000632C      Sysutils::EDivByZero::
 0001:00006378      Sysutils::ERangeError::
 0001:000063C4      Sysutils::EIntOverflow::
 0001:00006414      Sysutils::EMathError::
 0001:00006460      Sysutils::EInvalidOp::
 0001:000064AC      Sysutils::EZeroDivide::
 0001:000064F8      Sysutils::EOverflow::
 0001:00006544      Sysutils::EUnderflow::
 0001:00006590      Sysutils::EInvalidPointer::
 0001:000065E0      Sysutils::EInvalidCast::
 0001:00006630      Sysutils::EConvertError::
 0001:00006680      Sysutils::EAccessViolation::
 0001:000066D4      Sysutils::EPrivilege::
 0001:00006720      Sysutils::EStackOverflow::
 0001:00006770      Sysutils::EControlC::
 0001:000067BC      Sysutils::EVariantError::
 0001:0000680C      Sysutils::EExternalException::
 0001:00006860      SysUtils::_16442
 0001:00006878      SysUtils::_16443
 0001:0000689C      Sysutils::AnsiUpperCase(const System::AnsiString) __fastcall
 0001:000068CC      Sysutils::AnsiLowerCase(const System::AnsiString) __fastcall
 0001:000068FC      Sysutils::AnsiCompareStr(const System::AnsiString,const System::AnsiString) __fastcall
 0001:00006934      Sysutils::AnsiCompareText(const System::AnsiString,const System::AnsiString) __fastcall
 0001:0000696C      Sysutils::Trim(const System::AnsiString) __fastcall
 0001:000069BC      Sysutils::TrimLeft(const System::AnsiString) __fastcall
 0001:000069F0      Sysutils::TrimRight(const System::AnsiString) __fastcall
 0001:00006A24      Sysutils::IntToStr(int) __fastcall
 0001:00006A54      Sysutils::IntToHex(int,int) __fastcall
 0001:00006A90      Sysutils::StrToInt(const System::AnsiString) __fastcall
 0001:00006ACC      Sysutils::StrToIntDef(const System::AnsiString) __fastcall
 0001:00006AE4      Sysutils::LoadStr(int) __fastcall
 0001:00006B1C      Sysutils::FmtLoadStr(int,const System::TVarRec*,int) __fastcall
 0001:00006B78      Sysutils::AnsiLastChar(const System::AnsiString) __fastcall
 0001:00006BA0      Sysutils::LastDelimiter(const System::AnsiString,const System::AnsiString) __fastcall
 0001:00006BE8      Sysutils::StrLen(char*) __fastcall
 0001:00006C00      Sysutils::StrMove(char*,char*,unsigned int) __fastcall
 0001:00006C3C      Sysutils::StrLCopy(char*,char*,unsigned int) __fastcall
 0001:00006C70      Sysutils::StrLIComp(char*,char*,unsigned int) __fastcall
 0001:00006CB8      Sysutils::StrScan(char*,char) __fastcall
 0001:00006CD8      Sysutils::StrPos(char*,char*) __fastcall
 0001:00006D24      SysUtils::_16545
 0001:00006D7C      SysUtils::_16546
 0001:00006D90      SysUtils::_16547
 0001:00006D9C      Sysutils::FormatBuf(void*,unsigned int,const void*,unsigned int,const System::TVarRec*,int) __fastcall
 0001:000070A4      Sysutils::StrFmt(char*,char*,const System::TVarRec*,int) __fastcall
 0001:000070D8      Sysutils::Format(const System::AnsiString,const System::TVarRec,int) __fastcall
 0001:000070EC      Sysutils::FmtStr(System::AnsiString&,System::AnsiString,const System::TVarRec,int) __fastcall
 0001:00007150      Sysutils::FloatToStr(long double) __fastcall
 0001:00007180      Sysutils::CurrToStr(System::Currency) __fastcall
 0001:000071B0      Sysutils::FloatToStrF(long double,Sysutils::TFloatFormat,int) __fastcall
 0001:000071E8      Sysutils::CurrToStrF(System::Currency,S,...
 0001:00007220      Sysutils::FormatFloat(const System::AnsiString) __fastcall
 0001:00007278      Sysutils::StrToFloat(const System::AnsiString) __fastcall
 0001:000072B4      Sysutils::GetLocaleStr(int,int,const System::AnsiString) __fastcall
 0001:00007300      Sysutils::GetLocaleChar(int,int,char) __fastcall
 0001:00007328      SysUtils::_16613
 0001:0000746C      SysUtils::_16614
 0001:00007678      Sysutils::GetFormatSettings() __fastcall
 0001:000079C4      SysUtils::_16618
 0001:000079D0      Sysutils::ShowException(System::TObject*,void) __fastcall
 0001:00007B54      Sysutils::Exception::Exception(const System::AnsiString) __fastcall
 0001:00007B8C      Sysutils::Exception::Exception(int) __fastcall
 0001:00007C04      Sysutils::Exception::Exception(int,const System::TVarRec*,int) __fastcall
 0001:00007C98      Sysutils::EOutOfMemory::~EOutOfMemory() __fastcall
 0001:00007CA8      Sysutils::EOutOfMemory::FreeInstance() __fastcall
 0001:00007CAC      SysUtils::_16634
 0001:00007D34      SysUtils::_16636
 0001:00007D70      SysUtils::_16637
 0001:00007DF0      SysUtils::_16638
 0001:00007E04      SysUtils::_16639
 0001:00007EF8      SysUtils::_16640
 0001:00007F08      SysUtils::_16641
 0001:00007F54      SysUtils::_16642
 0001:00007F7C      SysUtils::_16644
 0001:00007FDC      Sysutils::ByteType(const System::AnsiString) __fastcall
 0001:00008000      Sysutils::StrByteType(char*,unsigned int) __fastcall
 0001:00008018      Sysutils::IsPathDelimiter(const System::AnsiString) __fastcall
 0001:0000804C      Sysutils::IsDelimiter(const System::AnsiString,const System::AnsiString,int) __fastcall
 0001:00008090      Sysutils::AnsiPos(const System::AnsiString,const System::AnsiString) __fastcall
 0001:000080C8      Sysutils::AnsiStrPos(char*,char*) __fastcall
 0001:00008168      Sysutils::AnsiStrRScan(char*,char) __fastcall
 0001:00008190      Sysutils::AnsiStrScan(char*,char) __fastcall
 0001:000081D0      SysUtils::_16661
 0001:00008280      @C139_2
 0001:00008280      Windows::initialization() __fastcall
 0001:00008280      @C139_0
 0001:00008290      @C493_0
 0001:00008290      _memchr
 0001:00008290      ___org_memchr
 0001:000082B0      @C495_0
 0001:000082B0      ___org_memcpy
 0001:000082B0      _memcpy
 0001:000082D4      _memmove
 0001:000082D4      ___org_memmove
 0001:000082D4      @C497_0
 0001:00008320      @C498_0
 0001:00008320      _memset
 0001:00008320      ___org_memset
 0001:000083AC      @C499_0
 0001:000083AC      __wmemset
 0001:000083C4      ___org_strcat
 0001:000083C4      _strcat
 0001:000083C4      @C506_0
 0001:00008400      ___org_strcmp
 0001:00008400      @C508_0
 0001:00008400      _strcmp
 0001:0000844C      @C510_0
 0001:0000844C      ___org_strlen
 0001:0000844C      _strlen
 0001:000084A8      @C511_0
 0001:000084A8      _strncat
 0001:000084A8      ___org_strncat
 0001:00008518      ___org_memcmp
 0001:00008518      @C519_0
 0001:00008518      _memcmp
 0001:00008584      @C525_0
 0001:00008584      _strncpy
 0001:00008584      ___org_strncpy
 0001:000085D4      @C535_0
 0001:000085D4      __stpcpy
 0001:0000860C      _wcslen
 0001:0000860C      @C536_0
 0001:00008624      _wcscpy
 0001:00008624      @C537_0
 0001:00008664      xalloc::xalloc(const string&,unsigned int)
 0001:00008664      @C557_0
 0001:000086A8      xalloc::raise()
 0001:0000870C      __tpdsc__[xalloc*]
 0001:00008724      __tpdsc__[xalloc] const
 0001:00008774      xalloc::xalloc(const xalloc&)
 0001:000087B8      xalloc::~xalloc()
 0001:00008800      __tpdsc__[xmsg] const
 0001:00008844      @C558_0
 0001:00008844      xmsg::xmsg(const string&)
 0001:000088A4      xmsg::xmsg(const xmsg&)
 0001:00008908      xmsg::~xmsg()
 0001:0000894C      xmsg::raise()
 0001:000089A0      xmsg::operator =(const xmsg&)
 0001:00008A10      __tpdsc__[xmsg*]
 0001:00008A24      __tpdsc__[string*]
 0001:00008A3C      __tpdsc__[string]
 0001:00008A80      @C559_0
 0001:00008A80      @C559_4
 0001:00008AAB      terminate()
 0001:00008AB1      set_terminate(void(*)())
 0001:00008AD9      ___call_terminate
 0001:00008B54      unexpected()
 0001:00008B5A      set_unexpected(void(*)())
 0001:00008B82      ___call_unexpected
 0001:00008BC1      __GetPolymorphicDTC(void*,unsigned int)
 0001:00008BE0      __ExceptInit
 0001:00008C03      __GetExceptDLLinfoInternal
 0001:00008C2C      @C562_0
 0001:00008C2C      ___DefHandler
 0001:00008C38      @C563_0
 0001:00008D14      __setexc
 0001:00008D30      __unsetexc
 0001:00008D40      __SetUserHandler
 0001:00008D54      __unsetuserhandler
 0001:00008D60      @C563_3
 0001:00008D60      __init_except
 0001:00008D78      __exit_except
 0001:00008D78      @C563_4
 0001:00008D8C      __InitDefaultHander
 0001:00008DA0      jump()
 0001:00008DA0      @C564_0
 0001:00008DA6      ___doGlobalUnwind
 0001:00008DBB      invokeHnd()
 0001:00008DC4      @C565_3
 0001:00008DC4      @C565_0
 0001:00008DEF      ___JumpToCatch__
 0001:00009527      ___raiseDebuggerException
 0001:00009913      _ThrowExceptionLDTC(void*,void*,void*,void*,unsigned int,unsigned int,unsigned int,unsigned char*,void*)
 0001:00009948      _ReThrowException(unsigned int,unsigned char*)
 0001:00009A85      __Global_unwind
 0001:00009BD5      _CatchCleanup()
 0001:0000A246      __Local_unwind
 0001:0000A259      __Return_unwind
 0001:0000A394      ____ExceptionHandler
 0001:0000A836      __ExceptionHandler
 0001:0000B24B      __CurrExcContext
 0001:0000B29F      @C565_4
 0001:0000B308      Sysutils::EDivByZero::EDivByZero(const System::AnsiString) __fastcall
 0001:0000B3C0      Sysutils::ERangeError::ERangeError(const System::AnsiString) __fastcall
 0001:0000B478      Sysutils::EIntOverflow::EIntOverflow(const System::AnsiString) __fastcall
 0001:0000B530      Sysutils::EInvalidOp::EInvalidOp(const System::AnsiString) __fastcall
 0001:0000B5E8      Sysutils::EZeroDivide::EZeroDivide(const System::AnsiString) __fastcall
 0001:0000B6A0      Sysutils::EOverflow::EOverflow(const System::AnsiString) __fastcall
 0001:0000B758      Sysutils::EUnderflow::EUnderflow(const System::AnsiString) __fastcall
 0001:0000B810      Sysutils::EAccessViolation::EAccessViolation(const System::AnsiString) __fastcall
 0001:0000B8C8      Sysutils::EPrivilege::EPrivilege(const System::AnsiString) __fastcall
 0001:0000B980      Sysutils::EControlC::EControlC(const System::AnsiString) __fastcall
 0001:0000BA38      Sysutils::EStackOverflow::EStackOverflow(const System::AnsiString) __fastcall
 0001:0000BAF0      Sysutils::EIntError::EIntError(const System::AnsiString) __fastcall
 0001:0000BBA8      Sysutils::EMathError::EMathError(const System::AnsiString) __fastcall
 0001:0000BC60      __tpdsc__[Sysutils::EMathError*]
 0001:0000BC84      __tpdsc__[Sysutils::EIntError*]
 0001:0000BCA8      __tpdsc__[Sysutils::EStackOverflow*]
 0001:0000BCD0      __tpdsc__[Sysutils::EControlC*]
 0001:0000BCF4      __tpdsc__[Sysutils::EPrivilege*]
 0001:0000BD18      __tpdsc__[Sysutils::Exception]
 0001:0000BD84      __tpdsc__[Sysutils::EAccessViolation*]
 0001:0000BDB0      __tpdsc__[Sysutils::EUnderflow*]
 0001:0000BDD4      __tpdsc__[Sysutils::EOverflow*]
 0001:0000BDF8      __tpdsc__[Sysutils::EZeroDivide*]
 0001:0000BE1C      __tpdsc__[Sysutils::EMathError]
 0001:0000BE7C      __tpdsc__[Sysutils::EInvalidOp*]
 0001:0000BEA0      __tpdsc__[Sysutils::EIntOverflow*]
 0001:0000BEC8      __tpdsc__[Sysutils::ERangeError*]
 0001:0000BEEC      __tpdsc__[Sysutils::EIntError]
 0001:0000BF48      __tpdsc__[Sysutils::EDivByZero*]
 0001:0000BF6C      __tpdsc__[Sysutils::Exception*]
 0001:0000BF90      __tpdsc__[Sysutils::EStackOverflow&]
 0001:0000BFB8      __tpdsc__[Sysutils::EControlC&]
 0001:0000BFDC      __tpdsc__[Sysutils::EPrivilege&]
 0001:0000C000      __tpdsc__[Sysutils::EAccessViolation&]
 0001:0000C02C      __tpdsc__[Sysutils::EUnderflow&]
 0001:0000C050      __tpdsc__[Sysutils::EOverflow&]
 0001:0000C074      __tpdsc__[Sysutils::EZeroDivide&]
 0001:0000C098      __tpdsc__[Sysutils::EInvalidOp&]
 0001:0000C0BC      __tpdsc__[Sysutils::EIntOverflow&]
 0001:0000C0E4      __tpdsc__[Sysutils::ERangeError&]
 0001:0000C108      __tpdsc__[Sysutils::EDivByZero&]
 0001:0000C12C      Sysutils::Exception::~Exception() __fastcall
 0001:0000C194      Sysutils::EMathError::~EMathError() __fastcall
 0001:0000C1E8      Sysutils::EIntError::~EIntError() __fastcall
 0001:0000C23C      __tpdsc__[typeinfo]
 0001:0000C284      __tpdsc__[Sysutils::EDivByZero]
 0001:0000C2E4      __tpdsc__[Sysutils::ERangeError]
 0001:0000C344      __tpdsc__[Sysutils::EIntOverflow]
 0001:0000C3A4      __tpdsc__[Sysutils::EInvalidOp]
 0001:0000C404      __tpdsc__[Sysutils::EZeroDivide]
 0001:0000C464      __tpdsc__[Sysutils::EOverflow]
 0001:0000C4C0      __tpdsc__[Sysutils::EUnderflow]
 0001:0000C520      __tpdsc__[Sysutils::EAccessViolation]
 0001:0000C584      __tpdsc__[System::TObject]
 0001:0000C5D0      __tpdsc__[Sysutils::EPrivilege]
 0001:0000C630      __tpdsc__[Sysutils::EControlC]
 0001:0000C68C      __tpdsc__[Sysutils::EStackOverflow]
 0001:0000C6F0      Sysutils::EDivByZero::~EDivByZero() __fastcall
 0001:0000C744      Sysutils::ERangeError::~ERangeError() __fastcall
 0001:0000C798      Sysutils::EIntOverflow::~EIntOverflow() __fastcall
 0001:0000C7EC      Sysutils::EInvalidOp::~EInvalidOp() __fastcall
 0001:0000C840      Sysutils::EZeroDivide::~EZeroDivide() __fastcall
 0001:0000C894      Sysutils::EOverflow::~EOverflow() __fastcall
 0001:0000C8E8      Sysutils::EUnderflow::~EUnderflow() __fastcall
 0001:0000C93C      Sysutils::EAccessViolation::~EAccessViolation() __fastcall
 0001:0000C990      Sysutils::EPrivilege::~EPrivilege() __fastcall
 0001:0000C9E4      Sysutils::EControlC::~EControlC() __fastcall
 0001:0000CA38      Sysutils::EStackOverflow::~EStackOverflow() __fastcall
 0001:0000CA8C      @C566_0
 0001:0000CA8C      @__InitExceptBlockLDTC
 0001:0000CAC8      @C567_0
 0001:0000CAC8      __typeIDname(tpid*)
 0001:0000CAFF      __isSameTypeID(tpid*,tpid*)
 0001:0000CD31      __isCompatTypeID(tpid*,tpid*,int,tpid**)
 0001:0000CE40      __ThrowFileName()
 0001:0000CE4C      __ThrowLineNumber()
 0001:0000CE58      __ThrowExceptionName()
 0001:0000CE64      typeinfo::typeinfo(const typeinfo&)
 0001:0000CE9C      typeinfo::operator =(const typeinfo&)
 0001:0000CEA4      typeinfo::~typeinfo()
 0001:0000CEC3      typeinfo::operator ==(const typeinfo&) const
 0001:0000CEE6      typeinfo::operator !=(const typeinfo&) const
 0001:0000CF06      typeinfo::before(const typeinfo&) const
 0001:0000CF4F      typeinfo::name() const
 0001:0000CF60      __GetTypeInfo(void*,void*,void*,void*)
 0001:0000D224      __DynamicCast(void*,void*,void*,void*,int)
 0001:0000D30C      __DynamicCastVCLref(void*,void*) __fastcall
 0001:0000D33E      __DynamicCastVCLptr(void*,void*) __fastcall
 0001:0000D3F4      __adjustClassAdr(void*,tpid*,tpid*)
 0001:0000D470      __tpdsc__[typeinfo*]
 0001:0000D488      __tpdsc__[Bad_typeid]
 0001:0000D4A4      __tpdsc__[Bad_cast]
 0001:0000D4C0      @C569_0
 0001:0000D4C0      __SetExceptionHandler
 0001:0000D4D5      __UnsetExceptionHandler
 0001:0000D501      __UnwindException
 0001:0000D508      @C570_0
 0001:0000D508      _access
 0001:0000D508      ___org_access
 0001:0000D510      @C571_0
 0001:0000D510      __allocbuf
 0001:0000D590      _close
 0001:0000D590      @C575_0
 0001:0000D590      ___org_close
 0001:0000D598      @C583_0
 0001:0000D598      _fclose
 0001:0000D598      ___org_fclose
 0001:0000D638      @C585_0
 0001:0000D638      _fflush
 0001:0000D638      ___org_fflush
 0001:0000D6C8      @C595_0
 0001:0000D6C8      __flushout
 0001:0000D72C      __initfmode
 0001:0000D72C      @C597_0
 0001:0000D73C      @C600_0
 0001:0000D818      ___openfp
 0001:0000D8C0      ___getfp
 0001:0000D8EC      ___org_fopen
 0001:0000D8EC      _fopen
 0001:0000D920      ___org_fprintf
 0001:0000D920      _fprintf
 0001:0000D920      @C601_0
 0001:0000D954      @C604_0
 0001:0000D954      ___fputn
 0001:0000DA30      ___org_fscanf
 0001:0000DA30      @C611_0
 0001:0000DA30      _fscanf
 0001:0000DA6C      @C613_0
 0001:0000DAC8      _fseek
 0001:0000DAC8      ___org_fseek
 0001:0000DB3C      ___org_ftell
 0001:0000DB3C      _ftell
 0001:0000DBC8      @C623_0
 0001:0000DBC8      _isatty
 0001:0000DBC8      ___org_isatty
 0001:0000DBD0      @C624_0
 0001:0000DC70      ___org__fgetc
 0001:0000DC70      __fgetc
 0001:0000DC88      __lgetc
 0001:0000DD70      __lputc
 0001:0000DD70      @C626_0
 0001:0000DE80      ___org_lseek
 0001:0000DE80      @C628_0
 0001:0000DE80      _lseek
 0001:0000DE88      @C630_0
 0001:0000DE88      ___mkname
 0001:0000DEE0      ___tmpnam
 0001:0000DF24      _printf
 0001:0000DF24      @C634_0
 0001:0000DF24      ___org_printf
 0001:0000DF60      @C639_0
 0001:0000DF60      ___org_read
 0001:0000DF60      _read
 0001:0000DF68      @C643_0
 0001:0000DF68      _scanf
 0001:0000DF68      ___org_scanf
 0001:0000DFA8      @C645_0
 0001:0000DFA8      __scanner
 0001:0000E784      ___scantoint64
 0001:0000E784      @C649_0
 0001:0000E9AC      @C654_0
 0001:0000E9AC      _setvbuf
 0001:0000E9AC      ___org_setvbuf
 0001:0000EA0C      @C657_0
 0001:0000EA34      _sprintf
 0001:0000EA34      ___org_sprintf
 0001:0000EA58      _vsprintf
 0001:0000EA58      ___org_vsprintf
 0001:0000EA7C      @C661_0
 0001:0000EA7C      __init_streams
 0001:0000EB40      __exit_streams
 0001:0000EB40      @C661_3
 0001:0000EB98      __lock_all_streams
 0001:0000EBA8      __unlock_all_streams
 0001:0000EBB8      __lock_stream
 0001:0000EC5C      __cleanup_stream_locks
 0001:0000EC80      __unlock_stream
 0001:0000ECB4      @C667_0
 0001:0000ECB4      _ungetc
 0001:0000ECB4      ___org_ungetc
 0001:0000ED18      @C673_0
 0001:0000EDA4      ___vprinter
 0001:0000F6CC      _write
 0001:0000F6CC      ___org_write
 0001:0000F6CC      @C689_0
 0001:0000F6D4      __xfclose
 0001:0000F6D4      @C695_0
 0001:0000F70C      @C696_0
 0001:0000F70C      __xfflush
 0001:0000F740      @C699_0
 0001:0000F740      ___eof
 0001:0000F7D8      @C700_0
 0001:0000F844      ___read
 0001:0000F98C      @C702_0
 0001:0000FA44      ___write
 0001:0000FB3C      @C703_0
 0001:0000FB50      @C708_0
 0001:0000FB50      __flushall
 0001:0000FB94      ___org__fputc
 0001:0000FB94      __fputc
 0001:0000FB94      @C709_0
 0001:0000FBB4      @C725_0
 0001:0000FBB4      ___org_fgetc
 0001:0000FBB4      _fgetc
 0001:0000FBDC      @C727_0
 0001:0000FBDC      _fputc
 0001:0000FBDC      ___org_fputc
 0001:0000FC08      @C754_0
 0001:0000FC08      __lock_all_handles
 0001:0000FC18      __cleanup_handle_locks
 0001:0000FC3C      __unlock_all_handles
 0001:0000FC4C      __lock_handle
 0001:0000FCE0      __unlock_handle
 0001:0000FD08      __get_handle
 0001:0000FD48      __dup_handle
 0001:0000FDB0      __free_handle
 0001:0000FE68      __init_handles
 0001:0000FFBC      @C755_0
 0001:0000FFBC      ___doserrno
 0001:0000FFC8      ___IOerror
 0001:00010014      ___DOSerror
 0001:00010034      ___NTerror
 0001:00010048      __rtl_read
 0001:00010048      @C780_0
 0001:00010048      ___org__rtl_read
 0001:00010090      __read
 0001:00010090      ___org__read
 0001:000100AC      ___org__rtl_write
 0001:000100AC      @C782_0
 0001:000100AC      __rtl_write
 0001:000100F4      ___org__write
 0001:000100F4      __write
 0001:00010110      ___access
 0001:00010110      @C785_0
 0001:00010150      ___close
 0001:00010150      @C786_0
 0001:000101B0      @C790_0
 0001:000101B0      ___isatty
 0001:000101E0      ___isatty_osfhandle
 0001:000101F8      @C791_0
 0001:000101F8      ___lseek
 0001:0001027C      ___open
 0001:0001027C      @C792_0
 0001:0001047C      @C797_0
 0001:0001047C      __unlink
 0001:00010498      @C799_3
 0001:00010498      @C799_0
 0001:000106D8      @C799_5
 0001:000106D8      Iostream_delete()
 0001:00010770      @C799_4
 0001:000107E0      @C799_6
 0001:0001084C      __tpdsc__[filebuf*]
 0001:00010864      __tpdsc__[istream_withassign*]
 0001:00010888      __tpdsc__[ostream_withassign*]
 0001:000108AC      __tpdsc__[streambuf*]
 0001:000108C4      __tpdsc__[istream_withassign]
 0001:0001092C      __tpdsc__[ostream_withassign]
 0001:00010994      __tpdsc__[ostream]
 0001:000109E4      __tpdsc__[ios]
 0001:00010A24      __tpdsc__[istream]
 0001:00010A74      __tpdsc__[streambuf]
 0001:00010ABC      __tpdsc__[filebuf]
 0001:00010B0C      filebuf::close()
 0001:00010B0C      @C809_0
 0001:00010B7C      filebuf::filebuf(int)
 0001:00010B7C      @C811_0
 0001:00010C28      filebuf::~filebuf()
 0001:00010C28      @C813_0
 0001:00010CA8      filebuf::overflow(int)
 0001:00010CA8      @C814_0
 0001:00010D90      @C816_0
 0001:00010D90      filebuf::setbuf(char*,int)
 0001:00010E08      @C817_0
 0001:00010E08      filebuf::seekoff(long,ios::seek_dir)
 0001:00010F08      filebuf::sync()
 0001:00010F08      @C818_0
 0001:00011014      filebuf::underflow()
 0001:00011014      @C819_0
 0001:00011160      istream_withassign::operator =(streambuf*)
 0001:00011160      @C852_0
 0001:0001117C      @C853_0
 0001:0001117C      istream::istream()
 0001:000111F0      __tpdsc__[istream*]
 0001:00011208      istream::
 0001:00011214      istream_withassign::istream_withassign()
 0001:00011214      @C856_0
 0001:00011284      istream_withassign::
 0001:00011290      @C857_0
 0001:00011290      istream::do_get()
 0001:000112E0      istream::ipfx(int)
 0001:000112E0      @C858_0
 0001:00011370      istream::~istream()
 0001:00011370      @C859_0
 0001:000113E4      istream_withassign::~istream_withassign()
 0001:000113E4      @C860_0
 0001:0001146C      @C861_0
 0001:0001146C      istream::eatwhite()
 0001:000114D0      @C865_0
 0001:000114D0      istream::operator >>(double&)
 0001:0001198C      istream::operator >>(char&)
 0001:0001198C      @C870_0
 0001:000119FC      istream::get(char&)
 0001:000119FC      @C880_0
 0001:00011A84      @C882_0
 0001:00011A84      istream::get(char*,int,char)
 0001:00011B34      @C886_0
 0001:00011B34      istream::putback(char)
 0001:00011BA0      @C907_0
 0001:00011BA0      ostream_withassign::operator =(streambuf*)
 0001:00011BC4      @C908_0
 0001:00011BC4      ostream::ostream()
 0001:00011C28      __tpdsc__[ostream*]
 0001:00011C40      ostream::
 0001:00011C4C      @C910_0
 0001:00011C4C      ostream_withassign::ostream_withassign()
 0001:00011CBC      ostream_withassign::
 0001:00011CC8      @C911_0
 0001:00011CC8      ostream::~ostream()
 0001:00011D58      @C912_0
 0001:00011D58      ostream_withassign::~ostream_withassign()
 0001:00011DE0      ostream::operator <<(double)
 0001:00011DE0      @C913_0
 0001:00011E54      @C914_0
 0001:00011E54      ostream::flush()
 0001:00011E7C      @C921_0
 0001:00011E7C      ostream::do_opfx()
 0001:00011EA4      ostream::do_osfx()
 0001:00011EA4      @C922_0
 0001:00011EE4      @C923_0
 0001:00011EE4      ostream::outstr(const char*,const char*)
 0001:000120D4      streambuf::doallocate()
 0001:000120D4      @C958_0
 0001:0001210C      @C959_0
 0001:0001210C      streambuf::streambuf()
 0001:00012190      streambuf::lock()
 0001:00012198      streambuf::unlock()
 0001:000121A0      @C962_0
 0001:000121A0      streambuf::do_snextc()
 0001:000121C0      streambuf::do_sgetn(char*,int)
 0001:000121C0      @C963_0
 0001:00012238      @C964_0
 0001:00012238      streambuf::do_sputn(const char*,int)
 0001:000122A8      @C965_0
 0001:000122A8      streambuf::~streambuf()
 0001:000122DC      @C966_0
 0001:000122DC      streambuf::overflow(int)
 0001:000122E4      streambuf::pbackfail(int)
 0001:000122E4      @C967_0
 0001:000122EC      @C968_0
 0001:000122EC      streambuf::setbuf(char*,int)
 0001:00012310      streambuf::setb(char*,char*,int)
 0001:00012310      @C969_0
 0001:00012378      streambuf::setg(char*,char*,char*)
 0001:00012378      @C970_0
 0001:000123AC      streambuf::setp(char*,char*)
 0001:000123AC      @C971_0
 0001:000123D4      streambuf::seekoff(long,ios::seek_dir)
 0001:000123D4      @C973_0
 0001:000123DC      @C974_0
 0001:000123DC      streambuf::seekpos(long,int)
 0001:000123F8      @C975_0
 0001:000123F8      streambuf::sputn(const char*,int)
 0001:0001243C      streambuf::sync()
 0001:0001243C      @C977_0
 0001:00012474      streambuf::underflow()
 0001:00012474      @C979_0
 0001:00012494      @C980_0
 0001:00012494      ios::clear(int)
 0001:000124D0      @C981_0
 0001:000124D0      ios::ios()
 0001:00012510      __tpdsc__[ios*]
 0001:00012524      @C983_0
 0001:00012524      ios::~ios()
 0001:0001259C      ios::init(streambuf*)
 0001:0001259C      @C985_0
 0001:000125E4      ios::setf(long)
 0001:000125E4      @C988_0
 0001:0001263C      @C990_0
 0001:0001263C      ios::setstate(int)
 0001:00012668      @C993_0
 0001:00012668      ios::tie(ostream*)
 0001:000126B0      filebuf::lock()
 0001:000126B0      @C1000_0
 0001:000126C4      filebuf::unlock()
 0001:000126D8      @C1007_0
 0001:000126D8      __getLocaleTimeInfo
 0001:00012A0C      __getLocaleMonetaryInfo
 0001:00012B60      __getLocaleMonetaryNegFmt
 0001:00012B6C      __getLocaleNumericInfo
 0001:00012BC0      __getLocaleEra
 0001:00012C60      @C1009_0
 0001:00012C60      _iswalnum
 0001:00012C78      _iswascii
 0001:00012C8C      _iswalpha
 0001:00012CA4      _iswcntrl
 0001:00012CB8      _iswdigit
 0001:00012CCC      _iswgraph
 0001:00012CE4      _iswlower
 0001:00012CF8      _iswprint
 0001:00012D10      _iswpunct
 0001:00012D24      _iswspace
 0001:00012D38      _iswupper
 0001:00012D4C      _iswxdigit
 0001:00012D64      @C1011_0
 0001:00012D64      ___iswctype
 0001:00012DBC      _mblen
 0001:00012DBC      ___org_mblen
 0001:00012DBC      @C1034_0
 0001:00012E38      _mbtowc
 0001:00012E38      ___org_mbtowc
 0001:00012F04      ___org_wctomb
 0001:00012F04      _wctomb
 0001:00012F78      ___org_mbstowcs
 0001:00012F78      _mbstowcs
 0001:000130E0      _wcstombs
 0001:000130E0      ___org_wcstombs
 0001:00013284      @C1060_0
 0001:00013284      __llmul
 0001:000132A7      __lldiv
 0001:0001331F      __lludiv
 0001:00013368      __llmod
 0001:000133E2      __llumod
 0001:00013430      __llshl
 0001:0001344C      __llshr
 0001:00013468      __llushr
 0001:00013484      @C1061_0
 0001:0001356D      _acos
 0001:0001356D      ___org_acos
 0001:00013588      ___org_asin
 0001:00013588      _asin
 0001:000135A0      _atan2
 0001:000135A0      ___org_atan2
 0001:000135A0      @C1064_0
 0001:00013654      @C1069_0
 0001:00013654      __clear87
 0001:00013668      ___org_cos
 0001:00013668      _cos
 0001:00013668      @C1070_0
 0001:000136AC      @C1074_0
 0001:000136AC      abs(const complex&)
 0001:000136D0      norm(const complex&)
 0001:000136E4      complex::operator *=(const complex&)
 0001:0001372C      operator *(const complex&,const complex&)
 0001:00013790      complex::operator /=(const complex&)
 0001:00013790      @C1075_0
 0001:000137FC      operator /(const complex&,const complex&)
 0001:0001388C      operator /(double,const complex&)
 0001:00013940      acos(const complex&)
 0001:00013A6C      arg(const complex&)
 0001:00013AC4      asin(const complex&)
 0001:00013BF4      atan(const complex&)
 0001:00013CC8      cos(const complex&)
 0001:00013D5C      cosh(const complex&)
 0001:00013DF0      exp(const complex&)
 0001:00013E68      log(const complex&)
 0001:00013EB8      log10(const complex&)
 0001:00013F14      pow(const complex&,double)
 0001:00013FFC      pow(double,const complex&)
 0001:00014118      pow(const complex&,const complex&)
 0001:000141C0      sin(const complex&)
 0001:00014258      sinh(const complex&)
 0001:000142EC      sqrt(const complex&)
 0001:00014374      tan(const complex&)
 0001:00014468      tanh(const complex&)
 0001:00014534      operator <<(ostream&,const complex&)
 0001:0001459C      operator >>(istream&,complex&)
 0001:000146A4      @C1075_2
 0001:000146C4      @C1078_0
 0001:000146C4      __control87
 0001:000146EC      ___realcvt
 0001:000146EC      @C1079_0
 0001:000146F2      ___nextreal
 0001:000146F8      __scantod
 0001:000146FE      __scanrslt
 0001:00014704      _exp
 0001:00014704      ___org_exp
 0001:00014704      @C1082_0
 0001:00014770      @C1085_0
 0001:00014770      __f87_ArcTan
 0001:000147D0      @C1086_0
 0001:000147D0      __f87_Exp2
 0001:000147D5      __f87_Exp10
 0001:000147DD      __f87_Exp
 0001:000148A0      @C1087_0
 0001:000148A0      __f87_Log2
 0001:000148A4      __f87_Log10
 0001:000148A8      __f87_Log
 0001:000148E8      @C1088_0
 0001:000148E8      __f87_Sine
 0001:000148EC      __f87_Cosine
 0001:000148F0      __f87_Tangent
 0001:000149CC      _fabs
 0001:000149CC      @C1089_0
 0001:000149DC      __fpreset
 0001:000149DC      @C1098_0
 0001:000149F4      @C1102_0
 0001:000149F4      __fuildq
 0001:00014A24      @C1103_0
 0001:00014A24      __fuistq
 0001:00014A48      @C1104_0
 0001:00014A48      __fxam
 0001:00014A5C      @C1109_0
 0001:00014A5C      ___int64toa
 0001:00014B10      @C1113_0
 0001:00014B10      _log
 0001:00014B10      ___org_log
 0001:00014B80      _pow
 0001:00014B80      @C1123_0
 0001:00014B80      ___org_pow
 0001:00014D5C      @C1125_0
 0001:00014D5C      __qdiv10
 0001:00014D84      @C1126_0
 0001:00014D84      __qmul10
 0001:00014DB4      @C1130_0
 0001:00014DB4      ___org_sin
 0001:00014DB4      _sin
 0001:00014DF8      _sqrt
 0001:00014DF8      @C1134_0
 0001:00014DF8      ___org_sqrt
 0001:00014E34      @C1152_0
 0001:00014E4C      @C1153_0
 0001:00014E64      @C1160_0
 0001:00014E64      ___ldtrunc
 0001:00014F64      ___longtoa
 0001:00014F64      @C1161_0
 0001:00014FD8      ___utoa
 0001:00014FF4      _itoa
 0001:00014FF4      ___org_itoa
 0001:00014FF4      @C1163_0
 0001:00015024      ___org_ultoa
 0001:00015024      _ultoa
 0001:00015044      __ltoa
 0001:0001506C      __matherr
 0001:0001506C      ___org__matherr
 0001:0001506C      @C1165_0
 0001:00015098      ___org__matherrl
 0001:00015098      @C1166_0
 0001:00015098      __matherrl
 0001:000150C8      @C1167_0
 0001:000150C8      __initmatherr
 0001:000150E0      @C1172_0
 0001:000153C4      __cvt_init
 0001:000153DC      @C1173_0
 0001:000156F8      __cvt_initw
 0001:00015710      @C1174_0
 0001:00015BDC      __scan_init
 0001:00015BF4      @C1175_0
 0001:000160C0      __scan_initw
 0001:000160D8      ___xcvt
 0001:000160D8      @C1182_0
 0001:000163A8      ___xcvtw
 0001:000163A8      @C1183_0
 0001:00016698      ___matherr
 0001:00016698      @C1188_0
 0001:00016748      __pow10
 0001:00016748      @C1189_0
 0001:000168C0      __setmbcp
 0001:000168C0      @C1201_0
 0001:000169B0      __initMBCSTable
 0001:000169B0      @C1201_3
 0001:000169C0      __ismbcspace
 0001:000169C0      @C1212_0
 0001:000169E0      __mbsrchr
 0001:000169E0      @C1243_0
 0001:00016A38      _calloc
 0001:00016A38      ___org_calloc
 0001:00016A38      @C1273_0
 0001:00016A64      ___org_delete
 0001:00016A64      operator delete(void*)
 0001:00016A64      @C1274_0
 0001:00016A74      ___org_deletea
 0001:00016A74      operator delete[](void*)
 0001:00016A74      @C1275_0
 0001:00016A84      @C1276_0
 0001:00016A84      set_new_handler(void(*)())
 0001:00016A98      ___org_new
 0001:00016A98      operator new(unsigned int)
 0001:00016ACC      ___org_newa
 0001:00016ACC      @C1277_0
 0001:00016ACC      operator new[](unsigned int)
 0001:00016ADC      @C1280_0
 0001:00016B40      @C1280_3
 0001:00016B4C      @C1280_4
 0001:00016BAC      @C1280_5
 0001:00016BE4      @C1287_0
 0001:00016BE4      InitProntoMemoryManager() __fastcall
 0001:00016BE8      _malloc
 0001:00016BE8      ___org_malloc
 0001:00016BF8      ___org_free
 0001:00016BF8      _free
 0001:00016C08      _realloc
 0001:00016C08      ___org_realloc
 0001:00016C2C      __free_heaps
 0001:00016C30      @C1293_0
 0001:00016C78      __assert
 0001:00016CD8      ___errno
 0001:00016CD8      @C1298_0
 0001:00016CE4      @C1303_0
 0001:00016D40      __ErrorMessage
 0001:00016E20      ___ErrorMessage
 0001:00016E30      __ErrorExit
 0001:00016E48      @C1304_0
 0001:00016EA8      __ErrorMessageHelper
 0001:00016F04      @C1310_0
 0001:00016F04      __abort
 0001:00016F18      _abort
 0001:00016F28      @C1328_0
 0001:00016FA0      _exit
 0001:00016FB8      __exit
 0001:00016FD0      __cexit
 0001:00016FE0      __c_exit
 0001:00016FF0      __initwild
 0001:00016FF0      @C1332_0
 0001:00016FF4      __setargv
 0001:00016FF4      @C1336_3
 0001:00016FF4      @C1336_0
 0001:00017188      @C1336_4
 0001:00017188      __exitargv
 0001:00017218      __addarg
 0001:000172DC      @C1363_2
 0001:000172DC      @C1363_0
 0001:00017314      @C1363_3
 0001:00017324      @C1370_0
 0001:00017324      __lock_env
 0001:00017334      __unlock_env
 0001:00017344      @C1370_4
 0001:00017378      __expandblock
 0001:000174C4      @C1370_3
 0001:000174F8      @C1372_0
 0001:000176C4      _signal
 0001:00017778      _raise
 0001:00017778      ___org_raise
 0001:00017814      @C1379_0
 0001:00017814      __terminate
 0001:00017824      __create_shmem
 0001:0001782C      __init_exit_proc
 0001:000178D8      __cleanup
 0001:00017950      __lock_exit
 0001:00017960      __unlock_exit
 0001:00017970      @C1379_2
 0001:00017984      @C1380_0
 0001:00017984      __startup
 0001:00017AEC      @C1405_0
 0001:00017AEC      string::string(const string&)
 0001:00017B20      string::string(const char*)
 0001:00017B20      @C1406_0
 0001:00017B98      __tpdsc__[string::lengtherror]
 0001:00017BF4      __tpdsc__[TStringRef*]
 0001:00017C10      __tpdsc__[TStringRef]
 0001:00017C64      string::lengtherror::~lengtherror()
 0001:00017CAC      __tpdsc__[TReference]
 0001:00017CE0      @C1449_0
 0001:00017CE0      string::~string()
 0001:00017D34      string::assert_element(unsigned int) const
 0001:00017DD4      string::assert_index(unsigned int) const
 0001:00017E74      TSubString::assert_element(unsigned int) const
 0001:00017F14      TStringRef::TStringRef(const char*,unsigned int,const char*,unsigned int,unsigned int)
 0001:00017FCC      TStringRef::~TStringRef()
 0001:00018010      TStringRef::reserve(unsigned int)
 0001:00018068      TStringRef::check_freeboard()
 0001:000180BC      TStringRef::grow_to(unsigned int)
 0001:0001810C      TStringRef::round_capacity(unsigned int)
 0001:00018148      TStringRef::splice(unsigned int,unsigned int,const char*,unsigned int)
 0001:00018270      string::set_case_sensitive(int)
 0001:00018284      string::set_paranoid_check(int)
 0001:00018298      string::skip_whitespace(int)
 0001:000182AC      string::initial_capacity(unsigned int)
 0001:000182C0      string::resize_increment(unsigned int)
 0001:000182E4      string::max_waste(unsigned int)
 0001:000182F8      __tpdsc__[string::outofrange]
 0001:00018354      string::outofrange::outofrange(const string::outofrange&)
 0001:00018390      string::outofrange::~outofrange()
 0001:000183D8      @C1455_2
 0001:000183D8      @C1455_0
 0001:000183D8      __init_tls
 0001:00018440      __exit_tls
 0001:00018440      @C1455_3
 0001:00018458      @C1457_0
 0001:00018458      __thread_data
 0001:00018484      __thread_data_new
 0001:0001851C      __thread_data_del
 0001:00018550      @C1457_3
 0001:00018564      @C1457_4
 0001:00018618      __create_lock
 0001:00018618      @C1460_0
 0001:0001867C      __lock_nt
 0001:0001868C      __unlock_nt
 0001:0001869C      __lock_error
 0001:000186D8      @C1460_3
 0001:000186F0      ___org_getdate
 0001:000186F0      _getdate
 0001:000186F0      @C1478_0
 0001:0001871C      ___org_gettime
 0001:0001871C      _gettime
 0001:00018754      __thread_buf
 0001:00018754      @C1485_0
 0002:000000EC      @D1486_1
 0002:00000144      ___isDLL
 0002:0000014D      ___useDynamicTLS
 0002:0000014E      ___isGUI
 0002:00000153      __TLS_index4
 0002:00000157      __hInstance
 0002:0000015B      ___CPPdebugHook
 0002:00000160      @D1487_1
 0002:00000320      System::TObject::
 0002:00000368      @D72_1
 0002:00000C9C      @D130_1
 0002:00000D04      System::DebugHook
 0002:00000D04      _DebugHook
 0002:00000D08      System::_16451
 0002:00000D14      System::_16524
 0002:00000D18      Sysutils::Win32Platform
 0002:00000D1C      Sysutils::LeadBytes
 0002:00000D3C      SysUtils::_16633
 0002:00000D74      SysUtils::_16635
 0002:00000E14      @D557_1
 0002:00000E74      @D558_1
 0002:00000F70      @D559_1
 0002:00000F70      ___CPPexceptionList
 0002:00000F74      ___exceptFlags
 0002:00000F78      ___terminatePTR
 0002:00000F7C      ___unexpectdPTR
 0002:00000F80      ___throwFileName
 0002:00000F84      ___throwLineNumber
 0002:00000F88      ___throwExceptionName
 0002:00000F8C      ___exceptStaticBuffP
 0002:00000F90      ___exceptMemAllocVars
 0002:00000F94      ___ExceptStaticXbuff
 0002:00001048      __ExceptVarsSize
 0002:0000105C      __stkchk
 0002:0000105C      @D563_1
 0002:00001070      ___debuggerDisableTerminateCallback
 0002:00001070      @D565_1
 0002:00002458      typeinfo::
 0002:00002468      @D567_1
 0002:00002774      @D591_1
 0002:00002774      __streams
 0002:00002C24      __nfile
 0002:00002C24      @D592_1
 0002:00002C28      __openfd
 0002:00002CF0      @D596_1
 0002:00002CF0      __fmode
 0002:00002CF4      __fmodeptr
 0002:00002CF4      @D597_1
 0002:00002CF8      @D630_1
 0002:00002D04      @D633_1
 0002:00002D04      __sys_errlist
 0002:00002DC8      __sys_nerr
 0002:00003180      @D645_1
 0002:00003200      @D661_1
 0002:00003254      @D673_1
 0002:000032CC      __cfinfo_get
 0002:000032CC      @D703_1
 0002:000032D0      @D715_1
 0002:000032D0      __notUmask
 0002:000032D4      @D754_1
 0002:00003328      __dosErrorToSV
 0002:00003328      @D755_1
 0002:00003454      @D799_1
 0002:00003644      @D811_1
 0002:00003668      filebuf::
 0002:000036A8      @D813_1
 0002:000036CC      filebuf::openprot
 0002:000036D0      @D853_1
 0002:000036F4      istream::
 0002:00003710      @D856_1
 0002:00003734      istream_withassign::
 0002:00003750      @D859_1
 0002:00003774      @D860_1
 0002:00003798      @D908_1
 0002:000037BC      ostream::
 0002:000037D8      @D910_1
 0002:000037FC      ostream_withassign::
 0002:00003818      @D911_1
 0002:0000383C      @D912_1
 0002:00003860      @D913_1
 0002:00003864      @D959_1
 0002:00003888      streambuf::
 0002:000038C8      @D981_1
 0002:000038EC      ios::
 0002:000038FC      @D983_1
 0002:0000392C      ios::basefield
 0002:00003930      ios::adjustfield
 0002:00003934      ios::floatfield
 0002:00003938      ios::nextbit
 0002:0000393C      ios::usercount
 0002:00003940      __chartype
 0002:00003940      @D1001_1
 0002:00003B44      @D1007_1
 0002:00003B4C      @D1013_1
 0002:00003B4C      _CMonetary
 0002:00003B80      _CNumeric
 0002:00003B96      _CTimeDate
 0002:00003C58      _CLOCALE
 0002:00003C84      ___locale
 0002:00003DA8      @D1061_1
 0002:00003DC4      @D1064_1
 0002:00003DDC      @D1070_1
 0002:00003DE8      @D1075_1
 0002:00003E00      @D1082_1
 0002:00003E0C      @D1085_1
 0002:00003E20      @D1086_1
 0002:00003E34      @D1087_1
 0002:00003E4C      @D1088_1
 0002:00003E68      @D1113_1
 0002:00003E74      @D1123_1
 0002:00003E90      @D1130_1
 0002:00003E9C      @D1134_1
 0002:00003EAC      __realcvtptr
 0002:00003EAC      @D1152_1
 0002:00003EB0      __nextrealptr
 0002:00003EB4      __scantodptr
 0002:00003EB8      __scanrsltptr
 0002:00003F14      __realcvtwptr
 0002:00003F14      @D1153_1
 0002:00003F18      __nextrealwptr
 0002:00003F1C      __scanwtodptr
 0002:00003F20      __scanwrsltptr
 0002:00003F7C      __default87
 0002:00003F7C      @D1154_1
 0002:00003F80      __huge_flt
 0002:00003F80      @D1157_1
 0002:00003F84      __huge_dble
 0002:00003F8C      __huge_ldble
 0002:00003F96      __max_flt
 0002:00003F9A      __max_dble
 0002:00003FA2      __max_ldble
 0002:00003FAC      __indefinite
 0002:00003FB0      __tiny_ldble
 0002:00003FBC      __turboFloat
 0002:00003FBC      @D1158_1
 0002:00003FC0      __floatconvert
 0002:00003FC4      @D1167_1
 0002:00003FC4      __pmatherr
 0002:00003FC8      __pmatherrl
 0002:00003FCC      @D1168_1
 0002:00003FCC      __mathwhy
 0002:00004010      @D1172_1
 0002:00004024      @D1173_1
 0002:0000404C      @D1174_1
 0002:00004074      @D1175_1
 0002:0000409C      @D1188_1
 0002:000040AC      @D1189_1
 0002:0000416C      __kalpha
 0002:0000416C      @D1201_1
 0002:0000416E      __kpunct
 0002:000041B4      @D1280_1
 0002:000041B4      ___xalloc
 0002:00004238      @D1293_1
 0002:0000425C      __messagefile
 0002:0000425C      @D1303_1
 0002:00004268      @D1304_1
 0002:0000428C      @D1310_1
 0002:000042AC      __atexitcnt
 0002:000042AC      @D1328_1
 0002:000042B0      __exitbuf
 0002:000042B4      __exitfopen
 0002:000042B8      __exitopen
 0002:000042BC      __setargv__
 0002:000042BC      @D1336_1
 0002:000042C0      __expandptr
 0002:00004334      @D1363_1
 0002:00004334      __argv0
 0002:00004354      __setenvp__
 0002:00004354      @D1370_1
 0002:000043C0      @D1372_1
 0002:00004420      @D1379_1
 0002:00004438      @D1405_1
 0002:0000446C      @D1406_1
 0002:000044D4      @D1449_1
 0002:00004660      string::case_sensitive
 0002:00004664      string::paranoid_check
 0002:00004668      string::skip_white
 0002:0000466C      string::initial_capac
 0002:00004670      string::resize_inc
 0002:00004674      string::freeboard
 0002:000046F4      @D1457_1
 0002:00004710      @D1460_1
 0002:00004B18      __TLS_index
 0003:00000000      @B1487_2
 0003:00000000      _m1
 0003:00000004      _m2
 0003:00000008      _tisk
 0003:0000000C      _s
 0003:00000010      _f
 0003:00000014      _ft
 0003:00000018      System::ExceptProc
 0003:00000018      @B130_2
 0003:0000001C      System::ErrorProc
 0003:00000020      System::ExceptClsProc
 0003:00000024      System::ExceptObjProc
 0003:00000028      System::ExceptionClass
 0003:00000028      _ExceptionClass
 0003:0000002C      System::HPrevInst
 0003:00000030      System::HInstance
 0003:00000034      System::CmdShow
 0003:00000038      System::CmdLine
 0003:0000003C      System::InitProc
 0003:00000040      System::ExitCode
 0003:00000044      System::ExitProc
 0003:00000048      System::ErrorAddr
 0003:0000004C      System::DllProc
 0003:00000050      System::RandSeed
 0003:00000054      System::IsLibrary
 0003:00000055      System::IsConsole
 0003:00000056      System::IsMultiThread
 0003:00000057      System::FileMode
 0003:00000058      System::Test8086
 0003:00000059      System::Test8087
 0003:0000005A      System::TestFDIV
 0003:0000005C      System::Input
 0003:00000228      System::Output
 0003:000003F4      System::TlsIndex
 0003:000003F8      System::TlsIndex4
 0003:000003FC      System::TlsLast
 0003:00000400      System::Unassigned
 0003:00000410      System::Null
 0003:00000420      System::AllocMemCount
 0003:00000424      System::AllocMemSize
 0003:000004BC      @B131_2
 0003:000004BC      Sysutils::CurrencyString
 0003:000004C0      Sysutils::CurrencyFormat
 0003:000004C1      Sysutils::NegCurrFormat
 0003:000004C2      Sysutils::ThousandSeparator
 0003:000004C3      Sysutils::DecimalSeparator
 0003:000004C4      Sysutils::CurrencyDecimals
 0003:000004C5      Sysutils::DateSeparator
 0003:000004C8      Sysutils::ShortDateFormat
 0003:000004CC      Sysutils::LongDateFormat
 0003:000004D0      Sysutils::TimeSeparator
 0003:000004D4      Sysutils::TimeAMString
 0003:000004D8      Sysutils::TimePMString
 0003:000004DC      Sysutils::ShortTimeFormat
 0003:000004E0      Sysutils::LongTimeFormat
 0003:000004E4      Sysutils::ShortMonthNames
 0003:00000514      Sysutils::LongMonthNames
 0003:00000544      Sysutils::ShortDayNames
 0003:00000560      Sysutils::LongDayNames
 0003:0000057C      Sysutils::SysLocale
 0003:00000590      @B139_1
 0003:00000594      @B559_2
 0003:00000594      __DestructorCountPtr
 0003:0000059C      __HandlerPtr
 0003:0000059C      @B563_2
 0003:000005A0      __UserHandlerPtr
 0003:000005A4      @B565_2
 0003:000005A8      ___pCPPdebugHook
 0003:000005B4      @B567_2
 0003:000005B8      __pidtab
 0003:000005B8      @B592_2
 0003:00000680      __handles
 0003:00000748      @B624_1
 0003:0000074C      @B661_2
 0003:00000754      @B754_2
 0003:0000075C      _cin
 0003:0000075C      @B799_2
 0003:000007A8      _cout
 0003:000007F0      _cerr
 0003:00000838      _clog
 0003:00000880      ___stdin_streambuf
 0003:00000884      ___stdout_streambuf
 0003:00000888      ___stderr_streambuf
 0003:0000088C      __mbctype
 0003:0000088C      @B1201_2
 0003:00000990      __mbcsCodePage
 0003:00000994      __new_handler
 0003:00000994      @B1280_2
 0003:00000998      @B1293_2
 0003:00000A98      @B1304_2
 0003:00000AB0      @B1328_2
 0003:00000AB0      __atexittbl
 0003:00000B30      @B1336_2
 0003:00000B30      __argv
 0003:00000B3C      @B1370_2
 0003:00000B3C      __environ
 0003:00000B44      __envsize
 0003:00000B48      __env_lock
 0003:00000B4C      __dll_table
 0003:00000B4C      @B1378_1
 0003:00000B54      __ExcRegPtr
 0003:00000B58      __osenv
 0003:00000B5C      __wosenv
 0003:00000B60      __oscmd
 0003:00000B64      __woscmd
 0003:00000B68      ___exit_lock
 0003:00000B6C      __argc
 0003:00000B70      __C0argc
 0003:00000B74      __C0argv
 0003:00000B78      __C0environ
 0003:00000B7C      __wC0argv
 0003:00000B80      __wC0environ
 0003:00000B84      __exe_table
 0003:00000B8C      __stkbase
 0003:00000B90      __isWindows
 0003:00000B94      __stkindex
 0003:00000B94      @B1455_1
 0003:00000B98      __tlsindex
 0003:00000B9C      @B1457_2
 0003:00000BA4      @B1460_2
 0004:00000000      @T130_3
 0004:00000000      System::RaiseList
 0004:00000004      System::InOutRes
 0004:00000008      @T559_3
 0004:00000008      ___xxInfo
